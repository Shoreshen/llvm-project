; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; RUN: llc -mtriple=amdgcn -mcpu=tahiti < %s | FileCheck -check-prefix=S_SI %s
; RUN: llc -mtriple=amdgcn -mcpu=tonga < %s | FileCheck -check-prefix=S_VI %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx900 < %s | FileCheck -check-prefix=S_GFX9 %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx1100 < %s | FileCheck -check-prefix=S_GFX11 %s

define inreg <12 x float> @bitcast_v12i32_to_v12f32_inreg(<12 x i32> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12i32_to_v12f32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB0_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB0_3
; S_SI-NEXT:  .LBB0_2: ; %cmp.true
; S_SI-NEXT:    s_add_i32 s27, s27, 3
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    s_add_i32 s25, s25, 3
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    s_add_i32 s23, s23, 3
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    s_add_i32 s21, s21, 3
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    s_add_i32 s19, s19, 3
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    s_add_i32 s17, s17, 3
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:  .LBB0_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB0_4:
; S_SI-NEXT:    s_branch .LBB0_2
;
; S_VI-LABEL: bitcast_v12i32_to_v12f32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB0_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB0_3
; S_VI-NEXT:  .LBB0_2: ; %cmp.true
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_add_i32 s26, s26, 3
; S_VI-NEXT:    s_add_i32 s25, s25, 3
; S_VI-NEXT:    s_add_i32 s24, s24, 3
; S_VI-NEXT:    s_add_i32 s23, s23, 3
; S_VI-NEXT:    s_add_i32 s22, s22, 3
; S_VI-NEXT:    s_add_i32 s21, s21, 3
; S_VI-NEXT:    s_add_i32 s20, s20, 3
; S_VI-NEXT:    s_add_i32 s19, s19, 3
; S_VI-NEXT:    s_add_i32 s18, s18, 3
; S_VI-NEXT:    s_add_i32 s17, s17, 3
; S_VI-NEXT:    s_add_i32 s16, s16, 3
; S_VI-NEXT:  .LBB0_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB0_4:
; S_VI-NEXT:    s_branch .LBB0_2
;
; S_GFX9-LABEL: bitcast_v12i32_to_v12f32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB0_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB0_3
; S_GFX9-NEXT:  .LBB0_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_i32 s27, s27, 3
; S_GFX9-NEXT:    s_add_i32 s26, s26, 3
; S_GFX9-NEXT:    s_add_i32 s25, s25, 3
; S_GFX9-NEXT:    s_add_i32 s24, s24, 3
; S_GFX9-NEXT:    s_add_i32 s23, s23, 3
; S_GFX9-NEXT:    s_add_i32 s22, s22, 3
; S_GFX9-NEXT:    s_add_i32 s21, s21, 3
; S_GFX9-NEXT:    s_add_i32 s20, s20, 3
; S_GFX9-NEXT:    s_add_i32 s19, s19, 3
; S_GFX9-NEXT:    s_add_i32 s18, s18, 3
; S_GFX9-NEXT:    s_add_i32 s17, s17, 3
; S_GFX9-NEXT:    s_add_i32 s16, s16, 3
; S_GFX9-NEXT:  .LBB0_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB0_4:
; S_GFX9-NEXT:    s_branch .LBB0_2
;
; S_GFX11-LABEL: bitcast_v12i32_to_v12f32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB0_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB0_3
; S_GFX11-NEXT:  .LBB0_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_i32 s23, s23, 3
; S_GFX11-NEXT:    s_add_i32 s22, s22, 3
; S_GFX11-NEXT:    s_add_i32 s21, s21, 3
; S_GFX11-NEXT:    s_add_i32 s20, s20, 3
; S_GFX11-NEXT:    s_add_i32 s19, s19, 3
; S_GFX11-NEXT:    s_add_i32 s18, s18, 3
; S_GFX11-NEXT:    s_add_i32 s17, s17, 3
; S_GFX11-NEXT:    s_add_i32 s16, s16, 3
; S_GFX11-NEXT:    s_add_i32 s3, s3, 3
; S_GFX11-NEXT:    s_add_i32 s2, s2, 3
; S_GFX11-NEXT:    s_add_i32 s1, s1, 3
; S_GFX11-NEXT:    s_add_i32 s0, s0, 3
; S_GFX11-NEXT:  .LBB0_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB0_4:
; S_GFX11-NEXT:    s_branch .LBB0_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <12 x i32> %a, splat (i32 3)
  %a2 = bitcast <12 x i32> %a1 to <12 x float>
  br label %end

cmp.false:
  %a3 = bitcast <12 x i32> %a to <12 x float>
  br label %end

end:
  %phi = phi <12 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x float> %phi
}

define inreg <12 x i32> @bitcast_v12f32_to_v12i32_inreg(<12 x float> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12f32_to_v12i32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB1_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB1_4
; S_SI-NEXT:  .LBB1_2: ; %cmp.true
; S_SI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_SI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_SI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_SI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_SI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_SI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_SI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_SI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_SI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_SI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_SI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_SI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB1_3:
; S_SI-NEXT:    s_branch .LBB1_2
; S_SI-NEXT:  .LBB1_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v12f32_to_v12i32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB1_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB1_4
; S_VI-NEXT:  .LBB1_2: ; %cmp.true
; S_VI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_VI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_VI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_VI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_VI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_VI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_VI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_VI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_VI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_VI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_VI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_VI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB1_3:
; S_VI-NEXT:    s_branch .LBB1_2
; S_VI-NEXT:  .LBB1_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v12f32_to_v12i32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB1_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB1_4
; S_GFX9-NEXT:  .LBB1_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB1_3:
; S_GFX9-NEXT:    s_branch .LBB1_2
; S_GFX9-NEXT:  .LBB1_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v12f32_to_v12i32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB1_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB1_4
; S_GFX11-NEXT:  .LBB1_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f32_e64 v11, s23, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v9, s21, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v8, s20, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v7, s19, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v6, s18, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v4, s16, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v3, s15, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v2, s14, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v1, s13, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v0, s12, 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB1_3:
; S_GFX11-NEXT:    s_branch .LBB1_2
; S_GFX11-NEXT:  .LBB1_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <12 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <12 x float> %a1 to <12 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <12 x float> %a to <12 x i32>
  br label %end

end:
  %phi = phi <12 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x i32> %phi
}

define inreg <6 x double> @bitcast_v12i32_to_v6f64_inreg(<12 x i32> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12i32_to_v6f64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB2_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB2_3
; S_SI-NEXT:  .LBB2_2: ; %cmp.true
; S_SI-NEXT:    s_add_i32 s27, s27, 3
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    s_add_i32 s25, s25, 3
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    s_add_i32 s23, s23, 3
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    s_add_i32 s21, s21, 3
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    s_add_i32 s19, s19, 3
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    s_add_i32 s17, s17, 3
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:  .LBB2_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB2_4:
; S_SI-NEXT:    s_branch .LBB2_2
;
; S_VI-LABEL: bitcast_v12i32_to_v6f64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB2_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB2_3
; S_VI-NEXT:  .LBB2_2: ; %cmp.true
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_add_i32 s26, s26, 3
; S_VI-NEXT:    s_add_i32 s25, s25, 3
; S_VI-NEXT:    s_add_i32 s24, s24, 3
; S_VI-NEXT:    s_add_i32 s23, s23, 3
; S_VI-NEXT:    s_add_i32 s22, s22, 3
; S_VI-NEXT:    s_add_i32 s21, s21, 3
; S_VI-NEXT:    s_add_i32 s20, s20, 3
; S_VI-NEXT:    s_add_i32 s19, s19, 3
; S_VI-NEXT:    s_add_i32 s18, s18, 3
; S_VI-NEXT:    s_add_i32 s17, s17, 3
; S_VI-NEXT:    s_add_i32 s16, s16, 3
; S_VI-NEXT:  .LBB2_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB2_4:
; S_VI-NEXT:    s_branch .LBB2_2
;
; S_GFX9-LABEL: bitcast_v12i32_to_v6f64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB2_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB2_3
; S_GFX9-NEXT:  .LBB2_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_i32 s27, s27, 3
; S_GFX9-NEXT:    s_add_i32 s26, s26, 3
; S_GFX9-NEXT:    s_add_i32 s25, s25, 3
; S_GFX9-NEXT:    s_add_i32 s24, s24, 3
; S_GFX9-NEXT:    s_add_i32 s23, s23, 3
; S_GFX9-NEXT:    s_add_i32 s22, s22, 3
; S_GFX9-NEXT:    s_add_i32 s21, s21, 3
; S_GFX9-NEXT:    s_add_i32 s20, s20, 3
; S_GFX9-NEXT:    s_add_i32 s19, s19, 3
; S_GFX9-NEXT:    s_add_i32 s18, s18, 3
; S_GFX9-NEXT:    s_add_i32 s17, s17, 3
; S_GFX9-NEXT:    s_add_i32 s16, s16, 3
; S_GFX9-NEXT:  .LBB2_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB2_4:
; S_GFX9-NEXT:    s_branch .LBB2_2
;
; S_GFX11-LABEL: bitcast_v12i32_to_v6f64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB2_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB2_3
; S_GFX11-NEXT:  .LBB2_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_i32 s23, s23, 3
; S_GFX11-NEXT:    s_add_i32 s22, s22, 3
; S_GFX11-NEXT:    s_add_i32 s21, s21, 3
; S_GFX11-NEXT:    s_add_i32 s20, s20, 3
; S_GFX11-NEXT:    s_add_i32 s19, s19, 3
; S_GFX11-NEXT:    s_add_i32 s18, s18, 3
; S_GFX11-NEXT:    s_add_i32 s17, s17, 3
; S_GFX11-NEXT:    s_add_i32 s16, s16, 3
; S_GFX11-NEXT:    s_add_i32 s3, s3, 3
; S_GFX11-NEXT:    s_add_i32 s2, s2, 3
; S_GFX11-NEXT:    s_add_i32 s1, s1, 3
; S_GFX11-NEXT:    s_add_i32 s0, s0, 3
; S_GFX11-NEXT:  .LBB2_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB2_4:
; S_GFX11-NEXT:    s_branch .LBB2_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <12 x i32> %a, splat (i32 3)
  %a2 = bitcast <12 x i32> %a1 to <6 x double>
  br label %end

cmp.false:
  %a3 = bitcast <12 x i32> %a to <6 x double>
  br label %end

end:
  %phi = phi <6 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x double> %phi
}

define inreg <12 x i32> @bitcast_v6f64_to_v12i32_inreg(<6 x double> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6f64_to_v12i32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB3_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB3_4
; S_SI-NEXT:  .LBB3_2: ; %cmp.true
; S_SI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_SI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_SI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_SI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_SI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_SI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB3_3:
; S_SI-NEXT:    s_branch .LBB3_2
; S_SI-NEXT:  .LBB3_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v6f64_to_v12i32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB3_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB3_4
; S_VI-NEXT:  .LBB3_2: ; %cmp.true
; S_VI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_VI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_VI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_VI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_VI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_VI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB3_3:
; S_VI-NEXT:    s_branch .LBB3_2
; S_VI-NEXT:  .LBB3_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v6f64_to_v12i32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB3_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB3_4
; S_GFX9-NEXT:  .LBB3_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_GFX9-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_GFX9-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_GFX9-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_GFX9-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_GFX9-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB3_3:
; S_GFX9-NEXT:    s_branch .LBB3_2
; S_GFX9-NEXT:  .LBB3_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v6f64_to_v12i32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB3_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB3_4
; S_GFX11-NEXT:  .LBB3_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f64 v[10:11], s[22:23], 1.0
; S_GFX11-NEXT:    v_add_f64 v[8:9], s[20:21], 1.0
; S_GFX11-NEXT:    v_add_f64 v[6:7], s[18:19], 1.0
; S_GFX11-NEXT:    v_add_f64 v[4:5], s[16:17], 1.0
; S_GFX11-NEXT:    v_add_f64 v[2:3], s[14:15], 1.0
; S_GFX11-NEXT:    v_add_f64 v[0:1], s[12:13], 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB3_3:
; S_GFX11-NEXT:    s_branch .LBB3_2
; S_GFX11-NEXT:  .LBB3_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <6 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <6 x double> %a1 to <12 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <6 x double> %a to <12 x i32>
  br label %end

end:
  %phi = phi <12 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x i32> %phi
}

define inreg <6 x i64> @bitcast_v12i32_to_v6i64_inreg(<12 x i32> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12i32_to_v6i64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB4_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB4_3
; S_SI-NEXT:  .LBB4_2: ; %cmp.true
; S_SI-NEXT:    s_add_i32 s27, s27, 3
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    s_add_i32 s25, s25, 3
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    s_add_i32 s23, s23, 3
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    s_add_i32 s21, s21, 3
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    s_add_i32 s19, s19, 3
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    s_add_i32 s17, s17, 3
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:  .LBB4_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB4_4:
; S_SI-NEXT:    s_branch .LBB4_2
;
; S_VI-LABEL: bitcast_v12i32_to_v6i64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB4_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB4_3
; S_VI-NEXT:  .LBB4_2: ; %cmp.true
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_add_i32 s26, s26, 3
; S_VI-NEXT:    s_add_i32 s25, s25, 3
; S_VI-NEXT:    s_add_i32 s24, s24, 3
; S_VI-NEXT:    s_add_i32 s23, s23, 3
; S_VI-NEXT:    s_add_i32 s22, s22, 3
; S_VI-NEXT:    s_add_i32 s21, s21, 3
; S_VI-NEXT:    s_add_i32 s20, s20, 3
; S_VI-NEXT:    s_add_i32 s19, s19, 3
; S_VI-NEXT:    s_add_i32 s18, s18, 3
; S_VI-NEXT:    s_add_i32 s17, s17, 3
; S_VI-NEXT:    s_add_i32 s16, s16, 3
; S_VI-NEXT:  .LBB4_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB4_4:
; S_VI-NEXT:    s_branch .LBB4_2
;
; S_GFX9-LABEL: bitcast_v12i32_to_v6i64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB4_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB4_3
; S_GFX9-NEXT:  .LBB4_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_i32 s27, s27, 3
; S_GFX9-NEXT:    s_add_i32 s26, s26, 3
; S_GFX9-NEXT:    s_add_i32 s25, s25, 3
; S_GFX9-NEXT:    s_add_i32 s24, s24, 3
; S_GFX9-NEXT:    s_add_i32 s23, s23, 3
; S_GFX9-NEXT:    s_add_i32 s22, s22, 3
; S_GFX9-NEXT:    s_add_i32 s21, s21, 3
; S_GFX9-NEXT:    s_add_i32 s20, s20, 3
; S_GFX9-NEXT:    s_add_i32 s19, s19, 3
; S_GFX9-NEXT:    s_add_i32 s18, s18, 3
; S_GFX9-NEXT:    s_add_i32 s17, s17, 3
; S_GFX9-NEXT:    s_add_i32 s16, s16, 3
; S_GFX9-NEXT:  .LBB4_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB4_4:
; S_GFX9-NEXT:    s_branch .LBB4_2
;
; S_GFX11-LABEL: bitcast_v12i32_to_v6i64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB4_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB4_3
; S_GFX11-NEXT:  .LBB4_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_i32 s23, s23, 3
; S_GFX11-NEXT:    s_add_i32 s22, s22, 3
; S_GFX11-NEXT:    s_add_i32 s21, s21, 3
; S_GFX11-NEXT:    s_add_i32 s20, s20, 3
; S_GFX11-NEXT:    s_add_i32 s19, s19, 3
; S_GFX11-NEXT:    s_add_i32 s18, s18, 3
; S_GFX11-NEXT:    s_add_i32 s17, s17, 3
; S_GFX11-NEXT:    s_add_i32 s16, s16, 3
; S_GFX11-NEXT:    s_add_i32 s3, s3, 3
; S_GFX11-NEXT:    s_add_i32 s2, s2, 3
; S_GFX11-NEXT:    s_add_i32 s1, s1, 3
; S_GFX11-NEXT:    s_add_i32 s0, s0, 3
; S_GFX11-NEXT:  .LBB4_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB4_4:
; S_GFX11-NEXT:    s_branch .LBB4_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <12 x i32> %a, splat (i32 3)
  %a2 = bitcast <12 x i32> %a1 to <6 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <12 x i32> %a to <6 x i64>
  br label %end

end:
  %phi = phi <6 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x i64> %phi
}

define inreg <12 x i32> @bitcast_v6i64_to_v12i32_inreg(<6 x i64> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6i64_to_v12i32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB5_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB5_3
; S_SI-NEXT:  .LBB5_2: ; %cmp.true
; S_SI-NEXT:    s_add_u32 s26, s26, 3
; S_SI-NEXT:    s_addc_u32 s27, s27, 0
; S_SI-NEXT:    s_add_u32 s24, s24, 3
; S_SI-NEXT:    s_addc_u32 s25, s25, 0
; S_SI-NEXT:    s_add_u32 s22, s22, 3
; S_SI-NEXT:    s_addc_u32 s23, s23, 0
; S_SI-NEXT:    s_add_u32 s20, s20, 3
; S_SI-NEXT:    s_addc_u32 s21, s21, 0
; S_SI-NEXT:    s_add_u32 s18, s18, 3
; S_SI-NEXT:    s_addc_u32 s19, s19, 0
; S_SI-NEXT:    s_add_u32 s16, s16, 3
; S_SI-NEXT:    s_addc_u32 s17, s17, 0
; S_SI-NEXT:  .LBB5_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB5_4:
; S_SI-NEXT:    s_branch .LBB5_2
;
; S_VI-LABEL: bitcast_v6i64_to_v12i32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB5_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB5_3
; S_VI-NEXT:  .LBB5_2: ; %cmp.true
; S_VI-NEXT:    s_add_u32 s26, s26, 3
; S_VI-NEXT:    s_addc_u32 s27, s27, 0
; S_VI-NEXT:    s_add_u32 s24, s24, 3
; S_VI-NEXT:    s_addc_u32 s25, s25, 0
; S_VI-NEXT:    s_add_u32 s22, s22, 3
; S_VI-NEXT:    s_addc_u32 s23, s23, 0
; S_VI-NEXT:    s_add_u32 s20, s20, 3
; S_VI-NEXT:    s_addc_u32 s21, s21, 0
; S_VI-NEXT:    s_add_u32 s18, s18, 3
; S_VI-NEXT:    s_addc_u32 s19, s19, 0
; S_VI-NEXT:    s_add_u32 s16, s16, 3
; S_VI-NEXT:    s_addc_u32 s17, s17, 0
; S_VI-NEXT:  .LBB5_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB5_4:
; S_VI-NEXT:    s_branch .LBB5_2
;
; S_GFX9-LABEL: bitcast_v6i64_to_v12i32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB5_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB5_3
; S_GFX9-NEXT:  .LBB5_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_u32 s26, s26, 3
; S_GFX9-NEXT:    s_addc_u32 s27, s27, 0
; S_GFX9-NEXT:    s_add_u32 s24, s24, 3
; S_GFX9-NEXT:    s_addc_u32 s25, s25, 0
; S_GFX9-NEXT:    s_add_u32 s22, s22, 3
; S_GFX9-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX9-NEXT:    s_add_u32 s20, s20, 3
; S_GFX9-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX9-NEXT:    s_add_u32 s18, s18, 3
; S_GFX9-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX9-NEXT:    s_add_u32 s16, s16, 3
; S_GFX9-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX9-NEXT:  .LBB5_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB5_4:
; S_GFX9-NEXT:    s_branch .LBB5_2
;
; S_GFX11-LABEL: bitcast_v6i64_to_v12i32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB5_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB5_3
; S_GFX11-NEXT:  .LBB5_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_u32 s22, s22, 3
; S_GFX11-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX11-NEXT:    s_add_u32 s20, s20, 3
; S_GFX11-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX11-NEXT:    s_add_u32 s18, s18, 3
; S_GFX11-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX11-NEXT:    s_add_u32 s16, s16, 3
; S_GFX11-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX11-NEXT:    s_add_u32 s2, s2, 3
; S_GFX11-NEXT:    s_addc_u32 s3, s3, 0
; S_GFX11-NEXT:    s_add_u32 s0, s0, 3
; S_GFX11-NEXT:    s_addc_u32 s1, s1, 0
; S_GFX11-NEXT:  .LBB5_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB5_4:
; S_GFX11-NEXT:    s_branch .LBB5_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <6 x i64> %a, splat (i64 3)
  %a2 = bitcast <6 x i64> %a1 to <12 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <6 x i64> %a to <12 x i32>
  br label %end

end:
  %phi = phi <12 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x i32> %phi
}

define inreg <24 x i16> @bitcast_v12i32_to_v24i16_inreg(<12 x i32> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12i32_to_v24i16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB6_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_mov_b32_e32 v0, s26
; S_SI-NEXT:    v_alignbit_b32 v21, s27, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s24
; S_SI-NEXT:    v_alignbit_b32 v17, s25, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s22
; S_SI-NEXT:    v_alignbit_b32 v13, s23, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s20
; S_SI-NEXT:    v_alignbit_b32 v9, s21, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s18
; S_SI-NEXT:    v_alignbit_b32 v5, s19, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_alignbit_b32 v1, s17, v0, 16
; S_SI-NEXT:    s_lshr_b32 s6, s27, 16
; S_SI-NEXT:    s_lshr_b32 s7, s25, 16
; S_SI-NEXT:    s_lshr_b32 s8, s23, 16
; S_SI-NEXT:    s_lshr_b32 s9, s21, 16
; S_SI-NEXT:    s_lshr_b32 s10, s19, 16
; S_SI-NEXT:    s_lshr_b32 s11, s17, 16
; S_SI-NEXT:    s_cbranch_execnz .LBB6_3
; S_SI-NEXT:  .LBB6_2: ; %cmp.true
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    s_add_i32 s27, s27, 3
; S_SI-NEXT:    v_mov_b32_e32 v0, s26
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    s_add_i32 s25, s25, 3
; S_SI-NEXT:    v_alignbit_b32 v21, s27, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s24
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    s_add_i32 s23, s23, 3
; S_SI-NEXT:    v_alignbit_b32 v17, s25, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s22
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    s_add_i32 s21, s21, 3
; S_SI-NEXT:    v_alignbit_b32 v13, s23, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s20
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    s_add_i32 s19, s19, 3
; S_SI-NEXT:    v_alignbit_b32 v9, s21, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s18
; S_SI-NEXT:    s_add_i32 s17, s17, 3
; S_SI-NEXT:    v_alignbit_b32 v5, s19, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_alignbit_b32 v1, s17, v0, 16
; S_SI-NEXT:    s_lshr_b32 s6, s27, 16
; S_SI-NEXT:    s_lshr_b32 s7, s25, 16
; S_SI-NEXT:    s_lshr_b32 s8, s23, 16
; S_SI-NEXT:    s_lshr_b32 s9, s21, 16
; S_SI-NEXT:    s_lshr_b32 s10, s19, 16
; S_SI-NEXT:    s_lshr_b32 s11, s17, 16
; S_SI-NEXT:  .LBB6_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v2, s17
; S_SI-NEXT:    v_mov_b32_e32 v3, s11
; S_SI-NEXT:    v_mov_b32_e32 v4, s18
; S_SI-NEXT:    v_mov_b32_e32 v6, s19
; S_SI-NEXT:    v_mov_b32_e32 v7, s10
; S_SI-NEXT:    v_mov_b32_e32 v8, s20
; S_SI-NEXT:    v_mov_b32_e32 v10, s21
; S_SI-NEXT:    v_mov_b32_e32 v11, s9
; S_SI-NEXT:    v_mov_b32_e32 v12, s22
; S_SI-NEXT:    v_mov_b32_e32 v14, s23
; S_SI-NEXT:    v_mov_b32_e32 v15, s8
; S_SI-NEXT:    v_mov_b32_e32 v16, s24
; S_SI-NEXT:    v_mov_b32_e32 v18, s25
; S_SI-NEXT:    v_mov_b32_e32 v19, s7
; S_SI-NEXT:    v_mov_b32_e32 v20, s26
; S_SI-NEXT:    v_mov_b32_e32 v22, s27
; S_SI-NEXT:    v_mov_b32_e32 v23, s6
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB6_4:
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $sgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $sgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $sgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $sgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $sgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $sgpr6
; S_SI-NEXT:    s_branch .LBB6_2
;
; S_VI-LABEL: bitcast_v12i32_to_v24i16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB6_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB6_3
; S_VI-NEXT:  .LBB6_2: ; %cmp.true
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_add_i32 s26, s26, 3
; S_VI-NEXT:    s_add_i32 s25, s25, 3
; S_VI-NEXT:    s_add_i32 s24, s24, 3
; S_VI-NEXT:    s_add_i32 s23, s23, 3
; S_VI-NEXT:    s_add_i32 s22, s22, 3
; S_VI-NEXT:    s_add_i32 s21, s21, 3
; S_VI-NEXT:    s_add_i32 s20, s20, 3
; S_VI-NEXT:    s_add_i32 s19, s19, 3
; S_VI-NEXT:    s_add_i32 s18, s18, 3
; S_VI-NEXT:    s_add_i32 s17, s17, 3
; S_VI-NEXT:    s_add_i32 s16, s16, 3
; S_VI-NEXT:  .LBB6_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB6_4:
; S_VI-NEXT:    s_branch .LBB6_2
;
; S_GFX9-LABEL: bitcast_v12i32_to_v24i16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB6_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB6_3
; S_GFX9-NEXT:  .LBB6_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_i32 s27, s27, 3
; S_GFX9-NEXT:    s_add_i32 s26, s26, 3
; S_GFX9-NEXT:    s_add_i32 s25, s25, 3
; S_GFX9-NEXT:    s_add_i32 s24, s24, 3
; S_GFX9-NEXT:    s_add_i32 s23, s23, 3
; S_GFX9-NEXT:    s_add_i32 s22, s22, 3
; S_GFX9-NEXT:    s_add_i32 s21, s21, 3
; S_GFX9-NEXT:    s_add_i32 s20, s20, 3
; S_GFX9-NEXT:    s_add_i32 s19, s19, 3
; S_GFX9-NEXT:    s_add_i32 s18, s18, 3
; S_GFX9-NEXT:    s_add_i32 s17, s17, 3
; S_GFX9-NEXT:    s_add_i32 s16, s16, 3
; S_GFX9-NEXT:  .LBB6_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB6_4:
; S_GFX9-NEXT:    s_branch .LBB6_2
;
; S_GFX11-LABEL: bitcast_v12i32_to_v24i16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB6_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB6_3
; S_GFX11-NEXT:  .LBB6_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_i32 s23, s23, 3
; S_GFX11-NEXT:    s_add_i32 s22, s22, 3
; S_GFX11-NEXT:    s_add_i32 s21, s21, 3
; S_GFX11-NEXT:    s_add_i32 s20, s20, 3
; S_GFX11-NEXT:    s_add_i32 s19, s19, 3
; S_GFX11-NEXT:    s_add_i32 s18, s18, 3
; S_GFX11-NEXT:    s_add_i32 s17, s17, 3
; S_GFX11-NEXT:    s_add_i32 s16, s16, 3
; S_GFX11-NEXT:    s_add_i32 s3, s3, 3
; S_GFX11-NEXT:    s_add_i32 s2, s2, 3
; S_GFX11-NEXT:    s_add_i32 s1, s1, 3
; S_GFX11-NEXT:    s_add_i32 s0, s0, 3
; S_GFX11-NEXT:  .LBB6_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB6_4:
; S_GFX11-NEXT:    s_branch .LBB6_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <12 x i32> %a, splat (i32 3)
  %a2 = bitcast <12 x i32> %a1 to <24 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <12 x i32> %a to <24 x i16>
  br label %end

end:
  %phi = phi <24 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x i16> %phi
}

define inreg <12 x i32> @bitcast_v24i16_to_v12i32_inreg(<24 x i16> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24i16_to_v12i32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    v_mov_b32_e32 v12, v8
; S_SI-NEXT:    v_mov_b32_e32 v13, v6
; S_SI-NEXT:    v_mov_b32_e32 v14, v4
; S_SI-NEXT:    v_mov_b32_e32 v15, v2
; S_SI-NEXT:    v_mov_b32_e32 v16, v0
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v20, 16, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v18, 16, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v9
; S_SI-NEXT:    s_cbranch_scc0 .LBB7_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_or_b32 s4, s4, s5
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_or_b32 s5, s5, s6
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_or_b32 s6, s6, s7
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v16
; S_SI-NEXT:    s_or_b32 s7, s7, s8
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    v_or_b32_e32 v7, v0, v21
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v14
; S_SI-NEXT:    s_or_b32 s8, s8, s9
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    v_or_b32_e32 v9, v0, v19
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v13
; S_SI-NEXT:    s_or_b32 s9, s9, s10
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_and_b32_e32 v1, 0xffff, v15
; S_SI-NEXT:    v_or_b32_e32 v10, v0, v18
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v12
; S_SI-NEXT:    s_or_b32 s10, s10, s11
; S_SI-NEXT:    v_or_b32_e32 v8, v1, v20
; S_SI-NEXT:    v_or_b32_e32 v11, v0, v17
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:    s_cbranch_execnz .LBB7_3
; S_SI-NEXT:  .LBB7_2: ; %cmp.true
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v16
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    v_or_b32_e32 v0, v21, v0
; S_SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v15
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v20, v0
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v14
; S_SI-NEXT:    s_or_b32 s4, s5, s4
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s5, s6, s5
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v19, v0
; S_SI-NEXT:    s_or_b32 s6, s7, s6
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v13
; S_SI-NEXT:    s_or_b32 s7, s8, s7
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s8, s9, s8
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    s_add_i32 s28, s28, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v18, v0
; S_SI-NEXT:    s_or_b32 s9, s10, s9
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v12
; S_SI-NEXT:    s_or_b32 s10, s11, s10
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s4, s4, 0x30000
; S_SI-NEXT:    s_add_i32 s5, s5, 0x30000
; S_SI-NEXT:    s_add_i32 s6, s6, 0x30000
; S_SI-NEXT:    s_add_i32 s7, s7, 0x30000
; S_SI-NEXT:    s_add_i32 s8, s8, 0x30000
; S_SI-NEXT:    s_add_i32 s9, s9, 0x30000
; S_SI-NEXT:    s_add_i32 s10, s10, 0x30000
; S_SI-NEXT:    v_or_b32_e32 v0, v17, v0
; S_SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:  .LBB7_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB7_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; S_SI-NEXT:    s_branch .LBB7_2
;
; S_VI-LABEL: bitcast_v24i16_to_v12i32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB7_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB7_3
; S_VI-NEXT:  .LBB7_2: ; %cmp.true
; S_VI-NEXT:    s_and_b32 s4, s16, 0xffff0000
; S_VI-NEXT:    s_add_i32 s5, s16, 3
; S_VI-NEXT:    s_and_b32 s6, s17, 0xffff0000
; S_VI-NEXT:    s_add_i32 s7, s17, 3
; S_VI-NEXT:    s_and_b32 s8, s18, 0xffff0000
; S_VI-NEXT:    s_add_i32 s9, s18, 3
; S_VI-NEXT:    s_and_b32 s10, s19, 0xffff0000
; S_VI-NEXT:    s_add_i32 s11, s19, 3
; S_VI-NEXT:    s_and_b32 s12, s20, 0xffff0000
; S_VI-NEXT:    s_add_i32 s13, s20, 3
; S_VI-NEXT:    s_and_b32 s14, s21, 0xffff0000
; S_VI-NEXT:    s_add_i32 s15, s21, 3
; S_VI-NEXT:    s_and_b32 s16, s22, 0xffff0000
; S_VI-NEXT:    s_add_i32 s17, s22, 3
; S_VI-NEXT:    s_and_b32 s18, s23, 0xffff0000
; S_VI-NEXT:    s_add_i32 s19, s23, 3
; S_VI-NEXT:    s_and_b32 s20, s24, 0xffff0000
; S_VI-NEXT:    s_add_i32 s21, s24, 3
; S_VI-NEXT:    s_and_b32 s22, s25, 0xffff0000
; S_VI-NEXT:    s_add_i32 s23, s25, 3
; S_VI-NEXT:    s_and_b32 s24, s26, 0xffff0000
; S_VI-NEXT:    s_add_i32 s25, s26, 3
; S_VI-NEXT:    s_and_b32 s26, s27, 0xffff0000
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_and_b32 s27, s27, 0xffff
; S_VI-NEXT:    s_and_b32 s25, s25, 0xffff
; S_VI-NEXT:    s_and_b32 s23, s23, 0xffff
; S_VI-NEXT:    s_and_b32 s21, s21, 0xffff
; S_VI-NEXT:    s_and_b32 s19, s19, 0xffff
; S_VI-NEXT:    s_and_b32 s17, s17, 0xffff
; S_VI-NEXT:    s_and_b32 s15, s15, 0xffff
; S_VI-NEXT:    s_and_b32 s13, s13, 0xffff
; S_VI-NEXT:    s_and_b32 s11, s11, 0xffff
; S_VI-NEXT:    s_and_b32 s9, s9, 0xffff
; S_VI-NEXT:    s_and_b32 s7, s7, 0xffff
; S_VI-NEXT:    s_and_b32 s5, s5, 0xffff
; S_VI-NEXT:    s_or_b32 s26, s26, s27
; S_VI-NEXT:    s_or_b32 s24, s24, s25
; S_VI-NEXT:    s_or_b32 s22, s22, s23
; S_VI-NEXT:    s_or_b32 s20, s20, s21
; S_VI-NEXT:    s_or_b32 s18, s18, s19
; S_VI-NEXT:    s_or_b32 s16, s16, s17
; S_VI-NEXT:    s_or_b32 s14, s14, s15
; S_VI-NEXT:    s_or_b32 s12, s12, s13
; S_VI-NEXT:    s_or_b32 s10, s10, s11
; S_VI-NEXT:    s_or_b32 s8, s8, s9
; S_VI-NEXT:    s_or_b32 s6, s6, s7
; S_VI-NEXT:    s_or_b32 s4, s4, s5
; S_VI-NEXT:    s_add_i32 s27, s26, 0x30000
; S_VI-NEXT:    s_add_i32 s26, s24, 0x30000
; S_VI-NEXT:    s_add_i32 s25, s22, 0x30000
; S_VI-NEXT:    s_add_i32 s24, s20, 0x30000
; S_VI-NEXT:    s_add_i32 s23, s18, 0x30000
; S_VI-NEXT:    s_add_i32 s22, s16, 0x30000
; S_VI-NEXT:    s_add_i32 s21, s14, 0x30000
; S_VI-NEXT:    s_add_i32 s20, s12, 0x30000
; S_VI-NEXT:    s_add_i32 s19, s10, 0x30000
; S_VI-NEXT:    s_add_i32 s18, s8, 0x30000
; S_VI-NEXT:    s_add_i32 s17, s6, 0x30000
; S_VI-NEXT:    s_add_i32 s16, s4, 0x30000
; S_VI-NEXT:  .LBB7_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB7_4:
; S_VI-NEXT:    s_branch .LBB7_2
;
; S_GFX9-LABEL: bitcast_v24i16_to_v12i32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB7_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB7_4
; S_GFX9-NEXT:  .LBB7_2: ; %cmp.true
; S_GFX9-NEXT:    v_pk_add_u16 v11, s27, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v10, s26, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v9, s25, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v8, s24, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v7, s23, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v6, s22, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v5, s21, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v4, s20, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v3, s19, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v2, s18, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v1, s17, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v0, s16, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB7_3:
; S_GFX9-NEXT:    s_branch .LBB7_2
; S_GFX9-NEXT:  .LBB7_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24i16_to_v12i32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB7_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB7_4
; S_GFX11-NEXT:  .LBB7_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_u16 v11, s23, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v10, s22, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v9, s21, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v8, s20, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v7, s19, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v6, s18, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v5, s17, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v4, s16, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v3, s15, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v2, s14, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v1, s13, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v0, s12, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB7_3:
; S_GFX11-NEXT:    s_branch .LBB7_2
; S_GFX11-NEXT:  .LBB7_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <24 x i16> %a, splat (i16 3)
  %a2 = bitcast <24 x i16> %a1 to <12 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <24 x i16> %a to <12 x i32>
  br label %end

end:
  %phi = phi <12 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x i32> %phi
}

define inreg <24 x half> @bitcast_v12i32_to_v24f16_inreg(<12 x i32> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12i32_to_v24f16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB8_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_lshr_b32 s4, s27, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; S_SI-NEXT:    s_lshr_b32 s4, s26, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; S_SI-NEXT:    s_lshr_b32 s4, s25, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; S_SI-NEXT:    s_lshr_b32 s4, s24, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; S_SI-NEXT:    s_lshr_b32 s4, s23, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; S_SI-NEXT:    s_lshr_b32 s4, s22, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s4
; S_SI-NEXT:    s_lshr_b32 s4, s21, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s4
; S_SI-NEXT:    s_lshr_b32 s4, s20, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s4
; S_SI-NEXT:    s_lshr_b32 s4, s19, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s4
; S_SI-NEXT:    s_lshr_b32 s4, s18, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s4
; S_SI-NEXT:    s_lshr_b32 s4, s17, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s4
; S_SI-NEXT:    s_lshr_b32 s4, s16, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    s_cbranch_execnz .LBB8_3
; S_SI-NEXT:  .LBB8_2: ; %cmp.true
; S_SI-NEXT:    s_add_i32 s27, s27, 3
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    s_lshr_b32 s4, s27, 16
; S_SI-NEXT:    s_add_i32 s25, s25, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; S_SI-NEXT:    s_lshr_b32 s4, s26, 16
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; S_SI-NEXT:    s_lshr_b32 s4, s25, 16
; S_SI-NEXT:    s_add_i32 s23, s23, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; S_SI-NEXT:    s_lshr_b32 s4, s24, 16
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; S_SI-NEXT:    s_lshr_b32 s4, s23, 16
; S_SI-NEXT:    s_add_i32 s21, s21, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; S_SI-NEXT:    s_lshr_b32 s4, s22, 16
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s4
; S_SI-NEXT:    s_lshr_b32 s4, s21, 16
; S_SI-NEXT:    s_add_i32 s19, s19, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s4
; S_SI-NEXT:    s_lshr_b32 s4, s20, 16
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s4
; S_SI-NEXT:    s_lshr_b32 s4, s19, 16
; S_SI-NEXT:    s_add_i32 s17, s17, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s4
; S_SI-NEXT:    s_lshr_b32 s4, s18, 16
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s4
; S_SI-NEXT:    s_lshr_b32 s4, s17, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s4
; S_SI-NEXT:    s_lshr_b32 s4, s16, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; S_SI-NEXT:  .LBB8_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB8_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $vgpr2
; S_SI-NEXT:    ; implicit-def: $vgpr3
; S_SI-NEXT:    ; implicit-def: $vgpr4
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $vgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr12
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $vgpr14
; S_SI-NEXT:    ; implicit-def: $vgpr15
; S_SI-NEXT:    ; implicit-def: $vgpr16
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $vgpr18
; S_SI-NEXT:    ; implicit-def: $vgpr19
; S_SI-NEXT:    ; implicit-def: $vgpr20
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $vgpr22
; S_SI-NEXT:    ; implicit-def: $vgpr23
; S_SI-NEXT:    s_branch .LBB8_2
;
; S_VI-LABEL: bitcast_v12i32_to_v24f16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB8_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB8_3
; S_VI-NEXT:  .LBB8_2: ; %cmp.true
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_add_i32 s26, s26, 3
; S_VI-NEXT:    s_add_i32 s25, s25, 3
; S_VI-NEXT:    s_add_i32 s24, s24, 3
; S_VI-NEXT:    s_add_i32 s23, s23, 3
; S_VI-NEXT:    s_add_i32 s22, s22, 3
; S_VI-NEXT:    s_add_i32 s21, s21, 3
; S_VI-NEXT:    s_add_i32 s20, s20, 3
; S_VI-NEXT:    s_add_i32 s19, s19, 3
; S_VI-NEXT:    s_add_i32 s18, s18, 3
; S_VI-NEXT:    s_add_i32 s17, s17, 3
; S_VI-NEXT:    s_add_i32 s16, s16, 3
; S_VI-NEXT:  .LBB8_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB8_4:
; S_VI-NEXT:    s_branch .LBB8_2
;
; S_GFX9-LABEL: bitcast_v12i32_to_v24f16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB8_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB8_3
; S_GFX9-NEXT:  .LBB8_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_i32 s27, s27, 3
; S_GFX9-NEXT:    s_add_i32 s26, s26, 3
; S_GFX9-NEXT:    s_add_i32 s25, s25, 3
; S_GFX9-NEXT:    s_add_i32 s24, s24, 3
; S_GFX9-NEXT:    s_add_i32 s23, s23, 3
; S_GFX9-NEXT:    s_add_i32 s22, s22, 3
; S_GFX9-NEXT:    s_add_i32 s21, s21, 3
; S_GFX9-NEXT:    s_add_i32 s20, s20, 3
; S_GFX9-NEXT:    s_add_i32 s19, s19, 3
; S_GFX9-NEXT:    s_add_i32 s18, s18, 3
; S_GFX9-NEXT:    s_add_i32 s17, s17, 3
; S_GFX9-NEXT:    s_add_i32 s16, s16, 3
; S_GFX9-NEXT:  .LBB8_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB8_4:
; S_GFX9-NEXT:    s_branch .LBB8_2
;
; S_GFX11-LABEL: bitcast_v12i32_to_v24f16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB8_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB8_3
; S_GFX11-NEXT:  .LBB8_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_i32 s23, s23, 3
; S_GFX11-NEXT:    s_add_i32 s22, s22, 3
; S_GFX11-NEXT:    s_add_i32 s21, s21, 3
; S_GFX11-NEXT:    s_add_i32 s20, s20, 3
; S_GFX11-NEXT:    s_add_i32 s19, s19, 3
; S_GFX11-NEXT:    s_add_i32 s18, s18, 3
; S_GFX11-NEXT:    s_add_i32 s17, s17, 3
; S_GFX11-NEXT:    s_add_i32 s16, s16, 3
; S_GFX11-NEXT:    s_add_i32 s3, s3, 3
; S_GFX11-NEXT:    s_add_i32 s2, s2, 3
; S_GFX11-NEXT:    s_add_i32 s1, s1, 3
; S_GFX11-NEXT:    s_add_i32 s0, s0, 3
; S_GFX11-NEXT:  .LBB8_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB8_4:
; S_GFX11-NEXT:    s_branch .LBB8_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <12 x i32> %a, splat (i32 3)
  %a2 = bitcast <12 x i32> %a1 to <24 x half>
  br label %end

cmp.false:
  %a3 = bitcast <12 x i32> %a to <24 x half>
  br label %end

end:
  %phi = phi <24 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x half> %phi
}

define inreg <12 x i32> @bitcast_v24f16_to_v12i32_inreg(<24 x half> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24f16_to_v12i32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cvt_f16_f32_e32 v35, s17
; S_SI-NEXT:    v_cvt_f16_f32_e32 v34, s16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v33, s19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v32, s18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v31, s21
; S_SI-NEXT:    v_cvt_f16_f32_e32 v30, s20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v29, s23
; S_SI-NEXT:    v_cvt_f16_f32_e32 v28, s22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v26, s25
; S_SI-NEXT:    v_cvt_f16_f32_e32 v24, s24
; S_SI-NEXT:    v_cvt_f16_f32_e32 v21, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v20, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v19, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v18, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v17, v5
; S_SI-NEXT:    v_cvt_f16_f32_e32 v16, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v15, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v14, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v27, s27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v25, s26
; S_SI-NEXT:    v_cvt_f16_f32_e32 v23, s29
; S_SI-NEXT:    v_cvt_f16_f32_e32 v22, s28
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    s_cbranch_scc0 .LBB9_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v35
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v33
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v31
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v29
; S_SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v26
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v27
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v23
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v21
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v19
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v17
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v15
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v13
; S_SI-NEXT:    v_or_b32_e32 v0, v34, v0
; S_SI-NEXT:    v_or_b32_e32 v1, v32, v1
; S_SI-NEXT:    v_or_b32_e32 v2, v30, v2
; S_SI-NEXT:    v_or_b32_e32 v3, v28, v3
; S_SI-NEXT:    v_or_b32_e32 v4, v24, v4
; S_SI-NEXT:    v_or_b32_e32 v5, v25, v5
; S_SI-NEXT:    v_or_b32_e32 v6, v22, v6
; S_SI-NEXT:    v_or_b32_e32 v7, v20, v7
; S_SI-NEXT:    v_or_b32_e32 v8, v18, v8
; S_SI-NEXT:    v_or_b32_e32 v9, v16, v9
; S_SI-NEXT:    v_or_b32_e32 v10, v14, v10
; S_SI-NEXT:    v_or_b32_e32 v11, v12, v11
; S_SI-NEXT:    s_cbranch_execnz .LBB9_3
; S_SI-NEXT:  .LBB9_2: ; %cmp.true
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v35
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v34
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v33
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v32
; S_SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; S_SI-NEXT:    v_or_b32_e32 v0, v1, v0
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v31
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v28
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v2
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v30
; S_SI-NEXT:    v_or_b32_e32 v1, v3, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v29
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v26
; S_SI-NEXT:    v_or_b32_e32 v2, v2, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; S_SI-NEXT:    v_or_b32_e32 v3, v5, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v24
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v25
; S_SI-NEXT:    v_or_b32_e32 v4, v4, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v22
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_or_b32_e32 v5, v7, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v21
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; S_SI-NEXT:    v_or_b32_e32 v6, v8, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v19
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v18
; S_SI-NEXT:    v_or_b32_e32 v7, v8, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v16
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_or_b32_e32 v8, v10, v8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v15
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; S_SI-NEXT:    v_or_b32_e32 v9, v11, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v14
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v12
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; S_SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; S_SI-NEXT:    v_or_b32_e32 v10, v11, v10
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v13
; S_SI-NEXT:    v_or_b32_e32 v11, v12, v11
; S_SI-NEXT:  .LBB9_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB9_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; S_SI-NEXT:    s_branch .LBB9_2
;
; S_VI-LABEL: bitcast_v24f16_to_v12i32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB9_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB9_4
; S_VI-NEXT:  .LBB9_2: ; %cmp.true
; S_VI-NEXT:    s_lshr_b32 s4, s27, 16
; S_VI-NEXT:    v_mov_b32_e32 v0, 0x200
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s27, v0
; S_VI-NEXT:    s_lshr_b32 s4, s26, 16
; S_VI-NEXT:    v_or_b32_e32 v11, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s26, v0
; S_VI-NEXT:    s_lshr_b32 s4, s25, 16
; S_VI-NEXT:    v_or_b32_e32 v10, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s25, v0
; S_VI-NEXT:    s_lshr_b32 s4, s24, 16
; S_VI-NEXT:    v_or_b32_e32 v9, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s24, v0
; S_VI-NEXT:    s_lshr_b32 s4, s23, 16
; S_VI-NEXT:    v_or_b32_e32 v8, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s23, v0
; S_VI-NEXT:    s_lshr_b32 s4, s22, 16
; S_VI-NEXT:    v_or_b32_e32 v7, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s22, v0
; S_VI-NEXT:    s_lshr_b32 s4, s21, 16
; S_VI-NEXT:    v_or_b32_e32 v6, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s21, v0
; S_VI-NEXT:    s_lshr_b32 s4, s20, 16
; S_VI-NEXT:    v_or_b32_e32 v5, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s20, v0
; S_VI-NEXT:    s_lshr_b32 s4, s19, 16
; S_VI-NEXT:    v_or_b32_e32 v4, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s19, v0
; S_VI-NEXT:    s_lshr_b32 s4, s18, 16
; S_VI-NEXT:    v_or_b32_e32 v3, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s18, v0
; S_VI-NEXT:    s_lshr_b32 s4, s17, 16
; S_VI-NEXT:    v_or_b32_e32 v2, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v12, s17, v0
; S_VI-NEXT:    s_lshr_b32 s4, s16, 16
; S_VI-NEXT:    v_or_b32_e32 v1, v12, v1
; S_VI-NEXT:    v_mov_b32_e32 v12, s4
; S_VI-NEXT:    v_add_f16_sdwa v12, v12, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v0, s16, v0
; S_VI-NEXT:    v_or_b32_e32 v0, v0, v12
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB9_3:
; S_VI-NEXT:    s_branch .LBB9_2
; S_VI-NEXT:  .LBB9_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v24f16_to_v12i32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB9_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB9_4
; S_GFX9-NEXT:  .LBB9_2: ; %cmp.true
; S_GFX9-NEXT:    v_mov_b32_e32 v0, 0x200
; S_GFX9-NEXT:    v_pk_add_f16 v11, s27, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v10, s26, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v9, s25, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v8, s24, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v7, s23, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v6, s22, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v5, s21, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v4, s20, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v3, s19, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v2, s18, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v1, s17, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v0, s16, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB9_3:
; S_GFX9-NEXT:    s_branch .LBB9_2
; S_GFX9-NEXT:  .LBB9_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24f16_to_v12i32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB9_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB9_4
; S_GFX11-NEXT:  .LBB9_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s23 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s22 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s21 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s20 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s19 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s18 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s17 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s16 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s15 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s14 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s13 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s12 op_sel_hi:[0,1]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB9_3:
; S_GFX11-NEXT:    s_branch .LBB9_2
; S_GFX11-NEXT:  .LBB9_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <24 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <24 x half> %a1 to <12 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <24 x half> %a to <12 x i32>
  br label %end

end:
  %phi = phi <12 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x i32> %phi
}

define inreg <6 x double> @bitcast_v12f32_to_v6f64_inreg(<12 x float> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12f32_to_v6f64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB10_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB10_4
; S_SI-NEXT:  .LBB10_2: ; %cmp.true
; S_SI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_SI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_SI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_SI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_SI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_SI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_SI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_SI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_SI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_SI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_SI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_SI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB10_3:
; S_SI-NEXT:    s_branch .LBB10_2
; S_SI-NEXT:  .LBB10_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    v_mov_b32_e32 v12, s28
; S_SI-NEXT:    v_mov_b32_e32 v13, s29
; S_SI-NEXT:    v_mov_b32_e32 v14, s30
; S_SI-NEXT:    v_mov_b32_e32 v15, s31
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v12f32_to_v6f64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB10_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB10_4
; S_VI-NEXT:  .LBB10_2: ; %cmp.true
; S_VI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_VI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_VI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_VI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_VI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_VI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_VI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_VI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_VI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_VI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_VI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_VI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB10_3:
; S_VI-NEXT:    s_branch .LBB10_2
; S_VI-NEXT:  .LBB10_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v12f32_to_v6f64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB10_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB10_4
; S_GFX9-NEXT:  .LBB10_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB10_3:
; S_GFX9-NEXT:    s_branch .LBB10_2
; S_GFX9-NEXT:  .LBB10_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v12f32_to_v6f64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB10_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB10_4
; S_GFX11-NEXT:  .LBB10_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f32_e64 v11, s23, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v9, s21, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v8, s20, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v7, s19, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v6, s18, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v4, s16, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v3, s15, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v2, s14, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v1, s13, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v0, s12, 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB10_3:
; S_GFX11-NEXT:    s_branch .LBB10_2
; S_GFX11-NEXT:  .LBB10_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <12 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <12 x float> %a1 to <6 x double>
  br label %end

cmp.false:
  %a3 = bitcast <12 x float> %a to <6 x double>
  br label %end

end:
  %phi = phi <6 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x double> %phi
}

define inreg <12 x float> @bitcast_v6f64_to_v12f32_inreg(<6 x double> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6f64_to_v12f32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB11_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB11_4
; S_SI-NEXT:  .LBB11_2: ; %cmp.true
; S_SI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_SI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_SI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_SI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_SI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_SI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB11_3:
; S_SI-NEXT:    s_branch .LBB11_2
; S_SI-NEXT:  .LBB11_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v6f64_to_v12f32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB11_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB11_4
; S_VI-NEXT:  .LBB11_2: ; %cmp.true
; S_VI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_VI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_VI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_VI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_VI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_VI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB11_3:
; S_VI-NEXT:    s_branch .LBB11_2
; S_VI-NEXT:  .LBB11_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v6f64_to_v12f32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB11_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB11_4
; S_GFX9-NEXT:  .LBB11_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_GFX9-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_GFX9-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_GFX9-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_GFX9-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_GFX9-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB11_3:
; S_GFX9-NEXT:    s_branch .LBB11_2
; S_GFX9-NEXT:  .LBB11_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v6f64_to_v12f32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB11_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB11_4
; S_GFX11-NEXT:  .LBB11_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f64 v[10:11], s[22:23], 1.0
; S_GFX11-NEXT:    v_add_f64 v[8:9], s[20:21], 1.0
; S_GFX11-NEXT:    v_add_f64 v[6:7], s[18:19], 1.0
; S_GFX11-NEXT:    v_add_f64 v[4:5], s[16:17], 1.0
; S_GFX11-NEXT:    v_add_f64 v[2:3], s[14:15], 1.0
; S_GFX11-NEXT:    v_add_f64 v[0:1], s[12:13], 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB11_3:
; S_GFX11-NEXT:    s_branch .LBB11_2
; S_GFX11-NEXT:  .LBB11_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <6 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <6 x double> %a1 to <12 x float>
  br label %end

cmp.false:
  %a3 = bitcast <6 x double> %a to <12 x float>
  br label %end

end:
  %phi = phi <12 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x float> %phi
}

define inreg <6 x i64> @bitcast_v12f32_to_v6i64_inreg(<12 x float> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12f32_to_v6i64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB12_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB12_4
; S_SI-NEXT:  .LBB12_2: ; %cmp.true
; S_SI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_SI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_SI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_SI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_SI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_SI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_SI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_SI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_SI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_SI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_SI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_SI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB12_3:
; S_SI-NEXT:    s_branch .LBB12_2
; S_SI-NEXT:  .LBB12_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    v_mov_b32_e32 v12, s28
; S_SI-NEXT:    v_mov_b32_e32 v13, s29
; S_SI-NEXT:    v_mov_b32_e32 v14, s30
; S_SI-NEXT:    v_mov_b32_e32 v15, s31
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v12f32_to_v6i64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB12_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB12_4
; S_VI-NEXT:  .LBB12_2: ; %cmp.true
; S_VI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_VI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_VI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_VI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_VI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_VI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_VI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_VI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_VI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_VI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_VI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_VI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB12_3:
; S_VI-NEXT:    s_branch .LBB12_2
; S_VI-NEXT:  .LBB12_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v12f32_to_v6i64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB12_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB12_4
; S_GFX9-NEXT:  .LBB12_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB12_3:
; S_GFX9-NEXT:    s_branch .LBB12_2
; S_GFX9-NEXT:  .LBB12_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v12f32_to_v6i64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB12_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB12_4
; S_GFX11-NEXT:  .LBB12_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f32_e64 v11, s23, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v9, s21, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v8, s20, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v7, s19, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v6, s18, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v4, s16, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v3, s15, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v2, s14, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v1, s13, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v0, s12, 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB12_3:
; S_GFX11-NEXT:    s_branch .LBB12_2
; S_GFX11-NEXT:  .LBB12_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <12 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <12 x float> %a1 to <6 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <12 x float> %a to <6 x i64>
  br label %end

end:
  %phi = phi <6 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x i64> %phi
}

define inreg <12 x float> @bitcast_v6i64_to_v12f32_inreg(<6 x i64> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6i64_to_v12f32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB13_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB13_3
; S_SI-NEXT:  .LBB13_2: ; %cmp.true
; S_SI-NEXT:    s_add_u32 s26, s26, 3
; S_SI-NEXT:    s_addc_u32 s27, s27, 0
; S_SI-NEXT:    s_add_u32 s24, s24, 3
; S_SI-NEXT:    s_addc_u32 s25, s25, 0
; S_SI-NEXT:    s_add_u32 s22, s22, 3
; S_SI-NEXT:    s_addc_u32 s23, s23, 0
; S_SI-NEXT:    s_add_u32 s20, s20, 3
; S_SI-NEXT:    s_addc_u32 s21, s21, 0
; S_SI-NEXT:    s_add_u32 s18, s18, 3
; S_SI-NEXT:    s_addc_u32 s19, s19, 0
; S_SI-NEXT:    s_add_u32 s16, s16, 3
; S_SI-NEXT:    s_addc_u32 s17, s17, 0
; S_SI-NEXT:  .LBB13_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB13_4:
; S_SI-NEXT:    s_branch .LBB13_2
;
; S_VI-LABEL: bitcast_v6i64_to_v12f32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB13_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB13_3
; S_VI-NEXT:  .LBB13_2: ; %cmp.true
; S_VI-NEXT:    s_add_u32 s26, s26, 3
; S_VI-NEXT:    s_addc_u32 s27, s27, 0
; S_VI-NEXT:    s_add_u32 s24, s24, 3
; S_VI-NEXT:    s_addc_u32 s25, s25, 0
; S_VI-NEXT:    s_add_u32 s22, s22, 3
; S_VI-NEXT:    s_addc_u32 s23, s23, 0
; S_VI-NEXT:    s_add_u32 s20, s20, 3
; S_VI-NEXT:    s_addc_u32 s21, s21, 0
; S_VI-NEXT:    s_add_u32 s18, s18, 3
; S_VI-NEXT:    s_addc_u32 s19, s19, 0
; S_VI-NEXT:    s_add_u32 s16, s16, 3
; S_VI-NEXT:    s_addc_u32 s17, s17, 0
; S_VI-NEXT:  .LBB13_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB13_4:
; S_VI-NEXT:    s_branch .LBB13_2
;
; S_GFX9-LABEL: bitcast_v6i64_to_v12f32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB13_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB13_3
; S_GFX9-NEXT:  .LBB13_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_u32 s26, s26, 3
; S_GFX9-NEXT:    s_addc_u32 s27, s27, 0
; S_GFX9-NEXT:    s_add_u32 s24, s24, 3
; S_GFX9-NEXT:    s_addc_u32 s25, s25, 0
; S_GFX9-NEXT:    s_add_u32 s22, s22, 3
; S_GFX9-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX9-NEXT:    s_add_u32 s20, s20, 3
; S_GFX9-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX9-NEXT:    s_add_u32 s18, s18, 3
; S_GFX9-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX9-NEXT:    s_add_u32 s16, s16, 3
; S_GFX9-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX9-NEXT:  .LBB13_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB13_4:
; S_GFX9-NEXT:    s_branch .LBB13_2
;
; S_GFX11-LABEL: bitcast_v6i64_to_v12f32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB13_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB13_3
; S_GFX11-NEXT:  .LBB13_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_u32 s22, s22, 3
; S_GFX11-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX11-NEXT:    s_add_u32 s20, s20, 3
; S_GFX11-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX11-NEXT:    s_add_u32 s18, s18, 3
; S_GFX11-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX11-NEXT:    s_add_u32 s16, s16, 3
; S_GFX11-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX11-NEXT:    s_add_u32 s2, s2, 3
; S_GFX11-NEXT:    s_addc_u32 s3, s3, 0
; S_GFX11-NEXT:    s_add_u32 s0, s0, 3
; S_GFX11-NEXT:    s_addc_u32 s1, s1, 0
; S_GFX11-NEXT:  .LBB13_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB13_4:
; S_GFX11-NEXT:    s_branch .LBB13_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <6 x i64> %a, splat (i64 3)
  %a2 = bitcast <6 x i64> %a1 to <12 x float>
  br label %end

cmp.false:
  %a3 = bitcast <6 x i64> %a to <12 x float>
  br label %end

end:
  %phi = phi <12 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x float> %phi
}

define inreg <24 x i16> @bitcast_v12f32_to_v24i16_inreg(<12 x float> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12f32_to_v24i16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB14_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_mov_b32_e32 v0, s26
; S_SI-NEXT:    v_alignbit_b32 v21, s27, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s24
; S_SI-NEXT:    v_alignbit_b32 v17, s25, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s22
; S_SI-NEXT:    v_alignbit_b32 v13, s23, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s20
; S_SI-NEXT:    v_alignbit_b32 v9, s21, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s18
; S_SI-NEXT:    v_alignbit_b32 v5, s19, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_alignbit_b32 v1, s17, v0, 16
; S_SI-NEXT:    s_lshr_b32 s11, s27, 16
; S_SI-NEXT:    s_lshr_b32 s10, s25, 16
; S_SI-NEXT:    s_lshr_b32 s9, s23, 16
; S_SI-NEXT:    s_lshr_b32 s8, s21, 16
; S_SI-NEXT:    s_lshr_b32 s7, s19, 16
; S_SI-NEXT:    s_lshr_b32 s6, s17, 16
; S_SI-NEXT:    s_cbranch_execnz .LBB14_4
; S_SI-NEXT:  .LBB14_2: ; %cmp.true
; S_SI-NEXT:    v_add_f32_e64 v2, s17, 1.0
; S_SI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_SI-NEXT:    v_add_f32_e64 v6, s19, 1.0
; S_SI-NEXT:    v_add_f32_e64 v4, s18, 1.0
; S_SI-NEXT:    v_add_f32_e64 v10, s21, 1.0
; S_SI-NEXT:    v_add_f32_e64 v8, s20, 1.0
; S_SI-NEXT:    v_add_f32_e64 v14, s23, 1.0
; S_SI-NEXT:    v_add_f32_e64 v12, s22, 1.0
; S_SI-NEXT:    v_add_f32_e64 v18, s25, 1.0
; S_SI-NEXT:    v_add_f32_e64 v16, s24, 1.0
; S_SI-NEXT:    v_add_f32_e64 v22, s27, 1.0
; S_SI-NEXT:    v_add_f32_e64 v20, s26, 1.0
; S_SI-NEXT:    v_alignbit_b32 v21, v22, v20, 16
; S_SI-NEXT:    v_alignbit_b32 v17, v18, v16, 16
; S_SI-NEXT:    v_alignbit_b32 v13, v14, v12, 16
; S_SI-NEXT:    v_alignbit_b32 v9, v10, v8, 16
; S_SI-NEXT:    v_alignbit_b32 v5, v6, v4, 16
; S_SI-NEXT:    v_alignbit_b32 v1, v2, v0, 16
; S_SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v22
; S_SI-NEXT:    v_lshrrev_b32_e32 v19, 16, v18
; S_SI-NEXT:    v_lshrrev_b32_e32 v15, 16, v14
; S_SI-NEXT:    v_lshrrev_b32_e32 v11, 16, v10
; S_SI-NEXT:    v_lshrrev_b32_e32 v7, 16, v6
; S_SI-NEXT:    v_lshrrev_b32_e32 v3, 16, v2
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB14_3:
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $sgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $sgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $sgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $sgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $sgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $sgpr11
; S_SI-NEXT:    s_branch .LBB14_2
; S_SI-NEXT:  .LBB14_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v2, s17
; S_SI-NEXT:    v_mov_b32_e32 v4, s18
; S_SI-NEXT:    v_mov_b32_e32 v6, s19
; S_SI-NEXT:    v_mov_b32_e32 v8, s20
; S_SI-NEXT:    v_mov_b32_e32 v10, s21
; S_SI-NEXT:    v_mov_b32_e32 v12, s22
; S_SI-NEXT:    v_mov_b32_e32 v14, s23
; S_SI-NEXT:    v_mov_b32_e32 v16, s24
; S_SI-NEXT:    v_mov_b32_e32 v18, s25
; S_SI-NEXT:    v_mov_b32_e32 v20, s26
; S_SI-NEXT:    v_mov_b32_e32 v22, s27
; S_SI-NEXT:    v_mov_b32_e32 v3, s6
; S_SI-NEXT:    v_mov_b32_e32 v7, s7
; S_SI-NEXT:    v_mov_b32_e32 v11, s8
; S_SI-NEXT:    v_mov_b32_e32 v15, s9
; S_SI-NEXT:    v_mov_b32_e32 v19, s10
; S_SI-NEXT:    v_mov_b32_e32 v23, s11
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v12f32_to_v24i16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB14_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB14_4
; S_VI-NEXT:  .LBB14_2: ; %cmp.true
; S_VI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_VI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_VI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_VI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_VI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_VI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_VI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_VI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_VI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_VI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_VI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_VI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB14_3:
; S_VI-NEXT:    s_branch .LBB14_2
; S_VI-NEXT:  .LBB14_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v12f32_to_v24i16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB14_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB14_4
; S_GFX9-NEXT:  .LBB14_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB14_3:
; S_GFX9-NEXT:    s_branch .LBB14_2
; S_GFX9-NEXT:  .LBB14_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v12f32_to_v24i16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB14_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB14_4
; S_GFX11-NEXT:  .LBB14_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f32_e64 v11, s23, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v9, s21, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v8, s20, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v7, s19, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v6, s18, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v4, s16, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v3, s15, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v2, s14, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v1, s13, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v0, s12, 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB14_3:
; S_GFX11-NEXT:    s_branch .LBB14_2
; S_GFX11-NEXT:  .LBB14_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <12 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <12 x float> %a1 to <24 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <12 x float> %a to <24 x i16>
  br label %end

end:
  %phi = phi <24 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x i16> %phi
}

define inreg <12 x float> @bitcast_v24i16_to_v12f32_inreg(<24 x i16> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24i16_to_v12f32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    v_mov_b32_e32 v12, v8
; S_SI-NEXT:    v_mov_b32_e32 v13, v6
; S_SI-NEXT:    v_mov_b32_e32 v14, v4
; S_SI-NEXT:    v_mov_b32_e32 v15, v2
; S_SI-NEXT:    v_mov_b32_e32 v16, v0
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v20, 16, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v18, 16, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v9
; S_SI-NEXT:    s_cbranch_scc0 .LBB15_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_or_b32 s4, s4, s5
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_or_b32 s5, s5, s6
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_or_b32 s6, s6, s7
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v16
; S_SI-NEXT:    s_or_b32 s7, s7, s8
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    v_or_b32_e32 v7, v0, v21
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v14
; S_SI-NEXT:    s_or_b32 s8, s8, s9
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    v_or_b32_e32 v9, v0, v19
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v13
; S_SI-NEXT:    s_or_b32 s9, s9, s10
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_and_b32_e32 v1, 0xffff, v15
; S_SI-NEXT:    v_or_b32_e32 v10, v0, v18
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v12
; S_SI-NEXT:    s_or_b32 s10, s10, s11
; S_SI-NEXT:    v_or_b32_e32 v8, v1, v20
; S_SI-NEXT:    v_or_b32_e32 v11, v0, v17
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:    s_cbranch_execnz .LBB15_3
; S_SI-NEXT:  .LBB15_2: ; %cmp.true
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v16
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    v_or_b32_e32 v0, v21, v0
; S_SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v15
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v20, v0
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v14
; S_SI-NEXT:    s_or_b32 s4, s5, s4
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s5, s6, s5
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v19, v0
; S_SI-NEXT:    s_or_b32 s6, s7, s6
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v13
; S_SI-NEXT:    s_or_b32 s7, s8, s7
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s8, s9, s8
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    s_add_i32 s28, s28, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v18, v0
; S_SI-NEXT:    s_or_b32 s9, s10, s9
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v12
; S_SI-NEXT:    s_or_b32 s10, s11, s10
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s4, s4, 0x30000
; S_SI-NEXT:    s_add_i32 s5, s5, 0x30000
; S_SI-NEXT:    s_add_i32 s6, s6, 0x30000
; S_SI-NEXT:    s_add_i32 s7, s7, 0x30000
; S_SI-NEXT:    s_add_i32 s8, s8, 0x30000
; S_SI-NEXT:    s_add_i32 s9, s9, 0x30000
; S_SI-NEXT:    s_add_i32 s10, s10, 0x30000
; S_SI-NEXT:    v_or_b32_e32 v0, v17, v0
; S_SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:  .LBB15_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB15_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; S_SI-NEXT:    s_branch .LBB15_2
;
; S_VI-LABEL: bitcast_v24i16_to_v12f32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB15_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB15_3
; S_VI-NEXT:  .LBB15_2: ; %cmp.true
; S_VI-NEXT:    s_and_b32 s4, s16, 0xffff0000
; S_VI-NEXT:    s_add_i32 s5, s16, 3
; S_VI-NEXT:    s_and_b32 s6, s17, 0xffff0000
; S_VI-NEXT:    s_add_i32 s7, s17, 3
; S_VI-NEXT:    s_and_b32 s8, s18, 0xffff0000
; S_VI-NEXT:    s_add_i32 s9, s18, 3
; S_VI-NEXT:    s_and_b32 s10, s19, 0xffff0000
; S_VI-NEXT:    s_add_i32 s11, s19, 3
; S_VI-NEXT:    s_and_b32 s12, s20, 0xffff0000
; S_VI-NEXT:    s_add_i32 s13, s20, 3
; S_VI-NEXT:    s_and_b32 s14, s21, 0xffff0000
; S_VI-NEXT:    s_add_i32 s15, s21, 3
; S_VI-NEXT:    s_and_b32 s16, s22, 0xffff0000
; S_VI-NEXT:    s_add_i32 s17, s22, 3
; S_VI-NEXT:    s_and_b32 s18, s23, 0xffff0000
; S_VI-NEXT:    s_add_i32 s19, s23, 3
; S_VI-NEXT:    s_and_b32 s20, s24, 0xffff0000
; S_VI-NEXT:    s_add_i32 s21, s24, 3
; S_VI-NEXT:    s_and_b32 s22, s25, 0xffff0000
; S_VI-NEXT:    s_add_i32 s23, s25, 3
; S_VI-NEXT:    s_and_b32 s24, s26, 0xffff0000
; S_VI-NEXT:    s_add_i32 s25, s26, 3
; S_VI-NEXT:    s_and_b32 s26, s27, 0xffff0000
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_and_b32 s27, s27, 0xffff
; S_VI-NEXT:    s_and_b32 s25, s25, 0xffff
; S_VI-NEXT:    s_and_b32 s23, s23, 0xffff
; S_VI-NEXT:    s_and_b32 s21, s21, 0xffff
; S_VI-NEXT:    s_and_b32 s19, s19, 0xffff
; S_VI-NEXT:    s_and_b32 s17, s17, 0xffff
; S_VI-NEXT:    s_and_b32 s15, s15, 0xffff
; S_VI-NEXT:    s_and_b32 s13, s13, 0xffff
; S_VI-NEXT:    s_and_b32 s11, s11, 0xffff
; S_VI-NEXT:    s_and_b32 s9, s9, 0xffff
; S_VI-NEXT:    s_and_b32 s7, s7, 0xffff
; S_VI-NEXT:    s_and_b32 s5, s5, 0xffff
; S_VI-NEXT:    s_or_b32 s26, s26, s27
; S_VI-NEXT:    s_or_b32 s24, s24, s25
; S_VI-NEXT:    s_or_b32 s22, s22, s23
; S_VI-NEXT:    s_or_b32 s20, s20, s21
; S_VI-NEXT:    s_or_b32 s18, s18, s19
; S_VI-NEXT:    s_or_b32 s16, s16, s17
; S_VI-NEXT:    s_or_b32 s14, s14, s15
; S_VI-NEXT:    s_or_b32 s12, s12, s13
; S_VI-NEXT:    s_or_b32 s10, s10, s11
; S_VI-NEXT:    s_or_b32 s8, s8, s9
; S_VI-NEXT:    s_or_b32 s6, s6, s7
; S_VI-NEXT:    s_or_b32 s4, s4, s5
; S_VI-NEXT:    s_add_i32 s27, s26, 0x30000
; S_VI-NEXT:    s_add_i32 s26, s24, 0x30000
; S_VI-NEXT:    s_add_i32 s25, s22, 0x30000
; S_VI-NEXT:    s_add_i32 s24, s20, 0x30000
; S_VI-NEXT:    s_add_i32 s23, s18, 0x30000
; S_VI-NEXT:    s_add_i32 s22, s16, 0x30000
; S_VI-NEXT:    s_add_i32 s21, s14, 0x30000
; S_VI-NEXT:    s_add_i32 s20, s12, 0x30000
; S_VI-NEXT:    s_add_i32 s19, s10, 0x30000
; S_VI-NEXT:    s_add_i32 s18, s8, 0x30000
; S_VI-NEXT:    s_add_i32 s17, s6, 0x30000
; S_VI-NEXT:    s_add_i32 s16, s4, 0x30000
; S_VI-NEXT:  .LBB15_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB15_4:
; S_VI-NEXT:    s_branch .LBB15_2
;
; S_GFX9-LABEL: bitcast_v24i16_to_v12f32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB15_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB15_4
; S_GFX9-NEXT:  .LBB15_2: ; %cmp.true
; S_GFX9-NEXT:    v_pk_add_u16 v11, s27, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v10, s26, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v9, s25, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v8, s24, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v7, s23, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v6, s22, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v5, s21, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v4, s20, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v3, s19, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v2, s18, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v1, s17, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v0, s16, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB15_3:
; S_GFX9-NEXT:    s_branch .LBB15_2
; S_GFX9-NEXT:  .LBB15_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24i16_to_v12f32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB15_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB15_4
; S_GFX11-NEXT:  .LBB15_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_u16 v11, s23, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v10, s22, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v9, s21, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v8, s20, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v7, s19, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v6, s18, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v5, s17, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v4, s16, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v3, s15, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v2, s14, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v1, s13, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v0, s12, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB15_3:
; S_GFX11-NEXT:    s_branch .LBB15_2
; S_GFX11-NEXT:  .LBB15_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <24 x i16> %a, splat (i16 3)
  %a2 = bitcast <24 x i16> %a1 to <12 x float>
  br label %end

cmp.false:
  %a3 = bitcast <24 x i16> %a to <12 x float>
  br label %end

end:
  %phi = phi <12 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x float> %phi
}

define inreg <24 x half> @bitcast_v12f32_to_v24f16_inreg(<12 x float> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v12f32_to_v24f16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB16_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_lshr_b32 s4, s27, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; S_SI-NEXT:    s_lshr_b32 s4, s26, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; S_SI-NEXT:    s_lshr_b32 s4, s25, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; S_SI-NEXT:    s_lshr_b32 s4, s24, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; S_SI-NEXT:    s_lshr_b32 s4, s23, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; S_SI-NEXT:    s_lshr_b32 s4, s22, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s4
; S_SI-NEXT:    s_lshr_b32 s4, s21, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s4
; S_SI-NEXT:    s_lshr_b32 s4, s20, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s4
; S_SI-NEXT:    s_lshr_b32 s4, s19, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s4
; S_SI-NEXT:    s_lshr_b32 s4, s18, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s4
; S_SI-NEXT:    s_lshr_b32 s4, s17, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s4
; S_SI-NEXT:    s_lshr_b32 s4, s16, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    s_cbranch_execnz .LBB16_3
; S_SI-NEXT:  .LBB16_2: ; %cmp.true
; S_SI-NEXT:    v_add_f32_e64 v1, s16, 1.0
; S_SI-NEXT:    v_add_f32_e64 v3, s17, 1.0
; S_SI-NEXT:    v_add_f32_e64 v5, s18, 1.0
; S_SI-NEXT:    v_add_f32_e64 v7, s19, 1.0
; S_SI-NEXT:    v_add_f32_e64 v9, s20, 1.0
; S_SI-NEXT:    v_add_f32_e64 v11, s21, 1.0
; S_SI-NEXT:    v_add_f32_e64 v13, s22, 1.0
; S_SI-NEXT:    v_add_f32_e64 v15, s23, 1.0
; S_SI-NEXT:    v_add_f32_e64 v17, s24, 1.0
; S_SI-NEXT:    v_add_f32_e64 v19, s25, 1.0
; S_SI-NEXT:    v_add_f32_e64 v21, s26, 1.0
; S_SI-NEXT:    v_add_f32_e64 v23, s27, 1.0
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, v21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, v19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, v15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v11
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v1
; S_SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v23
; S_SI-NEXT:    v_lshrrev_b32_e32 v21, 16, v21
; S_SI-NEXT:    v_lshrrev_b32_e32 v19, 16, v19
; S_SI-NEXT:    v_lshrrev_b32_e32 v17, 16, v17
; S_SI-NEXT:    v_lshrrev_b32_e32 v15, 16, v15
; S_SI-NEXT:    v_lshrrev_b32_e32 v13, 16, v13
; S_SI-NEXT:    v_lshrrev_b32_e32 v11, 16, v11
; S_SI-NEXT:    v_lshrrev_b32_e32 v9, 16, v9
; S_SI-NEXT:    v_lshrrev_b32_e32 v7, 16, v7
; S_SI-NEXT:    v_lshrrev_b32_e32 v5, 16, v5
; S_SI-NEXT:    v_lshrrev_b32_e32 v3, 16, v3
; S_SI-NEXT:    v_lshrrev_b32_e32 v1, 16, v1
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, v21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, v15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v11
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v1
; S_SI-NEXT:  .LBB16_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB16_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $vgpr2
; S_SI-NEXT:    ; implicit-def: $vgpr3
; S_SI-NEXT:    ; implicit-def: $vgpr4
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $vgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr12
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $vgpr14
; S_SI-NEXT:    ; implicit-def: $vgpr15
; S_SI-NEXT:    ; implicit-def: $vgpr16
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $vgpr18
; S_SI-NEXT:    ; implicit-def: $vgpr19
; S_SI-NEXT:    ; implicit-def: $vgpr20
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $vgpr22
; S_SI-NEXT:    ; implicit-def: $vgpr23
; S_SI-NEXT:    s_branch .LBB16_2
;
; S_VI-LABEL: bitcast_v12f32_to_v24f16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB16_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB16_4
; S_VI-NEXT:  .LBB16_2: ; %cmp.true
; S_VI-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_VI-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_VI-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_VI-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_VI-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_VI-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_VI-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_VI-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_VI-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_VI-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_VI-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_VI-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB16_3:
; S_VI-NEXT:    s_branch .LBB16_2
; S_VI-NEXT:  .LBB16_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v12f32_to_v24f16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB16_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB16_4
; S_GFX9-NEXT:  .LBB16_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f32_e64 v11, s27, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v10, s26, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v9, s25, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v8, s24, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v7, s23, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v6, s22, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v5, s21, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v4, s20, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v3, s19, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v2, s18, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v1, s17, 1.0
; S_GFX9-NEXT:    v_add_f32_e64 v0, s16, 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB16_3:
; S_GFX9-NEXT:    s_branch .LBB16_2
; S_GFX9-NEXT:  .LBB16_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v12f32_to_v24f16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB16_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB16_4
; S_GFX11-NEXT:  .LBB16_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f32_e64 v11, s23, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v9, s21, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v8, s20, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v7, s19, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v6, s18, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v4, s16, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v3, s15, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v2, s14, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v1, s13, 1.0
; S_GFX11-NEXT:    v_add_f32_e64 v0, s12, 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB16_3:
; S_GFX11-NEXT:    s_branch .LBB16_2
; S_GFX11-NEXT:  .LBB16_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <12 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <12 x float> %a1 to <24 x half>
  br label %end

cmp.false:
  %a3 = bitcast <12 x float> %a to <24 x half>
  br label %end

end:
  %phi = phi <24 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x half> %phi
}

define inreg <12 x float> @bitcast_v24f16_to_v12f32_inreg(<24 x half> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24f16_to_v12f32_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cvt_f16_f32_e32 v35, s17
; S_SI-NEXT:    v_cvt_f16_f32_e32 v34, s16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v33, s19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v32, s18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v31, s21
; S_SI-NEXT:    v_cvt_f16_f32_e32 v30, s20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v29, s23
; S_SI-NEXT:    v_cvt_f16_f32_e32 v28, s22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v26, s25
; S_SI-NEXT:    v_cvt_f16_f32_e32 v24, s24
; S_SI-NEXT:    v_cvt_f16_f32_e32 v21, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v20, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v19, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v18, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v17, v5
; S_SI-NEXT:    v_cvt_f16_f32_e32 v16, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v15, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v14, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v27, s27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v25, s26
; S_SI-NEXT:    v_cvt_f16_f32_e32 v23, s29
; S_SI-NEXT:    v_cvt_f16_f32_e32 v22, s28
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    s_cbranch_scc0 .LBB17_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v35
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v33
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v31
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v29
; S_SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v26
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v27
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v23
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v21
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v19
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v17
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v15
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v13
; S_SI-NEXT:    v_or_b32_e32 v0, v34, v0
; S_SI-NEXT:    v_or_b32_e32 v1, v32, v1
; S_SI-NEXT:    v_or_b32_e32 v2, v30, v2
; S_SI-NEXT:    v_or_b32_e32 v3, v28, v3
; S_SI-NEXT:    v_or_b32_e32 v4, v24, v4
; S_SI-NEXT:    v_or_b32_e32 v5, v25, v5
; S_SI-NEXT:    v_or_b32_e32 v6, v22, v6
; S_SI-NEXT:    v_or_b32_e32 v7, v20, v7
; S_SI-NEXT:    v_or_b32_e32 v8, v18, v8
; S_SI-NEXT:    v_or_b32_e32 v9, v16, v9
; S_SI-NEXT:    v_or_b32_e32 v10, v14, v10
; S_SI-NEXT:    v_or_b32_e32 v11, v12, v11
; S_SI-NEXT:    s_cbranch_execnz .LBB17_3
; S_SI-NEXT:  .LBB17_2: ; %cmp.true
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v35
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v34
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v33
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v32
; S_SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; S_SI-NEXT:    v_or_b32_e32 v0, v1, v0
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v31
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v28
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v2
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v30
; S_SI-NEXT:    v_or_b32_e32 v1, v3, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v29
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v26
; S_SI-NEXT:    v_or_b32_e32 v2, v2, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; S_SI-NEXT:    v_or_b32_e32 v3, v5, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v24
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v25
; S_SI-NEXT:    v_or_b32_e32 v4, v4, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v22
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_or_b32_e32 v5, v7, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v21
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; S_SI-NEXT:    v_or_b32_e32 v6, v8, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v19
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v18
; S_SI-NEXT:    v_or_b32_e32 v7, v8, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v16
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_or_b32_e32 v8, v10, v8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v15
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; S_SI-NEXT:    v_or_b32_e32 v9, v11, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v14
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v12
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; S_SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; S_SI-NEXT:    v_or_b32_e32 v10, v11, v10
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v13
; S_SI-NEXT:    v_or_b32_e32 v11, v12, v11
; S_SI-NEXT:  .LBB17_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB17_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; S_SI-NEXT:    s_branch .LBB17_2
;
; S_VI-LABEL: bitcast_v24f16_to_v12f32_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB17_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB17_4
; S_VI-NEXT:  .LBB17_2: ; %cmp.true
; S_VI-NEXT:    s_lshr_b32 s4, s27, 16
; S_VI-NEXT:    v_mov_b32_e32 v0, 0x200
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s27, v0
; S_VI-NEXT:    s_lshr_b32 s4, s26, 16
; S_VI-NEXT:    v_or_b32_e32 v11, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s26, v0
; S_VI-NEXT:    s_lshr_b32 s4, s25, 16
; S_VI-NEXT:    v_or_b32_e32 v10, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s25, v0
; S_VI-NEXT:    s_lshr_b32 s4, s24, 16
; S_VI-NEXT:    v_or_b32_e32 v9, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s24, v0
; S_VI-NEXT:    s_lshr_b32 s4, s23, 16
; S_VI-NEXT:    v_or_b32_e32 v8, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s23, v0
; S_VI-NEXT:    s_lshr_b32 s4, s22, 16
; S_VI-NEXT:    v_or_b32_e32 v7, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s22, v0
; S_VI-NEXT:    s_lshr_b32 s4, s21, 16
; S_VI-NEXT:    v_or_b32_e32 v6, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s21, v0
; S_VI-NEXT:    s_lshr_b32 s4, s20, 16
; S_VI-NEXT:    v_or_b32_e32 v5, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s20, v0
; S_VI-NEXT:    s_lshr_b32 s4, s19, 16
; S_VI-NEXT:    v_or_b32_e32 v4, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s19, v0
; S_VI-NEXT:    s_lshr_b32 s4, s18, 16
; S_VI-NEXT:    v_or_b32_e32 v3, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s18, v0
; S_VI-NEXT:    s_lshr_b32 s4, s17, 16
; S_VI-NEXT:    v_or_b32_e32 v2, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v12, s17, v0
; S_VI-NEXT:    s_lshr_b32 s4, s16, 16
; S_VI-NEXT:    v_or_b32_e32 v1, v12, v1
; S_VI-NEXT:    v_mov_b32_e32 v12, s4
; S_VI-NEXT:    v_add_f16_sdwa v12, v12, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v0, s16, v0
; S_VI-NEXT:    v_or_b32_e32 v0, v0, v12
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB17_3:
; S_VI-NEXT:    s_branch .LBB17_2
; S_VI-NEXT:  .LBB17_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v24f16_to_v12f32_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB17_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB17_4
; S_GFX9-NEXT:  .LBB17_2: ; %cmp.true
; S_GFX9-NEXT:    v_mov_b32_e32 v0, 0x200
; S_GFX9-NEXT:    v_pk_add_f16 v11, s27, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v10, s26, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v9, s25, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v8, s24, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v7, s23, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v6, s22, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v5, s21, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v4, s20, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v3, s19, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v2, s18, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v1, s17, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v0, s16, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB17_3:
; S_GFX9-NEXT:    s_branch .LBB17_2
; S_GFX9-NEXT:  .LBB17_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24f16_to_v12f32_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB17_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB17_4
; S_GFX11-NEXT:  .LBB17_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s23 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s22 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s21 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s20 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s19 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s18 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s17 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s16 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s15 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s14 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s13 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s12 op_sel_hi:[0,1]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB17_3:
; S_GFX11-NEXT:    s_branch .LBB17_2
; S_GFX11-NEXT:  .LBB17_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <24 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <24 x half> %a1 to <12 x float>
  br label %end

cmp.false:
  %a3 = bitcast <24 x half> %a to <12 x float>
  br label %end

end:
  %phi = phi <12 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <12 x float> %phi
}

define inreg <6 x i64> @bitcast_v6f64_to_v6i64_inreg(<6 x double> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6f64_to_v6i64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB18_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB18_4
; S_SI-NEXT:  .LBB18_2: ; %cmp.true
; S_SI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_SI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_SI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_SI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_SI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_SI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB18_3:
; S_SI-NEXT:    s_branch .LBB18_2
; S_SI-NEXT:  .LBB18_4:
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    v_mov_b32_e32 v12, s28
; S_SI-NEXT:    v_mov_b32_e32 v13, s29
; S_SI-NEXT:    v_mov_b32_e32 v14, s30
; S_SI-NEXT:    v_mov_b32_e32 v15, s31
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v6f64_to_v6i64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB18_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB18_4
; S_VI-NEXT:  .LBB18_2: ; %cmp.true
; S_VI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_VI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_VI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_VI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_VI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_VI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB18_3:
; S_VI-NEXT:    s_branch .LBB18_2
; S_VI-NEXT:  .LBB18_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v6f64_to_v6i64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB18_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB18_4
; S_GFX9-NEXT:  .LBB18_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_GFX9-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_GFX9-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_GFX9-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_GFX9-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_GFX9-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB18_3:
; S_GFX9-NEXT:    s_branch .LBB18_2
; S_GFX9-NEXT:  .LBB18_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v6f64_to_v6i64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB18_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB18_4
; S_GFX11-NEXT:  .LBB18_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f64 v[0:1], s[12:13], 1.0
; S_GFX11-NEXT:    v_add_f64 v[2:3], s[14:15], 1.0
; S_GFX11-NEXT:    v_add_f64 v[4:5], s[16:17], 1.0
; S_GFX11-NEXT:    v_add_f64 v[6:7], s[18:19], 1.0
; S_GFX11-NEXT:    v_add_f64 v[8:9], s[20:21], 1.0
; S_GFX11-NEXT:    v_add_f64 v[10:11], s[22:23], 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB18_3:
; S_GFX11-NEXT:    s_branch .LBB18_2
; S_GFX11-NEXT:  .LBB18_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <6 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <6 x double> %a1 to <6 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <6 x double> %a to <6 x i64>
  br label %end

end:
  %phi = phi <6 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x i64> %phi
}

define inreg <6 x double> @bitcast_v6i64_to_v6f64_inreg(<6 x i64> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6i64_to_v6f64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB19_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB19_3
; S_SI-NEXT:  .LBB19_2: ; %cmp.true
; S_SI-NEXT:    s_add_u32 s16, s16, 3
; S_SI-NEXT:    s_addc_u32 s17, s17, 0
; S_SI-NEXT:    s_add_u32 s18, s18, 3
; S_SI-NEXT:    s_addc_u32 s19, s19, 0
; S_SI-NEXT:    s_add_u32 s20, s20, 3
; S_SI-NEXT:    s_addc_u32 s21, s21, 0
; S_SI-NEXT:    s_add_u32 s22, s22, 3
; S_SI-NEXT:    s_addc_u32 s23, s23, 0
; S_SI-NEXT:    s_add_u32 s24, s24, 3
; S_SI-NEXT:    s_addc_u32 s25, s25, 0
; S_SI-NEXT:    s_add_u32 s26, s26, 3
; S_SI-NEXT:    s_addc_u32 s27, s27, 0
; S_SI-NEXT:  .LBB19_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v2, s18
; S_SI-NEXT:    v_mov_b32_e32 v3, s19
; S_SI-NEXT:    v_mov_b32_e32 v4, s20
; S_SI-NEXT:    v_mov_b32_e32 v5, s21
; S_SI-NEXT:    v_mov_b32_e32 v6, s22
; S_SI-NEXT:    v_mov_b32_e32 v7, s23
; S_SI-NEXT:    v_mov_b32_e32 v8, s24
; S_SI-NEXT:    v_mov_b32_e32 v9, s25
; S_SI-NEXT:    v_mov_b32_e32 v10, s26
; S_SI-NEXT:    v_mov_b32_e32 v11, s27
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB19_4:
; S_SI-NEXT:    s_branch .LBB19_2
;
; S_VI-LABEL: bitcast_v6i64_to_v6f64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB19_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB19_3
; S_VI-NEXT:  .LBB19_2: ; %cmp.true
; S_VI-NEXT:    s_add_u32 s16, s16, 3
; S_VI-NEXT:    s_addc_u32 s17, s17, 0
; S_VI-NEXT:    s_add_u32 s18, s18, 3
; S_VI-NEXT:    s_addc_u32 s19, s19, 0
; S_VI-NEXT:    s_add_u32 s20, s20, 3
; S_VI-NEXT:    s_addc_u32 s21, s21, 0
; S_VI-NEXT:    s_add_u32 s22, s22, 3
; S_VI-NEXT:    s_addc_u32 s23, s23, 0
; S_VI-NEXT:    s_add_u32 s24, s24, 3
; S_VI-NEXT:    s_addc_u32 s25, s25, 0
; S_VI-NEXT:    s_add_u32 s26, s26, 3
; S_VI-NEXT:    s_addc_u32 s27, s27, 0
; S_VI-NEXT:  .LBB19_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB19_4:
; S_VI-NEXT:    s_branch .LBB19_2
;
; S_GFX9-LABEL: bitcast_v6i64_to_v6f64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB19_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB19_3
; S_GFX9-NEXT:  .LBB19_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_u32 s16, s16, 3
; S_GFX9-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX9-NEXT:    s_add_u32 s18, s18, 3
; S_GFX9-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX9-NEXT:    s_add_u32 s20, s20, 3
; S_GFX9-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX9-NEXT:    s_add_u32 s22, s22, 3
; S_GFX9-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX9-NEXT:    s_add_u32 s24, s24, 3
; S_GFX9-NEXT:    s_addc_u32 s25, s25, 0
; S_GFX9-NEXT:    s_add_u32 s26, s26, 3
; S_GFX9-NEXT:    s_addc_u32 s27, s27, 0
; S_GFX9-NEXT:  .LBB19_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB19_4:
; S_GFX9-NEXT:    s_branch .LBB19_2
;
; S_GFX11-LABEL: bitcast_v6i64_to_v6f64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB19_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB19_3
; S_GFX11-NEXT:  .LBB19_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_u32 s0, s0, 3
; S_GFX11-NEXT:    s_addc_u32 s1, s1, 0
; S_GFX11-NEXT:    s_add_u32 s2, s2, 3
; S_GFX11-NEXT:    s_addc_u32 s3, s3, 0
; S_GFX11-NEXT:    s_add_u32 s16, s16, 3
; S_GFX11-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX11-NEXT:    s_add_u32 s18, s18, 3
; S_GFX11-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX11-NEXT:    s_add_u32 s20, s20, 3
; S_GFX11-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX11-NEXT:    s_add_u32 s22, s22, 3
; S_GFX11-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX11-NEXT:  .LBB19_3: ; %end
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB19_4:
; S_GFX11-NEXT:    s_branch .LBB19_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <6 x i64> %a, splat (i64 3)
  %a2 = bitcast <6 x i64> %a1 to <6 x double>
  br label %end

cmp.false:
  %a3 = bitcast <6 x i64> %a to <6 x double>
  br label %end

end:
  %phi = phi <6 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x double> %phi
}

define inreg <24 x i16> @bitcast_v6f64_to_v24i16_inreg(<6 x double> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6f64_to_v24i16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB20_3
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_mov_b32_e32 v0, s26
; S_SI-NEXT:    v_alignbit_b32 v24, s27, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s24
; S_SI-NEXT:    v_alignbit_b32 v25, s25, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s22
; S_SI-NEXT:    v_alignbit_b32 v26, s23, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s20
; S_SI-NEXT:    v_alignbit_b32 v27, s21, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s18
; S_SI-NEXT:    v_alignbit_b32 v28, s19, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_alignbit_b32 v29, s17, v0, 16
; S_SI-NEXT:    s_lshr_b32 s11, s27, 16
; S_SI-NEXT:    s_lshr_b32 s10, s25, 16
; S_SI-NEXT:    s_lshr_b32 s9, s23, 16
; S_SI-NEXT:    s_lshr_b32 s8, s21, 16
; S_SI-NEXT:    s_lshr_b32 s7, s19, 16
; S_SI-NEXT:    s_lshr_b32 s6, s17, 16
; S_SI-NEXT:    s_cbranch_execnz .LBB20_4
; S_SI-NEXT:  .LBB20_2: ; %cmp.true
; S_SI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_SI-NEXT:    v_add_f64 v[4:5], s[18:19], 1.0
; S_SI-NEXT:    v_add_f64 v[8:9], s[20:21], 1.0
; S_SI-NEXT:    v_add_f64 v[12:13], s[22:23], 1.0
; S_SI-NEXT:    v_add_f64 v[20:21], s[26:27], 1.0
; S_SI-NEXT:    v_add_f64 v[16:17], s[24:25], 1.0
; S_SI-NEXT:    v_alignbit_b32 v24, v21, v20, 16
; S_SI-NEXT:    v_alignbit_b32 v25, v17, v16, 16
; S_SI-NEXT:    v_alignbit_b32 v26, v13, v12, 16
; S_SI-NEXT:    v_alignbit_b32 v27, v9, v8, 16
; S_SI-NEXT:    v_alignbit_b32 v28, v5, v4, 16
; S_SI-NEXT:    v_alignbit_b32 v29, v1, v0, 16
; S_SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v21
; S_SI-NEXT:    v_lshrrev_b32_e32 v19, 16, v17
; S_SI-NEXT:    v_lshrrev_b32_e32 v15, 16, v13
; S_SI-NEXT:    v_lshrrev_b32_e32 v11, 16, v9
; S_SI-NEXT:    v_lshrrev_b32_e32 v7, 16, v5
; S_SI-NEXT:    v_lshrrev_b32_e32 v3, 16, v1
; S_SI-NEXT:    s_branch .LBB20_5
; S_SI-NEXT:  .LBB20_3:
; S_SI-NEXT:    ; implicit-def: $vgpr29
; S_SI-NEXT:    ; implicit-def: $sgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr28
; S_SI-NEXT:    ; implicit-def: $sgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr27
; S_SI-NEXT:    ; implicit-def: $sgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr26
; S_SI-NEXT:    ; implicit-def: $sgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr25
; S_SI-NEXT:    ; implicit-def: $sgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr24
; S_SI-NEXT:    ; implicit-def: $sgpr11
; S_SI-NEXT:    s_branch .LBB20_2
; S_SI-NEXT:  .LBB20_4:
; S_SI-NEXT:    v_mov_b32_e32 v1, s17
; S_SI-NEXT:    v_mov_b32_e32 v5, s19
; S_SI-NEXT:    v_mov_b32_e32 v9, s21
; S_SI-NEXT:    v_mov_b32_e32 v13, s23
; S_SI-NEXT:    v_mov_b32_e32 v17, s25
; S_SI-NEXT:    v_mov_b32_e32 v21, s27
; S_SI-NEXT:    v_mov_b32_e32 v20, s26
; S_SI-NEXT:    v_mov_b32_e32 v16, s24
; S_SI-NEXT:    v_mov_b32_e32 v12, s22
; S_SI-NEXT:    v_mov_b32_e32 v8, s20
; S_SI-NEXT:    v_mov_b32_e32 v4, s18
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v3, s6
; S_SI-NEXT:    v_mov_b32_e32 v7, s7
; S_SI-NEXT:    v_mov_b32_e32 v11, s8
; S_SI-NEXT:    v_mov_b32_e32 v15, s9
; S_SI-NEXT:    v_mov_b32_e32 v19, s10
; S_SI-NEXT:    v_mov_b32_e32 v23, s11
; S_SI-NEXT:  .LBB20_5: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v2, v1
; S_SI-NEXT:    v_mov_b32_e32 v6, v5
; S_SI-NEXT:    v_mov_b32_e32 v10, v9
; S_SI-NEXT:    v_mov_b32_e32 v14, v13
; S_SI-NEXT:    v_mov_b32_e32 v18, v17
; S_SI-NEXT:    v_mov_b32_e32 v22, v21
; S_SI-NEXT:    v_mov_b32_e32 v1, v29
; S_SI-NEXT:    v_mov_b32_e32 v5, v28
; S_SI-NEXT:    v_mov_b32_e32 v9, v27
; S_SI-NEXT:    v_mov_b32_e32 v13, v26
; S_SI-NEXT:    v_mov_b32_e32 v17, v25
; S_SI-NEXT:    v_mov_b32_e32 v21, v24
; S_SI-NEXT:    s_setpc_b64 s[30:31]
;
; S_VI-LABEL: bitcast_v6f64_to_v24i16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB20_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB20_4
; S_VI-NEXT:  .LBB20_2: ; %cmp.true
; S_VI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_VI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_VI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_VI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_VI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_VI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB20_3:
; S_VI-NEXT:    s_branch .LBB20_2
; S_VI-NEXT:  .LBB20_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v6f64_to_v24i16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB20_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB20_4
; S_GFX9-NEXT:  .LBB20_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_GFX9-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_GFX9-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_GFX9-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_GFX9-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_GFX9-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB20_3:
; S_GFX9-NEXT:    s_branch .LBB20_2
; S_GFX9-NEXT:  .LBB20_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v6f64_to_v24i16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB20_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB20_4
; S_GFX11-NEXT:  .LBB20_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f64 v[10:11], s[22:23], 1.0
; S_GFX11-NEXT:    v_add_f64 v[8:9], s[20:21], 1.0
; S_GFX11-NEXT:    v_add_f64 v[6:7], s[18:19], 1.0
; S_GFX11-NEXT:    v_add_f64 v[4:5], s[16:17], 1.0
; S_GFX11-NEXT:    v_add_f64 v[2:3], s[14:15], 1.0
; S_GFX11-NEXT:    v_add_f64 v[0:1], s[12:13], 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB20_3:
; S_GFX11-NEXT:    s_branch .LBB20_2
; S_GFX11-NEXT:  .LBB20_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <6 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <6 x double> %a1 to <24 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <6 x double> %a to <24 x i16>
  br label %end

end:
  %phi = phi <24 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x i16> %phi
}

define inreg <6 x double> @bitcast_v24i16_to_v6f64_inreg(<24 x i16> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24i16_to_v6f64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    v_mov_b32_e32 v16, v8
; S_SI-NEXT:    v_mov_b32_e32 v17, v6
; S_SI-NEXT:    v_mov_b32_e32 v18, v4
; S_SI-NEXT:    v_mov_b32_e32 v19, v2
; S_SI-NEXT:    v_mov_b32_e32 v20, v0
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    v_lshlrev_b32_e32 v25, 16, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v23, 16, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v22, 16, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v9
; S_SI-NEXT:    s_cbranch_scc0 .LBB21_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_or_b32 s4, s4, s5
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_or_b32 s5, s5, s6
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_or_b32 s6, s6, s7
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v20
; S_SI-NEXT:    s_or_b32 s7, s7, s8
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    v_or_b32_e32 v7, v0, v25
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v18
; S_SI-NEXT:    s_or_b32 s8, s8, s9
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    v_or_b32_e32 v9, v0, v23
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v17
; S_SI-NEXT:    s_or_b32 s9, s9, s10
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_and_b32_e32 v1, 0xffff, v19
; S_SI-NEXT:    v_or_b32_e32 v10, v0, v22
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v16
; S_SI-NEXT:    s_or_b32 s10, s10, s11
; S_SI-NEXT:    v_or_b32_e32 v8, v1, v24
; S_SI-NEXT:    v_or_b32_e32 v11, v0, v21
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:    s_cbranch_execnz .LBB21_3
; S_SI-NEXT:  .LBB21_2: ; %cmp.true
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v20
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    v_or_b32_e32 v0, v25, v0
; S_SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v19
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v24, v0
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v18
; S_SI-NEXT:    s_or_b32 s4, s5, s4
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s5, s6, s5
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v23, v0
; S_SI-NEXT:    s_or_b32 s6, s7, s6
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; S_SI-NEXT:    s_or_b32 s7, s8, s7
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s8, s9, s8
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    s_add_i32 s28, s28, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v22, v0
; S_SI-NEXT:    s_or_b32 s9, s10, s9
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v16
; S_SI-NEXT:    s_or_b32 s10, s11, s10
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s4, s4, 0x30000
; S_SI-NEXT:    s_add_i32 s5, s5, 0x30000
; S_SI-NEXT:    s_add_i32 s6, s6, 0x30000
; S_SI-NEXT:    s_add_i32 s7, s7, 0x30000
; S_SI-NEXT:    s_add_i32 s8, s8, 0x30000
; S_SI-NEXT:    s_add_i32 s9, s9, 0x30000
; S_SI-NEXT:    s_add_i32 s10, s10, 0x30000
; S_SI-NEXT:    v_or_b32_e32 v0, v21, v0
; S_SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:  .LBB21_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB21_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; S_SI-NEXT:    s_branch .LBB21_2
;
; S_VI-LABEL: bitcast_v24i16_to_v6f64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB21_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB21_3
; S_VI-NEXT:  .LBB21_2: ; %cmp.true
; S_VI-NEXT:    s_and_b32 s4, s16, 0xffff0000
; S_VI-NEXT:    s_add_i32 s5, s16, 3
; S_VI-NEXT:    s_and_b32 s6, s17, 0xffff0000
; S_VI-NEXT:    s_add_i32 s7, s17, 3
; S_VI-NEXT:    s_and_b32 s8, s18, 0xffff0000
; S_VI-NEXT:    s_add_i32 s9, s18, 3
; S_VI-NEXT:    s_and_b32 s10, s19, 0xffff0000
; S_VI-NEXT:    s_add_i32 s11, s19, 3
; S_VI-NEXT:    s_and_b32 s12, s20, 0xffff0000
; S_VI-NEXT:    s_add_i32 s13, s20, 3
; S_VI-NEXT:    s_and_b32 s14, s21, 0xffff0000
; S_VI-NEXT:    s_add_i32 s15, s21, 3
; S_VI-NEXT:    s_and_b32 s16, s22, 0xffff0000
; S_VI-NEXT:    s_add_i32 s17, s22, 3
; S_VI-NEXT:    s_and_b32 s18, s23, 0xffff0000
; S_VI-NEXT:    s_add_i32 s19, s23, 3
; S_VI-NEXT:    s_and_b32 s20, s24, 0xffff0000
; S_VI-NEXT:    s_add_i32 s21, s24, 3
; S_VI-NEXT:    s_and_b32 s22, s25, 0xffff0000
; S_VI-NEXT:    s_add_i32 s23, s25, 3
; S_VI-NEXT:    s_and_b32 s24, s26, 0xffff0000
; S_VI-NEXT:    s_add_i32 s25, s26, 3
; S_VI-NEXT:    s_and_b32 s26, s27, 0xffff0000
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_and_b32 s27, s27, 0xffff
; S_VI-NEXT:    s_and_b32 s25, s25, 0xffff
; S_VI-NEXT:    s_and_b32 s23, s23, 0xffff
; S_VI-NEXT:    s_and_b32 s21, s21, 0xffff
; S_VI-NEXT:    s_and_b32 s19, s19, 0xffff
; S_VI-NEXT:    s_and_b32 s17, s17, 0xffff
; S_VI-NEXT:    s_and_b32 s15, s15, 0xffff
; S_VI-NEXT:    s_and_b32 s13, s13, 0xffff
; S_VI-NEXT:    s_and_b32 s11, s11, 0xffff
; S_VI-NEXT:    s_and_b32 s9, s9, 0xffff
; S_VI-NEXT:    s_and_b32 s7, s7, 0xffff
; S_VI-NEXT:    s_and_b32 s5, s5, 0xffff
; S_VI-NEXT:    s_or_b32 s26, s26, s27
; S_VI-NEXT:    s_or_b32 s24, s24, s25
; S_VI-NEXT:    s_or_b32 s22, s22, s23
; S_VI-NEXT:    s_or_b32 s20, s20, s21
; S_VI-NEXT:    s_or_b32 s18, s18, s19
; S_VI-NEXT:    s_or_b32 s16, s16, s17
; S_VI-NEXT:    s_or_b32 s14, s14, s15
; S_VI-NEXT:    s_or_b32 s12, s12, s13
; S_VI-NEXT:    s_or_b32 s10, s10, s11
; S_VI-NEXT:    s_or_b32 s8, s8, s9
; S_VI-NEXT:    s_or_b32 s6, s6, s7
; S_VI-NEXT:    s_or_b32 s4, s4, s5
; S_VI-NEXT:    s_add_i32 s27, s26, 0x30000
; S_VI-NEXT:    s_add_i32 s26, s24, 0x30000
; S_VI-NEXT:    s_add_i32 s25, s22, 0x30000
; S_VI-NEXT:    s_add_i32 s24, s20, 0x30000
; S_VI-NEXT:    s_add_i32 s23, s18, 0x30000
; S_VI-NEXT:    s_add_i32 s22, s16, 0x30000
; S_VI-NEXT:    s_add_i32 s21, s14, 0x30000
; S_VI-NEXT:    s_add_i32 s20, s12, 0x30000
; S_VI-NEXT:    s_add_i32 s19, s10, 0x30000
; S_VI-NEXT:    s_add_i32 s18, s8, 0x30000
; S_VI-NEXT:    s_add_i32 s17, s6, 0x30000
; S_VI-NEXT:    s_add_i32 s16, s4, 0x30000
; S_VI-NEXT:  .LBB21_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB21_4:
; S_VI-NEXT:    s_branch .LBB21_2
;
; S_GFX9-LABEL: bitcast_v24i16_to_v6f64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB21_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB21_4
; S_GFX9-NEXT:  .LBB21_2: ; %cmp.true
; S_GFX9-NEXT:    v_pk_add_u16 v11, s27, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v10, s26, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v9, s25, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v8, s24, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v7, s23, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v6, s22, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v5, s21, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v4, s20, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v3, s19, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v2, s18, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v1, s17, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v0, s16, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB21_3:
; S_GFX9-NEXT:    s_branch .LBB21_2
; S_GFX9-NEXT:  .LBB21_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24i16_to_v6f64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB21_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB21_4
; S_GFX11-NEXT:  .LBB21_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_u16 v11, s23, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v10, s22, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v9, s21, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v8, s20, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v7, s19, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v6, s18, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v5, s17, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v4, s16, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v3, s15, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v2, s14, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v1, s13, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v0, s12, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB21_3:
; S_GFX11-NEXT:    s_branch .LBB21_2
; S_GFX11-NEXT:  .LBB21_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <24 x i16> %a, splat (i16 3)
  %a2 = bitcast <24 x i16> %a1 to <6 x double>
  br label %end

cmp.false:
  %a3 = bitcast <24 x i16> %a to <6 x double>
  br label %end

end:
  %phi = phi <6 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x double> %phi
}

define inreg <24 x half> @bitcast_v6f64_to_v24f16_inreg(<6 x double> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6f64_to_v24f16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB22_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_lshr_b32 s4, s27, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; S_SI-NEXT:    s_lshr_b32 s4, s26, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; S_SI-NEXT:    s_lshr_b32 s4, s25, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; S_SI-NEXT:    s_lshr_b32 s4, s24, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; S_SI-NEXT:    s_lshr_b32 s4, s23, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; S_SI-NEXT:    s_lshr_b32 s4, s22, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s4
; S_SI-NEXT:    s_lshr_b32 s4, s21, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s4
; S_SI-NEXT:    s_lshr_b32 s4, s20, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s4
; S_SI-NEXT:    s_lshr_b32 s4, s19, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s4
; S_SI-NEXT:    s_lshr_b32 s4, s18, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s4
; S_SI-NEXT:    s_lshr_b32 s4, s17, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s4
; S_SI-NEXT:    s_lshr_b32 s4, s16, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    s_cbranch_execnz .LBB22_3
; S_SI-NEXT:  .LBB22_2: ; %cmp.true
; S_SI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_SI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_SI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_SI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_SI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_SI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_SI-NEXT:    v_lshrrev_b32_e32 v24, 16, v0
; S_SI-NEXT:    v_lshrrev_b32_e32 v25, 16, v2
; S_SI-NEXT:    v_lshrrev_b32_e32 v26, 16, v3
; S_SI-NEXT:    v_lshrrev_b32_e32 v27, 16, v4
; S_SI-NEXT:    v_lshrrev_b32_e32 v28, 16, v5
; S_SI-NEXT:    v_lshrrev_b32_e32 v13, 16, v6
; S_SI-NEXT:    v_lshrrev_b32_e32 v15, 16, v7
; S_SI-NEXT:    v_lshrrev_b32_e32 v17, 16, v8
; S_SI-NEXT:    v_lshrrev_b32_e32 v19, 16, v9
; S_SI-NEXT:    v_lshrrev_b32_e32 v21, 16, v10
; S_SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v11
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v3
; S_SI-NEXT:    v_lshrrev_b32_e32 v3, 16, v1
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, v11
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, v10
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, v8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v2
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v1
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v0
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, v21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, v15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v28
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v24
; S_SI-NEXT:  .LBB22_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB22_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $vgpr2
; S_SI-NEXT:    ; implicit-def: $vgpr3
; S_SI-NEXT:    ; implicit-def: $vgpr4
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $vgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr12
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $vgpr14
; S_SI-NEXT:    ; implicit-def: $vgpr15
; S_SI-NEXT:    ; implicit-def: $vgpr16
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $vgpr18
; S_SI-NEXT:    ; implicit-def: $vgpr19
; S_SI-NEXT:    ; implicit-def: $vgpr20
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $vgpr22
; S_SI-NEXT:    ; implicit-def: $vgpr23
; S_SI-NEXT:    s_branch .LBB22_2
;
; S_VI-LABEL: bitcast_v6f64_to_v24f16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB22_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB22_4
; S_VI-NEXT:  .LBB22_2: ; %cmp.true
; S_VI-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_VI-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_VI-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_VI-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_VI-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_VI-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB22_3:
; S_VI-NEXT:    s_branch .LBB22_2
; S_VI-NEXT:  .LBB22_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v6f64_to_v24f16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB22_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB22_4
; S_GFX9-NEXT:  .LBB22_2: ; %cmp.true
; S_GFX9-NEXT:    v_add_f64 v[10:11], s[26:27], 1.0
; S_GFX9-NEXT:    v_add_f64 v[8:9], s[24:25], 1.0
; S_GFX9-NEXT:    v_add_f64 v[6:7], s[22:23], 1.0
; S_GFX9-NEXT:    v_add_f64 v[4:5], s[20:21], 1.0
; S_GFX9-NEXT:    v_add_f64 v[2:3], s[18:19], 1.0
; S_GFX9-NEXT:    v_add_f64 v[0:1], s[16:17], 1.0
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB22_3:
; S_GFX9-NEXT:    s_branch .LBB22_2
; S_GFX9-NEXT:  .LBB22_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v6f64_to_v24f16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB22_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB22_4
; S_GFX11-NEXT:  .LBB22_2: ; %cmp.true
; S_GFX11-NEXT:    v_add_f64 v[10:11], s[22:23], 1.0
; S_GFX11-NEXT:    v_add_f64 v[8:9], s[20:21], 1.0
; S_GFX11-NEXT:    v_add_f64 v[6:7], s[18:19], 1.0
; S_GFX11-NEXT:    v_add_f64 v[4:5], s[16:17], 1.0
; S_GFX11-NEXT:    v_add_f64 v[2:3], s[14:15], 1.0
; S_GFX11-NEXT:    v_add_f64 v[0:1], s[12:13], 1.0
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB22_3:
; S_GFX11-NEXT:    s_branch .LBB22_2
; S_GFX11-NEXT:  .LBB22_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <6 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <6 x double> %a1 to <24 x half>
  br label %end

cmp.false:
  %a3 = bitcast <6 x double> %a to <24 x half>
  br label %end

end:
  %phi = phi <24 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x half> %phi
}

define inreg <6 x double> @bitcast_v24f16_to_v6f64_inreg(<24 x half> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24f16_to_v6f64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cvt_f16_f32_e32 v39, s17
; S_SI-NEXT:    v_cvt_f16_f32_e32 v38, s16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v37, s19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v36, s18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v35, s21
; S_SI-NEXT:    v_cvt_f16_f32_e32 v34, s20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v33, s23
; S_SI-NEXT:    v_cvt_f16_f32_e32 v32, s22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v30, s25
; S_SI-NEXT:    v_cvt_f16_f32_e32 v28, s24
; S_SI-NEXT:    v_cvt_f16_f32_e32 v25, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v24, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v23, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v22, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v21, v5
; S_SI-NEXT:    v_cvt_f16_f32_e32 v20, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v19, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v18, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v17, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v16, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v31, s27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v29, s26
; S_SI-NEXT:    v_cvt_f16_f32_e32 v27, s29
; S_SI-NEXT:    v_cvt_f16_f32_e32 v26, s28
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    s_cbranch_scc0 .LBB23_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v39
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v37
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v35
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v33
; S_SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v30
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v31
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v27
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v25
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v23
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v21
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v19
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v17
; S_SI-NEXT:    v_or_b32_e32 v0, v38, v0
; S_SI-NEXT:    v_or_b32_e32 v1, v36, v1
; S_SI-NEXT:    v_or_b32_e32 v2, v34, v2
; S_SI-NEXT:    v_or_b32_e32 v3, v32, v3
; S_SI-NEXT:    v_or_b32_e32 v4, v28, v4
; S_SI-NEXT:    v_or_b32_e32 v5, v29, v5
; S_SI-NEXT:    v_or_b32_e32 v6, v26, v6
; S_SI-NEXT:    v_or_b32_e32 v7, v24, v7
; S_SI-NEXT:    v_or_b32_e32 v8, v22, v8
; S_SI-NEXT:    v_or_b32_e32 v9, v20, v9
; S_SI-NEXT:    v_or_b32_e32 v10, v18, v10
; S_SI-NEXT:    v_or_b32_e32 v11, v16, v11
; S_SI-NEXT:    s_cbranch_execnz .LBB23_3
; S_SI-NEXT:  .LBB23_2: ; %cmp.true
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v39
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v37
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v38
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v36
; S_SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; S_SI-NEXT:    v_or_b32_e32 v0, v1, v0
; S_SI-NEXT:    v_or_b32_e32 v1, v3, v2
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v35
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v34
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v33
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v32
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v30
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; S_SI-NEXT:    v_or_b32_e32 v2, v3, v2
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; S_SI-NEXT:    v_or_b32_e32 v3, v5, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v28
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v31
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v29
; S_SI-NEXT:    v_or_b32_e32 v4, v4, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v26
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_or_b32_e32 v5, v7, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v25
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; S_SI-NEXT:    v_or_b32_e32 v6, v8, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v23
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v22
; S_SI-NEXT:    v_or_b32_e32 v7, v8, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v20
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_or_b32_e32 v8, v10, v8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v19
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; S_SI-NEXT:    v_or_b32_e32 v9, v11, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v16
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; S_SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; S_SI-NEXT:    v_or_b32_e32 v10, v11, v10
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v12
; S_SI-NEXT:    v_or_b32_e32 v11, v13, v11
; S_SI-NEXT:  .LBB23_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB23_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; S_SI-NEXT:    s_branch .LBB23_2
;
; S_VI-LABEL: bitcast_v24f16_to_v6f64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB23_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB23_4
; S_VI-NEXT:  .LBB23_2: ; %cmp.true
; S_VI-NEXT:    s_lshr_b32 s4, s27, 16
; S_VI-NEXT:    v_mov_b32_e32 v0, 0x200
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s27, v0
; S_VI-NEXT:    s_lshr_b32 s4, s26, 16
; S_VI-NEXT:    v_or_b32_e32 v11, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s26, v0
; S_VI-NEXT:    s_lshr_b32 s4, s25, 16
; S_VI-NEXT:    v_or_b32_e32 v10, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s25, v0
; S_VI-NEXT:    s_lshr_b32 s4, s24, 16
; S_VI-NEXT:    v_or_b32_e32 v9, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s24, v0
; S_VI-NEXT:    s_lshr_b32 s4, s23, 16
; S_VI-NEXT:    v_or_b32_e32 v8, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s23, v0
; S_VI-NEXT:    s_lshr_b32 s4, s22, 16
; S_VI-NEXT:    v_or_b32_e32 v7, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s22, v0
; S_VI-NEXT:    s_lshr_b32 s4, s21, 16
; S_VI-NEXT:    v_or_b32_e32 v6, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s21, v0
; S_VI-NEXT:    s_lshr_b32 s4, s20, 16
; S_VI-NEXT:    v_or_b32_e32 v5, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s20, v0
; S_VI-NEXT:    s_lshr_b32 s4, s19, 16
; S_VI-NEXT:    v_or_b32_e32 v4, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s19, v0
; S_VI-NEXT:    s_lshr_b32 s4, s18, 16
; S_VI-NEXT:    v_or_b32_e32 v3, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s18, v0
; S_VI-NEXT:    s_lshr_b32 s4, s17, 16
; S_VI-NEXT:    v_or_b32_e32 v2, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v12, s17, v0
; S_VI-NEXT:    s_lshr_b32 s4, s16, 16
; S_VI-NEXT:    v_or_b32_e32 v1, v12, v1
; S_VI-NEXT:    v_mov_b32_e32 v12, s4
; S_VI-NEXT:    v_add_f16_sdwa v12, v12, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v0, s16, v0
; S_VI-NEXT:    v_or_b32_e32 v0, v0, v12
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB23_3:
; S_VI-NEXT:    s_branch .LBB23_2
; S_VI-NEXT:  .LBB23_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v24f16_to_v6f64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB23_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB23_4
; S_GFX9-NEXT:  .LBB23_2: ; %cmp.true
; S_GFX9-NEXT:    v_mov_b32_e32 v0, 0x200
; S_GFX9-NEXT:    v_pk_add_f16 v11, s27, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v10, s26, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v9, s25, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v8, s24, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v7, s23, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v6, s22, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v5, s21, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v4, s20, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v3, s19, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v2, s18, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v1, s17, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v0, s16, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB23_3:
; S_GFX9-NEXT:    s_branch .LBB23_2
; S_GFX9-NEXT:  .LBB23_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24f16_to_v6f64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB23_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB23_4
; S_GFX11-NEXT:  .LBB23_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s23 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s22 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s21 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s20 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s19 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s18 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s17 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s16 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s15 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s14 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s13 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s12 op_sel_hi:[0,1]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB23_3:
; S_GFX11-NEXT:    s_branch .LBB23_2
; S_GFX11-NEXT:  .LBB23_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <24 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <24 x half> %a1 to <6 x double>
  br label %end

cmp.false:
  %a3 = bitcast <24 x half> %a to <6 x double>
  br label %end

end:
  %phi = phi <6 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x double> %phi
}

define inreg <24 x i16> @bitcast_v6i64_to_v24i16_inreg(<6 x i64> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6i64_to_v24i16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB24_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_mov_b32_e32 v0, s26
; S_SI-NEXT:    v_alignbit_b32 v21, s27, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s24
; S_SI-NEXT:    v_alignbit_b32 v17, s25, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s22
; S_SI-NEXT:    v_alignbit_b32 v13, s23, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s20
; S_SI-NEXT:    v_alignbit_b32 v9, s21, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s18
; S_SI-NEXT:    v_alignbit_b32 v5, s19, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_alignbit_b32 v1, s17, v0, 16
; S_SI-NEXT:    s_lshr_b32 s6, s27, 16
; S_SI-NEXT:    s_lshr_b32 s7, s25, 16
; S_SI-NEXT:    s_lshr_b32 s8, s23, 16
; S_SI-NEXT:    s_lshr_b32 s9, s21, 16
; S_SI-NEXT:    s_lshr_b32 s10, s19, 16
; S_SI-NEXT:    s_lshr_b32 s11, s17, 16
; S_SI-NEXT:    s_cbranch_execnz .LBB24_3
; S_SI-NEXT:  .LBB24_2: ; %cmp.true
; S_SI-NEXT:    s_add_u32 s16, s16, 3
; S_SI-NEXT:    s_addc_u32 s17, s17, 0
; S_SI-NEXT:    s_add_u32 s18, s18, 3
; S_SI-NEXT:    s_addc_u32 s19, s19, 0
; S_SI-NEXT:    s_add_u32 s20, s20, 3
; S_SI-NEXT:    s_addc_u32 s21, s21, 0
; S_SI-NEXT:    s_add_u32 s22, s22, 3
; S_SI-NEXT:    s_addc_u32 s23, s23, 0
; S_SI-NEXT:    s_add_u32 s24, s24, 3
; S_SI-NEXT:    s_addc_u32 s25, s25, 0
; S_SI-NEXT:    s_add_u32 s26, s26, 3
; S_SI-NEXT:    s_addc_u32 s27, s27, 0
; S_SI-NEXT:    v_mov_b32_e32 v0, s26
; S_SI-NEXT:    v_alignbit_b32 v21, s27, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s24
; S_SI-NEXT:    v_alignbit_b32 v17, s25, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s22
; S_SI-NEXT:    v_alignbit_b32 v13, s23, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s20
; S_SI-NEXT:    v_alignbit_b32 v9, s21, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s18
; S_SI-NEXT:    v_alignbit_b32 v5, s19, v0, 16
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_alignbit_b32 v1, s17, v0, 16
; S_SI-NEXT:    s_lshr_b32 s6, s27, 16
; S_SI-NEXT:    s_lshr_b32 s7, s25, 16
; S_SI-NEXT:    s_lshr_b32 s8, s23, 16
; S_SI-NEXT:    s_lshr_b32 s9, s21, 16
; S_SI-NEXT:    s_lshr_b32 s10, s19, 16
; S_SI-NEXT:    s_lshr_b32 s11, s17, 16
; S_SI-NEXT:  .LBB24_3: ; %end
; S_SI-NEXT:    v_mov_b32_e32 v0, s16
; S_SI-NEXT:    v_mov_b32_e32 v2, s17
; S_SI-NEXT:    v_mov_b32_e32 v3, s11
; S_SI-NEXT:    v_mov_b32_e32 v4, s18
; S_SI-NEXT:    v_mov_b32_e32 v6, s19
; S_SI-NEXT:    v_mov_b32_e32 v7, s10
; S_SI-NEXT:    v_mov_b32_e32 v8, s20
; S_SI-NEXT:    v_mov_b32_e32 v10, s21
; S_SI-NEXT:    v_mov_b32_e32 v11, s9
; S_SI-NEXT:    v_mov_b32_e32 v12, s22
; S_SI-NEXT:    v_mov_b32_e32 v14, s23
; S_SI-NEXT:    v_mov_b32_e32 v15, s8
; S_SI-NEXT:    v_mov_b32_e32 v16, s24
; S_SI-NEXT:    v_mov_b32_e32 v18, s25
; S_SI-NEXT:    v_mov_b32_e32 v19, s7
; S_SI-NEXT:    v_mov_b32_e32 v20, s26
; S_SI-NEXT:    v_mov_b32_e32 v22, s27
; S_SI-NEXT:    v_mov_b32_e32 v23, s6
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB24_4:
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $sgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $sgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $sgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $sgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $sgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $sgpr6
; S_SI-NEXT:    s_branch .LBB24_2
;
; S_VI-LABEL: bitcast_v6i64_to_v24i16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB24_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB24_3
; S_VI-NEXT:  .LBB24_2: ; %cmp.true
; S_VI-NEXT:    s_add_u32 s26, s26, 3
; S_VI-NEXT:    s_addc_u32 s27, s27, 0
; S_VI-NEXT:    s_add_u32 s24, s24, 3
; S_VI-NEXT:    s_addc_u32 s25, s25, 0
; S_VI-NEXT:    s_add_u32 s22, s22, 3
; S_VI-NEXT:    s_addc_u32 s23, s23, 0
; S_VI-NEXT:    s_add_u32 s20, s20, 3
; S_VI-NEXT:    s_addc_u32 s21, s21, 0
; S_VI-NEXT:    s_add_u32 s18, s18, 3
; S_VI-NEXT:    s_addc_u32 s19, s19, 0
; S_VI-NEXT:    s_add_u32 s16, s16, 3
; S_VI-NEXT:    s_addc_u32 s17, s17, 0
; S_VI-NEXT:  .LBB24_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB24_4:
; S_VI-NEXT:    s_branch .LBB24_2
;
; S_GFX9-LABEL: bitcast_v6i64_to_v24i16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB24_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB24_3
; S_GFX9-NEXT:  .LBB24_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_u32 s26, s26, 3
; S_GFX9-NEXT:    s_addc_u32 s27, s27, 0
; S_GFX9-NEXT:    s_add_u32 s24, s24, 3
; S_GFX9-NEXT:    s_addc_u32 s25, s25, 0
; S_GFX9-NEXT:    s_add_u32 s22, s22, 3
; S_GFX9-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX9-NEXT:    s_add_u32 s20, s20, 3
; S_GFX9-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX9-NEXT:    s_add_u32 s18, s18, 3
; S_GFX9-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX9-NEXT:    s_add_u32 s16, s16, 3
; S_GFX9-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX9-NEXT:  .LBB24_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB24_4:
; S_GFX9-NEXT:    s_branch .LBB24_2
;
; S_GFX11-LABEL: bitcast_v6i64_to_v24i16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB24_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB24_3
; S_GFX11-NEXT:  .LBB24_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_u32 s22, s22, 3
; S_GFX11-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX11-NEXT:    s_add_u32 s20, s20, 3
; S_GFX11-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX11-NEXT:    s_add_u32 s18, s18, 3
; S_GFX11-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX11-NEXT:    s_add_u32 s16, s16, 3
; S_GFX11-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX11-NEXT:    s_add_u32 s2, s2, 3
; S_GFX11-NEXT:    s_addc_u32 s3, s3, 0
; S_GFX11-NEXT:    s_add_u32 s0, s0, 3
; S_GFX11-NEXT:    s_addc_u32 s1, s1, 0
; S_GFX11-NEXT:  .LBB24_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB24_4:
; S_GFX11-NEXT:    s_branch .LBB24_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <6 x i64> %a, splat (i64 3)
  %a2 = bitcast <6 x i64> %a1 to <24 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <6 x i64> %a to <24 x i16>
  br label %end

end:
  %phi = phi <24 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x i16> %phi
}

define inreg <6 x i64> @bitcast_v24i16_to_v6i64_inreg(<24 x i16> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24i16_to_v6i64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    v_mov_b32_e32 v16, v8
; S_SI-NEXT:    v_mov_b32_e32 v17, v6
; S_SI-NEXT:    v_mov_b32_e32 v18, v4
; S_SI-NEXT:    v_mov_b32_e32 v19, v2
; S_SI-NEXT:    v_mov_b32_e32 v20, v0
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    v_lshlrev_b32_e32 v25, 16, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v23, 16, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v22, 16, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v9
; S_SI-NEXT:    s_cbranch_scc0 .LBB25_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_or_b32 s4, s4, s5
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_or_b32 s5, s5, s6
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_or_b32 s6, s6, s7
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v20
; S_SI-NEXT:    s_or_b32 s7, s7, s8
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    v_or_b32_e32 v7, v0, v25
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v18
; S_SI-NEXT:    s_or_b32 s8, s8, s9
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    v_or_b32_e32 v9, v0, v23
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v17
; S_SI-NEXT:    s_or_b32 s9, s9, s10
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_and_b32_e32 v1, 0xffff, v19
; S_SI-NEXT:    v_or_b32_e32 v10, v0, v22
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v16
; S_SI-NEXT:    s_or_b32 s10, s10, s11
; S_SI-NEXT:    v_or_b32_e32 v8, v1, v24
; S_SI-NEXT:    v_or_b32_e32 v11, v0, v21
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:    s_cbranch_execnz .LBB25_3
; S_SI-NEXT:  .LBB25_2: ; %cmp.true
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v20
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    v_or_b32_e32 v0, v25, v0
; S_SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v19
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v24, v0
; S_SI-NEXT:    s_and_b32 s4, s16, 0xffff
; S_SI-NEXT:    s_lshl_b32 s5, s17, 16
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v18
; S_SI-NEXT:    s_or_b32 s4, s5, s4
; S_SI-NEXT:    s_and_b32 s5, s18, 0xffff
; S_SI-NEXT:    s_lshl_b32 s6, s19, 16
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s5, s6, s5
; S_SI-NEXT:    s_and_b32 s6, s20, 0xffff
; S_SI-NEXT:    s_lshl_b32 s7, s21, 16
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v23, v0
; S_SI-NEXT:    s_or_b32 s6, s7, s6
; S_SI-NEXT:    s_and_b32 s7, s22, 0xffff
; S_SI-NEXT:    s_lshl_b32 s8, s23, 16
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v17
; S_SI-NEXT:    s_or_b32 s7, s8, s7
; S_SI-NEXT:    s_and_b32 s8, s24, 0xffff
; S_SI-NEXT:    s_lshl_b32 s9, s25, 16
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_or_b32 s8, s9, s8
; S_SI-NEXT:    s_and_b32 s9, s26, 0xffff
; S_SI-NEXT:    s_lshl_b32 s10, s27, 16
; S_SI-NEXT:    s_add_i32 s28, s28, 3
; S_SI-NEXT:    v_or_b32_e32 v0, v22, v0
; S_SI-NEXT:    s_or_b32 s9, s10, s9
; S_SI-NEXT:    s_and_b32 s10, s28, 0xffff
; S_SI-NEXT:    s_lshl_b32 s11, s29, 16
; S_SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; S_SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v16
; S_SI-NEXT:    s_or_b32 s10, s11, s10
; S_SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; S_SI-NEXT:    s_add_i32 s4, s4, 0x30000
; S_SI-NEXT:    s_add_i32 s5, s5, 0x30000
; S_SI-NEXT:    s_add_i32 s6, s6, 0x30000
; S_SI-NEXT:    s_add_i32 s7, s7, 0x30000
; S_SI-NEXT:    s_add_i32 s8, s8, 0x30000
; S_SI-NEXT:    s_add_i32 s9, s9, 0x30000
; S_SI-NEXT:    s_add_i32 s10, s10, 0x30000
; S_SI-NEXT:    v_or_b32_e32 v0, v21, v0
; S_SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; S_SI-NEXT:    v_mov_b32_e32 v0, s4
; S_SI-NEXT:    v_mov_b32_e32 v1, s5
; S_SI-NEXT:    v_mov_b32_e32 v2, s6
; S_SI-NEXT:    v_mov_b32_e32 v3, s7
; S_SI-NEXT:    v_mov_b32_e32 v4, s8
; S_SI-NEXT:    v_mov_b32_e32 v5, s9
; S_SI-NEXT:    v_mov_b32_e32 v6, s10
; S_SI-NEXT:  .LBB25_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB25_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; S_SI-NEXT:    s_branch .LBB25_2
;
; S_VI-LABEL: bitcast_v24i16_to_v6i64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB25_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB25_3
; S_VI-NEXT:  .LBB25_2: ; %cmp.true
; S_VI-NEXT:    s_and_b32 s4, s16, 0xffff0000
; S_VI-NEXT:    s_add_i32 s5, s16, 3
; S_VI-NEXT:    s_and_b32 s6, s17, 0xffff0000
; S_VI-NEXT:    s_add_i32 s7, s17, 3
; S_VI-NEXT:    s_and_b32 s8, s18, 0xffff0000
; S_VI-NEXT:    s_add_i32 s9, s18, 3
; S_VI-NEXT:    s_and_b32 s10, s19, 0xffff0000
; S_VI-NEXT:    s_add_i32 s11, s19, 3
; S_VI-NEXT:    s_and_b32 s12, s20, 0xffff0000
; S_VI-NEXT:    s_add_i32 s13, s20, 3
; S_VI-NEXT:    s_and_b32 s14, s21, 0xffff0000
; S_VI-NEXT:    s_add_i32 s15, s21, 3
; S_VI-NEXT:    s_and_b32 s16, s22, 0xffff0000
; S_VI-NEXT:    s_add_i32 s17, s22, 3
; S_VI-NEXT:    s_and_b32 s18, s23, 0xffff0000
; S_VI-NEXT:    s_add_i32 s19, s23, 3
; S_VI-NEXT:    s_and_b32 s20, s24, 0xffff0000
; S_VI-NEXT:    s_add_i32 s21, s24, 3
; S_VI-NEXT:    s_and_b32 s22, s25, 0xffff0000
; S_VI-NEXT:    s_add_i32 s23, s25, 3
; S_VI-NEXT:    s_and_b32 s24, s26, 0xffff0000
; S_VI-NEXT:    s_add_i32 s25, s26, 3
; S_VI-NEXT:    s_and_b32 s26, s27, 0xffff0000
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_and_b32 s27, s27, 0xffff
; S_VI-NEXT:    s_and_b32 s25, s25, 0xffff
; S_VI-NEXT:    s_and_b32 s23, s23, 0xffff
; S_VI-NEXT:    s_and_b32 s21, s21, 0xffff
; S_VI-NEXT:    s_and_b32 s19, s19, 0xffff
; S_VI-NEXT:    s_and_b32 s17, s17, 0xffff
; S_VI-NEXT:    s_and_b32 s15, s15, 0xffff
; S_VI-NEXT:    s_and_b32 s13, s13, 0xffff
; S_VI-NEXT:    s_and_b32 s11, s11, 0xffff
; S_VI-NEXT:    s_and_b32 s9, s9, 0xffff
; S_VI-NEXT:    s_and_b32 s7, s7, 0xffff
; S_VI-NEXT:    s_and_b32 s5, s5, 0xffff
; S_VI-NEXT:    s_or_b32 s26, s26, s27
; S_VI-NEXT:    s_or_b32 s24, s24, s25
; S_VI-NEXT:    s_or_b32 s22, s22, s23
; S_VI-NEXT:    s_or_b32 s20, s20, s21
; S_VI-NEXT:    s_or_b32 s18, s18, s19
; S_VI-NEXT:    s_or_b32 s16, s16, s17
; S_VI-NEXT:    s_or_b32 s14, s14, s15
; S_VI-NEXT:    s_or_b32 s12, s12, s13
; S_VI-NEXT:    s_or_b32 s10, s10, s11
; S_VI-NEXT:    s_or_b32 s8, s8, s9
; S_VI-NEXT:    s_or_b32 s6, s6, s7
; S_VI-NEXT:    s_or_b32 s4, s4, s5
; S_VI-NEXT:    s_add_i32 s27, s26, 0x30000
; S_VI-NEXT:    s_add_i32 s26, s24, 0x30000
; S_VI-NEXT:    s_add_i32 s25, s22, 0x30000
; S_VI-NEXT:    s_add_i32 s24, s20, 0x30000
; S_VI-NEXT:    s_add_i32 s23, s18, 0x30000
; S_VI-NEXT:    s_add_i32 s22, s16, 0x30000
; S_VI-NEXT:    s_add_i32 s21, s14, 0x30000
; S_VI-NEXT:    s_add_i32 s20, s12, 0x30000
; S_VI-NEXT:    s_add_i32 s19, s10, 0x30000
; S_VI-NEXT:    s_add_i32 s18, s8, 0x30000
; S_VI-NEXT:    s_add_i32 s17, s6, 0x30000
; S_VI-NEXT:    s_add_i32 s16, s4, 0x30000
; S_VI-NEXT:  .LBB25_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB25_4:
; S_VI-NEXT:    s_branch .LBB25_2
;
; S_GFX9-LABEL: bitcast_v24i16_to_v6i64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB25_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB25_4
; S_GFX9-NEXT:  .LBB25_2: ; %cmp.true
; S_GFX9-NEXT:    v_pk_add_u16 v11, s27, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v10, s26, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v9, s25, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v8, s24, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v7, s23, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v6, s22, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v5, s21, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v4, s20, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v3, s19, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v2, s18, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v1, s17, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v0, s16, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB25_3:
; S_GFX9-NEXT:    s_branch .LBB25_2
; S_GFX9-NEXT:  .LBB25_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24i16_to_v6i64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB25_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB25_4
; S_GFX11-NEXT:  .LBB25_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_u16 v11, s23, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v10, s22, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v9, s21, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v8, s20, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v7, s19, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v6, s18, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v5, s17, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v4, s16, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v3, s15, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v2, s14, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v1, s13, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v0, s12, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB25_3:
; S_GFX11-NEXT:    s_branch .LBB25_2
; S_GFX11-NEXT:  .LBB25_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <24 x i16> %a, splat (i16 3)
  %a2 = bitcast <24 x i16> %a1 to <6 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <24 x i16> %a to <6 x i64>
  br label %end

end:
  %phi = phi <6 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x i64> %phi
}

define inreg <24 x half> @bitcast_v6i64_to_v24f16_inreg(<6 x i64> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v6i64_to_v24f16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    s_cmp_lg_u32 s28, 0
; S_SI-NEXT:    s_cbranch_scc0 .LBB26_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_lshr_b32 s4, s27, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; S_SI-NEXT:    s_lshr_b32 s4, s26, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; S_SI-NEXT:    s_lshr_b32 s4, s25, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; S_SI-NEXT:    s_lshr_b32 s4, s24, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; S_SI-NEXT:    s_lshr_b32 s4, s23, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; S_SI-NEXT:    s_lshr_b32 s4, s22, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s4
; S_SI-NEXT:    s_lshr_b32 s4, s21, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s4
; S_SI-NEXT:    s_lshr_b32 s4, s20, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s4
; S_SI-NEXT:    s_lshr_b32 s4, s19, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s4
; S_SI-NEXT:    s_lshr_b32 s4, s18, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s4
; S_SI-NEXT:    s_lshr_b32 s4, s17, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s4
; S_SI-NEXT:    s_lshr_b32 s4, s16, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    s_cbranch_execnz .LBB26_3
; S_SI-NEXT:  .LBB26_2: ; %cmp.true
; S_SI-NEXT:    s_add_u32 s4, s16, 3
; S_SI-NEXT:    s_addc_u32 s5, s17, 0
; S_SI-NEXT:    s_lshr_b32 s6, s4, 16
; S_SI-NEXT:    s_lshr_b32 s7, s5, 16
; S_SI-NEXT:    s_add_u32 s8, s18, 3
; S_SI-NEXT:    s_addc_u32 s9, s19, 0
; S_SI-NEXT:    s_lshr_b32 s10, s8, 16
; S_SI-NEXT:    s_lshr_b32 s11, s9, 16
; S_SI-NEXT:    s_add_u32 s12, s20, 3
; S_SI-NEXT:    s_addc_u32 s13, s21, 0
; S_SI-NEXT:    s_lshr_b32 s14, s12, 16
; S_SI-NEXT:    s_lshr_b32 s15, s13, 16
; S_SI-NEXT:    s_add_u32 s16, s22, 3
; S_SI-NEXT:    s_addc_u32 s17, s23, 0
; S_SI-NEXT:    s_lshr_b32 s18, s16, 16
; S_SI-NEXT:    s_lshr_b32 s19, s17, 16
; S_SI-NEXT:    s_add_u32 s20, s24, 3
; S_SI-NEXT:    s_addc_u32 s21, s25, 0
; S_SI-NEXT:    s_lshr_b32 s22, s20, 16
; S_SI-NEXT:    s_lshr_b32 s23, s21, 16
; S_SI-NEXT:    s_add_u32 s24, s26, 3
; S_SI-NEXT:    s_addc_u32 s25, s27, 0
; S_SI-NEXT:    s_lshr_b32 s26, s24, 16
; S_SI-NEXT:    s_lshr_b32 s27, s25, 16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s12
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s14
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s11
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s10
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s6
; S_SI-NEXT:  .LBB26_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB26_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $vgpr2
; S_SI-NEXT:    ; implicit-def: $vgpr3
; S_SI-NEXT:    ; implicit-def: $vgpr4
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $vgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr12
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $vgpr14
; S_SI-NEXT:    ; implicit-def: $vgpr15
; S_SI-NEXT:    ; implicit-def: $vgpr16
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $vgpr18
; S_SI-NEXT:    ; implicit-def: $vgpr19
; S_SI-NEXT:    ; implicit-def: $vgpr20
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $vgpr22
; S_SI-NEXT:    ; implicit-def: $vgpr23
; S_SI-NEXT:    s_branch .LBB26_2
;
; S_VI-LABEL: bitcast_v6i64_to_v24f16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB26_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB26_3
; S_VI-NEXT:  .LBB26_2: ; %cmp.true
; S_VI-NEXT:    s_add_u32 s26, s26, 3
; S_VI-NEXT:    s_addc_u32 s27, s27, 0
; S_VI-NEXT:    s_add_u32 s24, s24, 3
; S_VI-NEXT:    s_addc_u32 s25, s25, 0
; S_VI-NEXT:    s_add_u32 s22, s22, 3
; S_VI-NEXT:    s_addc_u32 s23, s23, 0
; S_VI-NEXT:    s_add_u32 s20, s20, 3
; S_VI-NEXT:    s_addc_u32 s21, s21, 0
; S_VI-NEXT:    s_add_u32 s18, s18, 3
; S_VI-NEXT:    s_addc_u32 s19, s19, 0
; S_VI-NEXT:    s_add_u32 s16, s16, 3
; S_VI-NEXT:    s_addc_u32 s17, s17, 0
; S_VI-NEXT:  .LBB26_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB26_4:
; S_VI-NEXT:    s_branch .LBB26_2
;
; S_GFX9-LABEL: bitcast_v6i64_to_v24f16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB26_4
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB26_3
; S_GFX9-NEXT:  .LBB26_2: ; %cmp.true
; S_GFX9-NEXT:    s_add_u32 s26, s26, 3
; S_GFX9-NEXT:    s_addc_u32 s27, s27, 0
; S_GFX9-NEXT:    s_add_u32 s24, s24, 3
; S_GFX9-NEXT:    s_addc_u32 s25, s25, 0
; S_GFX9-NEXT:    s_add_u32 s22, s22, 3
; S_GFX9-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX9-NEXT:    s_add_u32 s20, s20, 3
; S_GFX9-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX9-NEXT:    s_add_u32 s18, s18, 3
; S_GFX9-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX9-NEXT:    s_add_u32 s16, s16, 3
; S_GFX9-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX9-NEXT:  .LBB26_3: ; %end
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB26_4:
; S_GFX9-NEXT:    s_branch .LBB26_2
;
; S_GFX11-LABEL: bitcast_v6i64_to_v24f16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s4, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB26_4
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB26_3
; S_GFX11-NEXT:  .LBB26_2: ; %cmp.true
; S_GFX11-NEXT:    s_add_u32 s22, s22, 3
; S_GFX11-NEXT:    s_addc_u32 s23, s23, 0
; S_GFX11-NEXT:    s_add_u32 s20, s20, 3
; S_GFX11-NEXT:    s_addc_u32 s21, s21, 0
; S_GFX11-NEXT:    s_add_u32 s18, s18, 3
; S_GFX11-NEXT:    s_addc_u32 s19, s19, 0
; S_GFX11-NEXT:    s_add_u32 s16, s16, 3
; S_GFX11-NEXT:    s_addc_u32 s17, s17, 0
; S_GFX11-NEXT:    s_add_u32 s2, s2, 3
; S_GFX11-NEXT:    s_addc_u32 s3, s3, 0
; S_GFX11-NEXT:    s_add_u32 s0, s0, 3
; S_GFX11-NEXT:    s_addc_u32 s1, s1, 0
; S_GFX11-NEXT:  .LBB26_3: ; %end
; S_GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB26_4:
; S_GFX11-NEXT:    s_branch .LBB26_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <6 x i64> %a, splat (i64 3)
  %a2 = bitcast <6 x i64> %a1 to <24 x half>
  br label %end

cmp.false:
  %a3 = bitcast <6 x i64> %a to <24 x half>
  br label %end

end:
  %phi = phi <24 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x half> %phi
}

define inreg <6 x i64> @bitcast_v24f16_to_v6i64_inreg(<24 x half> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24f16_to_v6i64_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cvt_f16_f32_e32 v39, s17
; S_SI-NEXT:    v_cvt_f16_f32_e32 v38, s16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v37, s19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v36, s18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v35, s21
; S_SI-NEXT:    v_cvt_f16_f32_e32 v34, s20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v33, s23
; S_SI-NEXT:    v_cvt_f16_f32_e32 v32, s22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v30, s25
; S_SI-NEXT:    v_cvt_f16_f32_e32 v28, s24
; S_SI-NEXT:    v_cvt_f16_f32_e32 v25, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v24, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v23, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v22, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v21, v5
; S_SI-NEXT:    v_cvt_f16_f32_e32 v20, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v19, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v18, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v17, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v16, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v31, s27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v29, s26
; S_SI-NEXT:    v_cvt_f16_f32_e32 v27, s29
; S_SI-NEXT:    v_cvt_f16_f32_e32 v26, s28
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    s_cbranch_scc0 .LBB27_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v39
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v37
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v35
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v33
; S_SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v30
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v31
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v27
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v25
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v23
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v21
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v19
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v17
; S_SI-NEXT:    v_or_b32_e32 v0, v38, v0
; S_SI-NEXT:    v_or_b32_e32 v1, v36, v1
; S_SI-NEXT:    v_or_b32_e32 v2, v34, v2
; S_SI-NEXT:    v_or_b32_e32 v3, v32, v3
; S_SI-NEXT:    v_or_b32_e32 v4, v28, v4
; S_SI-NEXT:    v_or_b32_e32 v5, v29, v5
; S_SI-NEXT:    v_or_b32_e32 v6, v26, v6
; S_SI-NEXT:    v_or_b32_e32 v7, v24, v7
; S_SI-NEXT:    v_or_b32_e32 v8, v22, v8
; S_SI-NEXT:    v_or_b32_e32 v9, v20, v9
; S_SI-NEXT:    v_or_b32_e32 v10, v18, v10
; S_SI-NEXT:    v_or_b32_e32 v11, v16, v11
; S_SI-NEXT:    s_cbranch_execnz .LBB27_3
; S_SI-NEXT:  .LBB27_2: ; %cmp.true
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v39
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v37
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v38
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v36
; S_SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; S_SI-NEXT:    v_or_b32_e32 v0, v1, v0
; S_SI-NEXT:    v_or_b32_e32 v1, v3, v2
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v35
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v34
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v33
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v32
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v30
; S_SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; S_SI-NEXT:    v_or_b32_e32 v2, v3, v2
; S_SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v4
; S_SI-NEXT:    v_or_b32_e32 v3, v5, v3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v28
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v31
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v29
; S_SI-NEXT:    v_or_b32_e32 v4, v4, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v26
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_or_b32_e32 v5, v7, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v25
; S_SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; S_SI-NEXT:    v_or_b32_e32 v6, v8, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v23
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v22
; S_SI-NEXT:    v_or_b32_e32 v7, v8, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v20
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_or_b32_e32 v8, v10, v8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v19
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; S_SI-NEXT:    v_or_b32_e32 v9, v11, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v16
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; S_SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; S_SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; S_SI-NEXT:    v_or_b32_e32 v10, v11, v10
; S_SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v12
; S_SI-NEXT:    v_or_b32_e32 v11, v13, v11
; S_SI-NEXT:  .LBB27_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB27_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; S_SI-NEXT:    s_branch .LBB27_2
;
; S_VI-LABEL: bitcast_v24f16_to_v6i64_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB27_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB27_4
; S_VI-NEXT:  .LBB27_2: ; %cmp.true
; S_VI-NEXT:    s_lshr_b32 s4, s27, 16
; S_VI-NEXT:    v_mov_b32_e32 v0, 0x200
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s27, v0
; S_VI-NEXT:    s_lshr_b32 s4, s26, 16
; S_VI-NEXT:    v_or_b32_e32 v11, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s26, v0
; S_VI-NEXT:    s_lshr_b32 s4, s25, 16
; S_VI-NEXT:    v_or_b32_e32 v10, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s25, v0
; S_VI-NEXT:    s_lshr_b32 s4, s24, 16
; S_VI-NEXT:    v_or_b32_e32 v9, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s24, v0
; S_VI-NEXT:    s_lshr_b32 s4, s23, 16
; S_VI-NEXT:    v_or_b32_e32 v8, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s23, v0
; S_VI-NEXT:    s_lshr_b32 s4, s22, 16
; S_VI-NEXT:    v_or_b32_e32 v7, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s22, v0
; S_VI-NEXT:    s_lshr_b32 s4, s21, 16
; S_VI-NEXT:    v_or_b32_e32 v6, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s21, v0
; S_VI-NEXT:    s_lshr_b32 s4, s20, 16
; S_VI-NEXT:    v_or_b32_e32 v5, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s20, v0
; S_VI-NEXT:    s_lshr_b32 s4, s19, 16
; S_VI-NEXT:    v_or_b32_e32 v4, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s19, v0
; S_VI-NEXT:    s_lshr_b32 s4, s18, 16
; S_VI-NEXT:    v_or_b32_e32 v3, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v2, s18, v0
; S_VI-NEXT:    s_lshr_b32 s4, s17, 16
; S_VI-NEXT:    v_or_b32_e32 v2, v2, v1
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v12, s17, v0
; S_VI-NEXT:    s_lshr_b32 s4, s16, 16
; S_VI-NEXT:    v_or_b32_e32 v1, v12, v1
; S_VI-NEXT:    v_mov_b32_e32 v12, s4
; S_VI-NEXT:    v_add_f16_sdwa v12, v12, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v0, s16, v0
; S_VI-NEXT:    v_or_b32_e32 v0, v0, v12
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB27_3:
; S_VI-NEXT:    s_branch .LBB27_2
; S_VI-NEXT:  .LBB27_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v24f16_to_v6i64_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB27_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB27_4
; S_GFX9-NEXT:  .LBB27_2: ; %cmp.true
; S_GFX9-NEXT:    v_mov_b32_e32 v0, 0x200
; S_GFX9-NEXT:    v_pk_add_f16 v11, s27, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v10, s26, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v9, s25, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v8, s24, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v7, s23, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v6, s22, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v5, s21, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v4, s20, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v3, s19, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v2, s18, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v1, s17, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v0, s16, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB27_3:
; S_GFX9-NEXT:    s_branch .LBB27_2
; S_GFX9-NEXT:  .LBB27_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24f16_to_v6i64_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB27_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB27_4
; S_GFX11-NEXT:  .LBB27_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s23 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s22 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s21 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s20 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s19 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s18 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s17 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s16 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s15 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s14 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s13 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s12 op_sel_hi:[0,1]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB27_3:
; S_GFX11-NEXT:    s_branch .LBB27_2
; S_GFX11-NEXT:  .LBB27_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <24 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <24 x half> %a1 to <6 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <24 x half> %a to <6 x i64>
  br label %end

end:
  %phi = phi <6 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <6 x i64> %phi
}

define inreg <24 x half> @bitcast_v24i16_to_v24f16_inreg(<24 x i16> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24i16_to_v24f16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    v_mov_b32_e32 v30, v9
; S_SI-NEXT:    v_mov_b32_e32 v29, v8
; S_SI-NEXT:    v_mov_b32_e32 v28, v7
; S_SI-NEXT:    v_mov_b32_e32 v27, v6
; S_SI-NEXT:    v_mov_b32_e32 v26, v5
; S_SI-NEXT:    v_mov_b32_e32 v25, v4
; S_SI-NEXT:    v_mov_b32_e32 v24, v3
; S_SI-NEXT:    v_mov_b32_e32 v33, v2
; S_SI-NEXT:    v_mov_b32_e32 v32, v1
; S_SI-NEXT:    v_mov_b32_e32 v31, v0
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    s_cbranch_scc0 .LBB28_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s28
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s29
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, v31
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, v32
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, v33
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, v24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, v25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, v26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, v27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, v28
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, v29
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, v30
; S_SI-NEXT:    s_cbranch_execnz .LBB28_3
; S_SI-NEXT:  .LBB28_2: ; %cmp.true
; S_SI-NEXT:    v_add_i32_e32 v23, vcc, 3, v30
; S_SI-NEXT:    v_add_i32_e32 v22, vcc, 3, v29
; S_SI-NEXT:    v_add_i32_e32 v21, vcc, 3, v28
; S_SI-NEXT:    v_add_i32_e32 v20, vcc, 3, v27
; S_SI-NEXT:    v_add_i32_e32 v19, vcc, 3, v26
; S_SI-NEXT:    v_add_i32_e32 v18, vcc, 3, v25
; S_SI-NEXT:    v_add_i32_e32 v17, vcc, 3, v24
; S_SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v33
; S_SI-NEXT:    v_add_i32_e32 v15, vcc, 3, v32
; S_SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v31
; S_SI-NEXT:    s_add_i32 s29, s29, 3
; S_SI-NEXT:    s_add_i32 s28, s28, 3
; S_SI-NEXT:    s_add_i32 s27, s27, 3
; S_SI-NEXT:    s_add_i32 s26, s26, 3
; S_SI-NEXT:    s_add_i32 s25, s25, 3
; S_SI-NEXT:    s_add_i32 s24, s24, 3
; S_SI-NEXT:    s_add_i32 s23, s23, 3
; S_SI-NEXT:    s_add_i32 s22, s22, 3
; S_SI-NEXT:    s_add_i32 s21, s21, 3
; S_SI-NEXT:    s_add_i32 s20, s20, 3
; S_SI-NEXT:    s_add_i32 s19, s19, 3
; S_SI-NEXT:    s_add_i32 s18, s18, 3
; S_SI-NEXT:    s_add_i32 s17, s17, 3
; S_SI-NEXT:    s_add_i32 s16, s16, 3
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, s16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, s17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, s18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, s19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, s20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, s21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, s22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, s23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, s24
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, s25
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, s26
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, s27
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, s28
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, s29
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, v14
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, v15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, v16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, v20
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, v21
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, v22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; S_SI-NEXT:  .LBB28_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB28_4:
; S_SI-NEXT:    ; implicit-def: $vgpr0
; S_SI-NEXT:    ; implicit-def: $vgpr1
; S_SI-NEXT:    ; implicit-def: $vgpr2
; S_SI-NEXT:    ; implicit-def: $vgpr3
; S_SI-NEXT:    ; implicit-def: $vgpr4
; S_SI-NEXT:    ; implicit-def: $vgpr5
; S_SI-NEXT:    ; implicit-def: $vgpr6
; S_SI-NEXT:    ; implicit-def: $vgpr7
; S_SI-NEXT:    ; implicit-def: $vgpr8
; S_SI-NEXT:    ; implicit-def: $vgpr9
; S_SI-NEXT:    ; implicit-def: $vgpr10
; S_SI-NEXT:    ; implicit-def: $vgpr11
; S_SI-NEXT:    ; implicit-def: $vgpr12
; S_SI-NEXT:    ; implicit-def: $vgpr13
; S_SI-NEXT:    ; implicit-def: $vgpr14
; S_SI-NEXT:    ; implicit-def: $vgpr15
; S_SI-NEXT:    ; implicit-def: $vgpr16
; S_SI-NEXT:    ; implicit-def: $vgpr17
; S_SI-NEXT:    ; implicit-def: $vgpr18
; S_SI-NEXT:    ; implicit-def: $vgpr19
; S_SI-NEXT:    ; implicit-def: $vgpr20
; S_SI-NEXT:    ; implicit-def: $vgpr21
; S_SI-NEXT:    ; implicit-def: $vgpr22
; S_SI-NEXT:    ; implicit-def: $vgpr23
; S_SI-NEXT:    s_branch .LBB28_2
;
; S_VI-LABEL: bitcast_v24i16_to_v24f16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB28_4
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB28_3
; S_VI-NEXT:  .LBB28_2: ; %cmp.true
; S_VI-NEXT:    s_and_b32 s4, s16, 0xffff0000
; S_VI-NEXT:    s_add_i32 s5, s16, 3
; S_VI-NEXT:    s_and_b32 s6, s17, 0xffff0000
; S_VI-NEXT:    s_add_i32 s7, s17, 3
; S_VI-NEXT:    s_and_b32 s8, s18, 0xffff0000
; S_VI-NEXT:    s_add_i32 s9, s18, 3
; S_VI-NEXT:    s_and_b32 s10, s19, 0xffff0000
; S_VI-NEXT:    s_add_i32 s11, s19, 3
; S_VI-NEXT:    s_and_b32 s12, s20, 0xffff0000
; S_VI-NEXT:    s_add_i32 s13, s20, 3
; S_VI-NEXT:    s_and_b32 s14, s21, 0xffff0000
; S_VI-NEXT:    s_add_i32 s15, s21, 3
; S_VI-NEXT:    s_and_b32 s16, s22, 0xffff0000
; S_VI-NEXT:    s_add_i32 s17, s22, 3
; S_VI-NEXT:    s_and_b32 s18, s23, 0xffff0000
; S_VI-NEXT:    s_add_i32 s19, s23, 3
; S_VI-NEXT:    s_and_b32 s20, s24, 0xffff0000
; S_VI-NEXT:    s_add_i32 s21, s24, 3
; S_VI-NEXT:    s_and_b32 s22, s25, 0xffff0000
; S_VI-NEXT:    s_add_i32 s23, s25, 3
; S_VI-NEXT:    s_and_b32 s24, s26, 0xffff0000
; S_VI-NEXT:    s_add_i32 s25, s26, 3
; S_VI-NEXT:    s_and_b32 s26, s27, 0xffff0000
; S_VI-NEXT:    s_add_i32 s27, s27, 3
; S_VI-NEXT:    s_and_b32 s27, s27, 0xffff
; S_VI-NEXT:    s_and_b32 s25, s25, 0xffff
; S_VI-NEXT:    s_and_b32 s23, s23, 0xffff
; S_VI-NEXT:    s_and_b32 s21, s21, 0xffff
; S_VI-NEXT:    s_and_b32 s19, s19, 0xffff
; S_VI-NEXT:    s_and_b32 s17, s17, 0xffff
; S_VI-NEXT:    s_and_b32 s15, s15, 0xffff
; S_VI-NEXT:    s_and_b32 s13, s13, 0xffff
; S_VI-NEXT:    s_and_b32 s11, s11, 0xffff
; S_VI-NEXT:    s_and_b32 s9, s9, 0xffff
; S_VI-NEXT:    s_and_b32 s7, s7, 0xffff
; S_VI-NEXT:    s_and_b32 s5, s5, 0xffff
; S_VI-NEXT:    s_or_b32 s26, s26, s27
; S_VI-NEXT:    s_or_b32 s24, s24, s25
; S_VI-NEXT:    s_or_b32 s22, s22, s23
; S_VI-NEXT:    s_or_b32 s20, s20, s21
; S_VI-NEXT:    s_or_b32 s18, s18, s19
; S_VI-NEXT:    s_or_b32 s16, s16, s17
; S_VI-NEXT:    s_or_b32 s14, s14, s15
; S_VI-NEXT:    s_or_b32 s12, s12, s13
; S_VI-NEXT:    s_or_b32 s10, s10, s11
; S_VI-NEXT:    s_or_b32 s8, s8, s9
; S_VI-NEXT:    s_or_b32 s6, s6, s7
; S_VI-NEXT:    s_or_b32 s4, s4, s5
; S_VI-NEXT:    s_add_i32 s27, s26, 0x30000
; S_VI-NEXT:    s_add_i32 s26, s24, 0x30000
; S_VI-NEXT:    s_add_i32 s25, s22, 0x30000
; S_VI-NEXT:    s_add_i32 s24, s20, 0x30000
; S_VI-NEXT:    s_add_i32 s23, s18, 0x30000
; S_VI-NEXT:    s_add_i32 s22, s16, 0x30000
; S_VI-NEXT:    s_add_i32 s21, s14, 0x30000
; S_VI-NEXT:    s_add_i32 s20, s12, 0x30000
; S_VI-NEXT:    s_add_i32 s19, s10, 0x30000
; S_VI-NEXT:    s_add_i32 s18, s8, 0x30000
; S_VI-NEXT:    s_add_i32 s17, s6, 0x30000
; S_VI-NEXT:    s_add_i32 s16, s4, 0x30000
; S_VI-NEXT:  .LBB28_3: ; %end
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB28_4:
; S_VI-NEXT:    s_branch .LBB28_2
;
; S_GFX9-LABEL: bitcast_v24i16_to_v24f16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB28_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB28_4
; S_GFX9-NEXT:  .LBB28_2: ; %cmp.true
; S_GFX9-NEXT:    v_pk_add_u16 v11, s27, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v10, s26, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v9, s25, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v8, s24, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v7, s23, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v6, s22, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v5, s21, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v4, s20, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v3, s19, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v2, s18, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v1, s17, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_u16 v0, s16, 3 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB28_3:
; S_GFX9-NEXT:    s_branch .LBB28_2
; S_GFX9-NEXT:  .LBB28_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24i16_to_v24f16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB28_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB28_4
; S_GFX11-NEXT:  .LBB28_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_u16 v11, s23, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v10, s22, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v9, s21, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v8, s20, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v7, s19, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v6, s18, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v5, s17, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v4, s16, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v3, s15, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v2, s14, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v1, s13, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    v_pk_add_u16 v0, s12, 3 op_sel_hi:[1,0]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB28_3:
; S_GFX11-NEXT:    s_branch .LBB28_2
; S_GFX11-NEXT:  .LBB28_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <24 x i16> %a, splat (i16 3)
  %a2 = bitcast <24 x i16> %a1 to <24 x half>
  br label %end

cmp.false:
  %a3 = bitcast <24 x i16> %a to <24 x half>
  br label %end

end:
  %phi = phi <24 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x half> %phi
}

define inreg <24 x i16> @bitcast_v24f16_to_v24i16_inreg(<24 x half> inreg %a, i32 inreg %b) {
; S_SI-LABEL: bitcast_v24f16_to_v24i16_inreg:
; S_SI:       ; %bb.0:
; S_SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_SI-NEXT:    v_mov_b32_e32 v11, v9
; S_SI-NEXT:    v_mov_b32_e32 v12, v8
; S_SI-NEXT:    v_mov_b32_e32 v13, v7
; S_SI-NEXT:    v_mov_b32_e32 v20, v6
; S_SI-NEXT:    v_mov_b32_e32 v19, v5
; S_SI-NEXT:    v_mov_b32_e32 v18, v4
; S_SI-NEXT:    v_mov_b32_e32 v17, v3
; S_SI-NEXT:    v_mov_b32_e32 v16, v2
; S_SI-NEXT:    v_mov_b32_e32 v15, v1
; S_SI-NEXT:    v_mov_b32_e32 v14, v0
; S_SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v0, s16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v1, s17
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, s18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, s19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, s20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, s21
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, s22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, s23
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, s24
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, s25
; S_SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; S_SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; S_SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; S_SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v21, v13
; S_SI-NEXT:    v_cvt_f16_f32_e32 v22, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v23, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, s26
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, s27
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, s28
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, s29
; S_SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; S_SI-NEXT:    s_cbranch_scc0 .LBB29_4
; S_SI-NEXT:  ; %bb.1: ; %cmp.false
; S_SI-NEXT:    s_cbranch_execnz .LBB29_3
; S_SI-NEXT:  .LBB29_2: ; %cmp.true
; S_SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v22, v22
; S_SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; S_SI-NEXT:    v_cvt_f32_f16_e32 v15, v15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v14, v14
; S_SI-NEXT:    v_cvt_f32_f16_e32 v11, v11
; S_SI-NEXT:    v_add_f32_e32 v23, 0x38000000, v23
; S_SI-NEXT:    v_cvt_f32_f16_e32 v10, v10
; S_SI-NEXT:    v_cvt_f32_f16_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v22, 0x38000000, v22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v23, v23
; S_SI-NEXT:    v_add_f32_e32 v19, 0x38000000, v19
; S_SI-NEXT:    v_cvt_f32_f16_e32 v6, v6
; S_SI-NEXT:    v_cvt_f32_f16_e32 v3, v3
; S_SI-NEXT:    v_cvt_f16_f32_e32 v22, v22
; S_SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; S_SI-NEXT:    v_add_f32_e32 v18, 0x38000000, v18
; S_SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; S_SI-NEXT:    v_cvt_f32_f16_e32 v2, v2
; S_SI-NEXT:    v_cvt_f32_f16_e32 v1, v1
; S_SI-NEXT:    v_cvt_f32_f16_e32 v5, v5
; S_SI-NEXT:    v_cvt_f32_f16_e32 v9, v9
; S_SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; S_SI-NEXT:    v_cvt_f32_f16_e32 v17, v17
; S_SI-NEXT:    v_cvt_f32_f16_e32 v21, v21
; S_SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; S_SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; S_SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; S_SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; S_SI-NEXT:    v_cvt_f32_f16_e32 v0, v0
; S_SI-NEXT:    v_cvt_f32_f16_e32 v4, v4
; S_SI-NEXT:    v_cvt_f32_f16_e32 v8, v8
; S_SI-NEXT:    v_cvt_f32_f16_e32 v12, v12
; S_SI-NEXT:    v_cvt_f32_f16_e32 v16, v16
; S_SI-NEXT:    v_cvt_f32_f16_e32 v20, v20
; S_SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; S_SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; S_SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; S_SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v23
; S_SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; S_SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; S_SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; S_SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; S_SI-NEXT:    v_or_b32_e32 v22, v22, v24
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v19
; S_SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; S_SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; S_SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; S_SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; S_SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; S_SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; S_SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; S_SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; S_SI-NEXT:    v_add_f32_e32 v21, 0x38000000, v21
; S_SI-NEXT:    v_or_b32_e32 v18, v18, v24
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v15
; S_SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; S_SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; S_SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; S_SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; S_SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; S_SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; S_SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v21, v21
; S_SI-NEXT:    v_add_f32_e32 v20, 0x38000000, v20
; S_SI-NEXT:    v_or_b32_e32 v14, v14, v24
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v11
; S_SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; S_SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; S_SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; S_SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; S_SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; S_SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; S_SI-NEXT:    v_or_b32_e32 v10, v10, v24
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v7
; S_SI-NEXT:    v_or_b32_e32 v6, v6, v24
; S_SI-NEXT:    v_lshlrev_b32_e32 v24, 16, v3
; S_SI-NEXT:    v_or_b32_e32 v2, v2, v24
; S_SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; S_SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; S_SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; S_SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v13
; S_SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v17
; S_SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v21
; S_SI-NEXT:    v_or_b32_e32 v0, v0, v1
; S_SI-NEXT:    v_or_b32_e32 v4, v4, v5
; S_SI-NEXT:    v_or_b32_e32 v8, v8, v9
; S_SI-NEXT:    v_or_b32_e32 v12, v12, v13
; S_SI-NEXT:    v_or_b32_e32 v16, v16, v17
; S_SI-NEXT:    v_or_b32_e32 v20, v20, v21
; S_SI-NEXT:    v_alignbit_b32 v1, v2, v1, 16
; S_SI-NEXT:    v_alignbit_b32 v5, v6, v5, 16
; S_SI-NEXT:    v_alignbit_b32 v9, v10, v9, 16
; S_SI-NEXT:    v_alignbit_b32 v13, v14, v13, 16
; S_SI-NEXT:    v_alignbit_b32 v17, v18, v17, 16
; S_SI-NEXT:    v_alignbit_b32 v21, v22, v21, 16
; S_SI-NEXT:  .LBB29_3: ; %end
; S_SI-NEXT:    s_setpc_b64 s[30:31]
; S_SI-NEXT:  .LBB29_4:
; S_SI-NEXT:    s_branch .LBB29_2
;
; S_VI-LABEL: bitcast_v24f16_to_v24i16_inreg:
; S_VI:       ; %bb.0:
; S_VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_VI-NEXT:    s_cmp_lg_u32 s28, 0
; S_VI-NEXT:    s_cbranch_scc0 .LBB29_3
; S_VI-NEXT:  ; %bb.1: ; %cmp.false
; S_VI-NEXT:    s_cbranch_execnz .LBB29_4
; S_VI-NEXT:  .LBB29_2: ; %cmp.true
; S_VI-NEXT:    s_lshr_b32 s5, s26, 16
; S_VI-NEXT:    v_mov_b32_e32 v0, 0x200
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    s_lshr_b32 s5, s27, 16
; S_VI-NEXT:    v_add_f16_e32 v1, s26, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_mov_b32_e32 v4, s5
; S_VI-NEXT:    s_lshr_b32 s5, s25, 16
; S_VI-NEXT:    v_or_b32_e32 v10, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v1, s25, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s24, 16
; S_VI-NEXT:    v_or_b32_e32 v9, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v1, s24, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s23, 16
; S_VI-NEXT:    v_or_b32_e32 v8, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v1, s23, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s22, 16
; S_VI-NEXT:    v_or_b32_e32 v7, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v1, s22, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s21, 16
; S_VI-NEXT:    v_or_b32_e32 v6, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v1, s21, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s20, 16
; S_VI-NEXT:    v_or_b32_e32 v5, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v3, s27, v0
; S_VI-NEXT:    v_add_f16_sdwa v4, v4, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v1, s20, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s19, 16
; S_VI-NEXT:    v_or_b32_e32 v11, v3, v4
; S_VI-NEXT:    v_or_b32_e32 v4, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    v_add_f16_e32 v1, s19, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    s_lshr_b32 s5, s18, 16
; S_VI-NEXT:    v_or_b32_e32 v3, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v2, s5
; S_VI-NEXT:    s_lshr_b32 s4, s16, 16
; S_VI-NEXT:    v_add_f16_e32 v1, s18, v0
; S_VI-NEXT:    v_add_f16_sdwa v2, v2, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_or_b32_e32 v2, v1, v2
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    s_lshr_b32 s4, s17, 16
; S_VI-NEXT:    v_add_f16_sdwa v13, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_mov_b32_e32 v1, s4
; S_VI-NEXT:    v_add_f16_e32 v12, s16, v0
; S_VI-NEXT:    v_add_f16_sdwa v1, v1, v0 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; S_VI-NEXT:    v_add_f16_e32 v0, s17, v0
; S_VI-NEXT:    v_or_b32_e32 v1, v0, v1
; S_VI-NEXT:    v_or_b32_e32 v0, v12, v13
; S_VI-NEXT:    s_setpc_b64 s[30:31]
; S_VI-NEXT:  .LBB29_3:
; S_VI-NEXT:    s_branch .LBB29_2
; S_VI-NEXT:  .LBB29_4:
; S_VI-NEXT:    v_mov_b32_e32 v0, s16
; S_VI-NEXT:    v_mov_b32_e32 v1, s17
; S_VI-NEXT:    v_mov_b32_e32 v2, s18
; S_VI-NEXT:    v_mov_b32_e32 v3, s19
; S_VI-NEXT:    v_mov_b32_e32 v4, s20
; S_VI-NEXT:    v_mov_b32_e32 v5, s21
; S_VI-NEXT:    v_mov_b32_e32 v6, s22
; S_VI-NEXT:    v_mov_b32_e32 v7, s23
; S_VI-NEXT:    v_mov_b32_e32 v8, s24
; S_VI-NEXT:    v_mov_b32_e32 v9, s25
; S_VI-NEXT:    v_mov_b32_e32 v10, s26
; S_VI-NEXT:    v_mov_b32_e32 v11, s27
; S_VI-NEXT:    v_mov_b32_e32 v12, s28
; S_VI-NEXT:    v_mov_b32_e32 v13, s29
; S_VI-NEXT:    v_mov_b32_e32 v14, s30
; S_VI-NEXT:    v_mov_b32_e32 v15, s31
; S_VI-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX9-LABEL: bitcast_v24f16_to_v24i16_inreg:
; S_GFX9:       ; %bb.0:
; S_GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX9-NEXT:    s_cmp_lg_u32 s28, 0
; S_GFX9-NEXT:    s_cbranch_scc0 .LBB29_3
; S_GFX9-NEXT:  ; %bb.1: ; %cmp.false
; S_GFX9-NEXT:    s_cbranch_execnz .LBB29_4
; S_GFX9-NEXT:  .LBB29_2: ; %cmp.true
; S_GFX9-NEXT:    v_mov_b32_e32 v0, 0x200
; S_GFX9-NEXT:    v_pk_add_f16 v11, s27, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v10, s26, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v9, s25, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v8, s24, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v7, s23, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v6, s22, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v5, s21, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v4, s20, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v3, s19, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v2, s18, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v1, s17, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    v_pk_add_f16 v0, s16, v0 op_sel_hi:[1,0]
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
; S_GFX9-NEXT:  .LBB29_3:
; S_GFX9-NEXT:    s_branch .LBB29_2
; S_GFX9-NEXT:  .LBB29_4:
; S_GFX9-NEXT:    v_mov_b32_e32 v0, s16
; S_GFX9-NEXT:    v_mov_b32_e32 v1, s17
; S_GFX9-NEXT:    v_mov_b32_e32 v2, s18
; S_GFX9-NEXT:    v_mov_b32_e32 v3, s19
; S_GFX9-NEXT:    v_mov_b32_e32 v4, s20
; S_GFX9-NEXT:    v_mov_b32_e32 v5, s21
; S_GFX9-NEXT:    v_mov_b32_e32 v6, s22
; S_GFX9-NEXT:    v_mov_b32_e32 v7, s23
; S_GFX9-NEXT:    v_mov_b32_e32 v8, s24
; S_GFX9-NEXT:    v_mov_b32_e32 v9, s25
; S_GFX9-NEXT:    v_mov_b32_e32 v10, s26
; S_GFX9-NEXT:    v_mov_b32_e32 v11, s27
; S_GFX9-NEXT:    v_mov_b32_e32 v12, s28
; S_GFX9-NEXT:    v_mov_b32_e32 v13, s29
; S_GFX9-NEXT:    v_mov_b32_e32 v14, s30
; S_GFX9-NEXT:    v_mov_b32_e32 v15, s31
; S_GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; S_GFX11-LABEL: bitcast_v24f16_to_v24i16_inreg:
; S_GFX11:       ; %bb.0:
; S_GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; S_GFX11-NEXT:    s_mov_b32 s15, s3
; S_GFX11-NEXT:    s_mov_b32 s14, s2
; S_GFX11-NEXT:    s_mov_b32 s13, s1
; S_GFX11-NEXT:    s_mov_b32 s12, s0
; S_GFX11-NEXT:    s_cmp_lg_u32 s24, 0
; S_GFX11-NEXT:    s_mov_b32 s0, 0
; S_GFX11-NEXT:    s_cbranch_scc0 .LBB29_3
; S_GFX11-NEXT:  ; %bb.1: ; %Flow
; S_GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; S_GFX11-NEXT:    s_cbranch_vccnz .LBB29_4
; S_GFX11-NEXT:  .LBB29_2: ; %cmp.true
; S_GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s23 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s22 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s21 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s20 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s19 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s18 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s17 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s16 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s15 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s14 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s13 op_sel_hi:[0,1]
; S_GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s12 op_sel_hi:[0,1]
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
; S_GFX11-NEXT:  .LBB29_3:
; S_GFX11-NEXT:    s_branch .LBB29_2
; S_GFX11-NEXT:  .LBB29_4:
; S_GFX11-NEXT:    v_dual_mov_b32 v0, s12 :: v_dual_mov_b32 v1, s13
; S_GFX11-NEXT:    v_dual_mov_b32 v2, s14 :: v_dual_mov_b32 v3, s15
; S_GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; S_GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; S_GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; S_GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; S_GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; S_GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; S_GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <24 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <24 x half> %a1 to <24 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <24 x half> %a to <24 x i16>
  br label %end

end:
  %phi = phi <24 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <24 x i16> %phi
}
