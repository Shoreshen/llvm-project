; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; RUN: llc -mtriple=amdgcn -mcpu=tahiti < %s | FileCheck -check-prefix=SI %s
; RUN: llc -mtriple=amdgcn -mcpu=tonga < %s | FileCheck -check-prefix=VI %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx900 < %s | FileCheck -check-prefix=GFX9 %s
; RUN: llc -mtriple=amdgcn -mcpu=gfx1100 < %s | FileCheck -check-prefix=GFX11 %s

define inreg <18 x float> @s_bitcast_v18i32_to_v18f32_inreg(<18 x i32> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18i32_to_v18f32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB0_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB0_3
; SI-NEXT:  .LBB0_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v17, vcc, 3, v17
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_add_i32_e32 v15, vcc, 3, v15
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_add_i32_e32 v13, vcc, 3, v13
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_add_i32_e32 v11, vcc, 3, v11
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_add_i32_e32 v9, vcc, 3, v9
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_add_i32_e32 v7, vcc, 3, v7
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_add_i32_e32 v5, vcc, 3, v5
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; SI-NEXT:  .LBB0_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB0_4:
; SI-NEXT:    s_branch .LBB0_2
;
; VI-LABEL: s_bitcast_v18i32_to_v18f32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB0_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB0_3
; VI-NEXT:  .LBB0_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v17, vcc, 3, v17
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_add_u32_e32 v15, vcc, 3, v15
; VI-NEXT:    v_add_u32_e32 v14, vcc, 3, v14
; VI-NEXT:    v_add_u32_e32 v13, vcc, 3, v13
; VI-NEXT:    v_add_u32_e32 v12, vcc, 3, v12
; VI-NEXT:    v_add_u32_e32 v11, vcc, 3, v11
; VI-NEXT:    v_add_u32_e32 v10, vcc, 3, v10
; VI-NEXT:    v_add_u32_e32 v9, vcc, 3, v9
; VI-NEXT:    v_add_u32_e32 v8, vcc, 3, v8
; VI-NEXT:    v_add_u32_e32 v7, vcc, 3, v7
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_add_u32_e32 v5, vcc, 3, v5
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  .LBB0_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB0_4:
; VI-NEXT:    s_branch .LBB0_2
;
; GFX9-LABEL: s_bitcast_v18i32_to_v18f32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB0_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB0_3
; GFX9-NEXT:  .LBB0_2: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v17, 3, v17
; GFX9-NEXT:    v_add_u32_e32 v16, 3, v16
; GFX9-NEXT:    v_add_u32_e32 v15, 3, v15
; GFX9-NEXT:    v_add_u32_e32 v14, 3, v14
; GFX9-NEXT:    v_add_u32_e32 v13, 3, v13
; GFX9-NEXT:    v_add_u32_e32 v12, 3, v12
; GFX9-NEXT:    v_add_u32_e32 v11, 3, v11
; GFX9-NEXT:    v_add_u32_e32 v10, 3, v10
; GFX9-NEXT:    v_add_u32_e32 v9, 3, v9
; GFX9-NEXT:    v_add_u32_e32 v8, 3, v8
; GFX9-NEXT:    v_add_u32_e32 v7, 3, v7
; GFX9-NEXT:    v_add_u32_e32 v6, 3, v6
; GFX9-NEXT:    v_add_u32_e32 v5, 3, v5
; GFX9-NEXT:    v_add_u32_e32 v4, 3, v4
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  .LBB0_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB0_4:
; GFX9-NEXT:    s_branch .LBB0_2
;
; GFX11-LABEL: s_bitcast_v18i32_to_v18f32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB0_4
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB0_3
; GFX11-NEXT:  .LBB0_2: ; %cmp.true
; GFX11-NEXT:    s_add_i32 s29, s29, 3
; GFX11-NEXT:    s_add_i32 s28, s28, 3
; GFX11-NEXT:    s_add_i32 s27, s27, 3
; GFX11-NEXT:    s_add_i32 s26, s26, 3
; GFX11-NEXT:    s_add_i32 s25, s25, 3
; GFX11-NEXT:    s_add_i32 s24, s24, 3
; GFX11-NEXT:    s_add_i32 s23, s23, 3
; GFX11-NEXT:    s_add_i32 s22, s22, 3
; GFX11-NEXT:    s_add_i32 s21, s21, 3
; GFX11-NEXT:    s_add_i32 s20, s20, 3
; GFX11-NEXT:    s_add_i32 s19, s19, 3
; GFX11-NEXT:    s_add_i32 s18, s18, 3
; GFX11-NEXT:    s_add_i32 s17, s17, 3
; GFX11-NEXT:    s_add_i32 s16, s16, 3
; GFX11-NEXT:    s_add_i32 s3, s3, 3
; GFX11-NEXT:    s_add_i32 s2, s2, 3
; GFX11-NEXT:    s_add_i32 s1, s1, 3
; GFX11-NEXT:    s_add_i32 s0, s0, 3
; GFX11-NEXT:  .LBB0_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v16, s28 :: v_dual_mov_b32 v17, s29
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB0_4:
; GFX11-NEXT:    s_branch .LBB0_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <18 x i32> %a, splat (i32 3)
  %a2 = bitcast <18 x i32> %a1 to <18 x float>
  br label %end

cmp.false:
  %a3 = bitcast <18 x i32> %a to <18 x float>
  br label %end

end:
  %phi = phi <18 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x float> %phi
}

define inreg <18 x i32> @s_bitcast_v18f32_to_v18i32_inreg(<18 x float> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18f32_to_v18i32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB1_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB1_3
; SI-NEXT:  .LBB1_2: ; %cmp.true
; SI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; SI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; SI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; SI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; SI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; SI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; SI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; SI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; SI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; SI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; SI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; SI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; SI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; SI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; SI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; SI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; SI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; SI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; SI-NEXT:  .LBB1_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB1_4:
; SI-NEXT:    s_branch .LBB1_2
;
; VI-LABEL: s_bitcast_v18f32_to_v18i32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB1_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB1_3
; VI-NEXT:  .LBB1_2: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; VI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; VI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; VI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; VI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; VI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; VI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; VI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; VI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; VI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; VI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; VI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; VI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; VI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  .LBB1_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB1_4:
; VI-NEXT:    s_branch .LBB1_2
;
; GFX9-LABEL: s_bitcast_v18f32_to_v18i32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB1_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB1_3
; GFX9-NEXT:  .LBB1_2: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v17, 1.0, v17
; GFX9-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GFX9-NEXT:    v_add_f32_e32 v15, 1.0, v15
; GFX9-NEXT:    v_add_f32_e32 v14, 1.0, v14
; GFX9-NEXT:    v_add_f32_e32 v13, 1.0, v13
; GFX9-NEXT:    v_add_f32_e32 v12, 1.0, v12
; GFX9-NEXT:    v_add_f32_e32 v11, 1.0, v11
; GFX9-NEXT:    v_add_f32_e32 v10, 1.0, v10
; GFX9-NEXT:    v_add_f32_e32 v9, 1.0, v9
; GFX9-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GFX9-NEXT:    v_add_f32_e32 v7, 1.0, v7
; GFX9-NEXT:    v_add_f32_e32 v6, 1.0, v6
; GFX9-NEXT:    v_add_f32_e32 v5, 1.0, v5
; GFX9-NEXT:    v_add_f32_e32 v4, 1.0, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  .LBB1_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB1_4:
; GFX9-NEXT:    s_branch .LBB1_2
;
; GFX11-LABEL: s_bitcast_v18f32_to_v18i32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX11-NEXT:    scratch_store_b32 off, v32, s32 ; 4-byte Folded Spill
; GFX11-NEXT:    s_mov_b32 exec_lo, s4
; GFX11-NEXT:    v_writelane_b32 v32, s36, 0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s47, s23
; GFX11-NEXT:    s_mov_b32 s46, s22
; GFX11-NEXT:    s_mov_b32 s45, s21
; GFX11-NEXT:    v_writelane_b32 v32, s37, 1
; GFX11-NEXT:    s_mov_b32 s44, s20
; GFX11-NEXT:    s_mov_b32 s43, s19
; GFX11-NEXT:    s_mov_b32 s42, s18
; GFX11-NEXT:    s_mov_b32 s41, s17
; GFX11-NEXT:    v_writelane_b32 v32, s38, 2
; GFX11-NEXT:    s_mov_b32 s40, s16
; GFX11-NEXT:    s_mov_b32 s38, s2
; GFX11-NEXT:    s_mov_b32 s37, s1
; GFX11-NEXT:    s_mov_b32 s36, s0
; GFX11-NEXT:    v_writelane_b32 v32, s39, 3
; GFX11-NEXT:    s_mov_b32 s39, s3
; GFX11-NEXT:    s_mov_b32 s0, 0
; GFX11-NEXT:    s_and_b32 s1, vcc_lo, exec_lo
; GFX11-NEXT:    v_writelane_b32 v32, s48, 4
; GFX11-NEXT:    s_mov_b32 s48, s24
; GFX11-NEXT:    v_writelane_b32 v32, s49, 5
; GFX11-NEXT:    s_mov_b32 s49, s25
; GFX11-NEXT:    v_writelane_b32 v32, s50, 6
; GFX11-NEXT:    s_mov_b32 s50, s26
; GFX11-NEXT:    v_writelane_b32 v32, s51, 7
; GFX11-NEXT:    s_mov_b32 s51, s27
; GFX11-NEXT:    v_writelane_b32 v32, s52, 8
; GFX11-NEXT:    s_mov_b32 s52, s28
; GFX11-NEXT:    v_writelane_b32 v32, s53, 9
; GFX11-NEXT:    s_mov_b32 s53, s29
; GFX11-NEXT:    s_cbranch_scc0 .LBB1_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; GFX11-NEXT:    s_cbranch_vccnz .LBB1_4
; GFX11-NEXT:  .LBB1_2: ; %cmp.true
; GFX11-NEXT:    v_add_f32_e64 v17, s53, 1.0
; GFX11-NEXT:    v_add_f32_e64 v16, s52, 1.0
; GFX11-NEXT:    v_add_f32_e64 v15, s51, 1.0
; GFX11-NEXT:    v_add_f32_e64 v14, s50, 1.0
; GFX11-NEXT:    v_add_f32_e64 v13, s49, 1.0
; GFX11-NEXT:    v_add_f32_e64 v12, s48, 1.0
; GFX11-NEXT:    v_add_f32_e64 v11, s47, 1.0
; GFX11-NEXT:    v_add_f32_e64 v10, s46, 1.0
; GFX11-NEXT:    v_add_f32_e64 v9, s45, 1.0
; GFX11-NEXT:    v_add_f32_e64 v8, s44, 1.0
; GFX11-NEXT:    v_add_f32_e64 v7, s43, 1.0
; GFX11-NEXT:    v_add_f32_e64 v6, s42, 1.0
; GFX11-NEXT:    v_add_f32_e64 v5, s41, 1.0
; GFX11-NEXT:    v_add_f32_e64 v4, s40, 1.0
; GFX11-NEXT:    v_add_f32_e64 v3, s39, 1.0
; GFX11-NEXT:    v_add_f32_e64 v2, s38, 1.0
; GFX11-NEXT:    v_add_f32_e64 v1, s37, 1.0
; GFX11-NEXT:    v_add_f32_e64 v0, s36, 1.0
; GFX11-NEXT:    s_branch .LBB1_5
; GFX11-NEXT:  .LBB1_3:
; GFX11-NEXT:    s_branch .LBB1_2
; GFX11-NEXT:  .LBB1_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s36 :: v_dual_mov_b32 v1, s37
; GFX11-NEXT:    v_dual_mov_b32 v2, s38 :: v_dual_mov_b32 v3, s39
; GFX11-NEXT:    v_dual_mov_b32 v4, s40 :: v_dual_mov_b32 v5, s41
; GFX11-NEXT:    v_dual_mov_b32 v6, s42 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v8, s44 :: v_dual_mov_b32 v9, s45
; GFX11-NEXT:    v_dual_mov_b32 v10, s46 :: v_dual_mov_b32 v11, s47
; GFX11-NEXT:    v_dual_mov_b32 v12, s48 :: v_dual_mov_b32 v13, s49
; GFX11-NEXT:    v_dual_mov_b32 v14, s50 :: v_dual_mov_b32 v15, s51
; GFX11-NEXT:    v_dual_mov_b32 v16, s52 :: v_dual_mov_b32 v17, s53
; GFX11-NEXT:    v_dual_mov_b32 v18, s54 :: v_dual_mov_b32 v19, s55
; GFX11-NEXT:    v_dual_mov_b32 v20, s56 :: v_dual_mov_b32 v21, s57
; GFX11-NEXT:    v_dual_mov_b32 v22, s58 :: v_dual_mov_b32 v23, s59
; GFX11-NEXT:    v_dual_mov_b32 v24, s60 :: v_dual_mov_b32 v25, s61
; GFX11-NEXT:    v_dual_mov_b32 v26, s62 :: v_dual_mov_b32 v27, s63
; GFX11-NEXT:    v_dual_mov_b32 v28, s64 :: v_dual_mov_b32 v29, s65
; GFX11-NEXT:    v_dual_mov_b32 v30, s66 :: v_dual_mov_b32 v31, s67
; GFX11-NEXT:  .LBB1_5: ; %end
; GFX11-NEXT:    v_readlane_b32 s53, v32, 9
; GFX11-NEXT:    v_readlane_b32 s52, v32, 8
; GFX11-NEXT:    v_readlane_b32 s51, v32, 7
; GFX11-NEXT:    v_readlane_b32 s50, v32, 6
; GFX11-NEXT:    v_readlane_b32 s49, v32, 5
; GFX11-NEXT:    v_readlane_b32 s48, v32, 4
; GFX11-NEXT:    v_readlane_b32 s39, v32, 3
; GFX11-NEXT:    v_readlane_b32 s38, v32, 2
; GFX11-NEXT:    v_readlane_b32 s37, v32, 1
; GFX11-NEXT:    v_readlane_b32 s36, v32, 0
; GFX11-NEXT:    s_xor_saveexec_b32 s0, -1
; GFX11-NEXT:    scratch_load_b32 v32, off, s32 ; 4-byte Folded Reload
; GFX11-NEXT:    s_mov_b32 exec_lo, s0
; GFX11-NEXT:    s_waitcnt vmcnt(0)
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <18 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <18 x float> %a1 to <18 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <18 x float> %a to <18 x i32>
  br label %end

end:
  %phi = phi <18 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x i32> %phi
}

define inreg <9 x i64> @s_bitcast_v18i32_to_v9i64_inreg(<18 x i32> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18i32_to_v9i64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB2_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB2_3
; SI-NEXT:  .LBB2_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v17, vcc, 3, v17
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_add_i32_e32 v15, vcc, 3, v15
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_add_i32_e32 v13, vcc, 3, v13
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_add_i32_e32 v11, vcc, 3, v11
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_add_i32_e32 v9, vcc, 3, v9
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_add_i32_e32 v7, vcc, 3, v7
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_add_i32_e32 v5, vcc, 3, v5
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; SI-NEXT:  .LBB2_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB2_4:
; SI-NEXT:    s_branch .LBB2_2
;
; VI-LABEL: s_bitcast_v18i32_to_v9i64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB2_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB2_3
; VI-NEXT:  .LBB2_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v17, vcc, 3, v17
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_add_u32_e32 v15, vcc, 3, v15
; VI-NEXT:    v_add_u32_e32 v14, vcc, 3, v14
; VI-NEXT:    v_add_u32_e32 v13, vcc, 3, v13
; VI-NEXT:    v_add_u32_e32 v12, vcc, 3, v12
; VI-NEXT:    v_add_u32_e32 v11, vcc, 3, v11
; VI-NEXT:    v_add_u32_e32 v10, vcc, 3, v10
; VI-NEXT:    v_add_u32_e32 v9, vcc, 3, v9
; VI-NEXT:    v_add_u32_e32 v8, vcc, 3, v8
; VI-NEXT:    v_add_u32_e32 v7, vcc, 3, v7
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_add_u32_e32 v5, vcc, 3, v5
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  .LBB2_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB2_4:
; VI-NEXT:    s_branch .LBB2_2
;
; GFX9-LABEL: s_bitcast_v18i32_to_v9i64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB2_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB2_3
; GFX9-NEXT:  .LBB2_2: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v17, 3, v17
; GFX9-NEXT:    v_add_u32_e32 v16, 3, v16
; GFX9-NEXT:    v_add_u32_e32 v15, 3, v15
; GFX9-NEXT:    v_add_u32_e32 v14, 3, v14
; GFX9-NEXT:    v_add_u32_e32 v13, 3, v13
; GFX9-NEXT:    v_add_u32_e32 v12, 3, v12
; GFX9-NEXT:    v_add_u32_e32 v11, 3, v11
; GFX9-NEXT:    v_add_u32_e32 v10, 3, v10
; GFX9-NEXT:    v_add_u32_e32 v9, 3, v9
; GFX9-NEXT:    v_add_u32_e32 v8, 3, v8
; GFX9-NEXT:    v_add_u32_e32 v7, 3, v7
; GFX9-NEXT:    v_add_u32_e32 v6, 3, v6
; GFX9-NEXT:    v_add_u32_e32 v5, 3, v5
; GFX9-NEXT:    v_add_u32_e32 v4, 3, v4
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  .LBB2_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB2_4:
; GFX9-NEXT:    s_branch .LBB2_2
;
; GFX11-LABEL: s_bitcast_v18i32_to_v9i64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB2_4
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB2_3
; GFX11-NEXT:  .LBB2_2: ; %cmp.true
; GFX11-NEXT:    s_add_i32 s29, s29, 3
; GFX11-NEXT:    s_add_i32 s28, s28, 3
; GFX11-NEXT:    s_add_i32 s27, s27, 3
; GFX11-NEXT:    s_add_i32 s26, s26, 3
; GFX11-NEXT:    s_add_i32 s25, s25, 3
; GFX11-NEXT:    s_add_i32 s24, s24, 3
; GFX11-NEXT:    s_add_i32 s23, s23, 3
; GFX11-NEXT:    s_add_i32 s22, s22, 3
; GFX11-NEXT:    s_add_i32 s21, s21, 3
; GFX11-NEXT:    s_add_i32 s20, s20, 3
; GFX11-NEXT:    s_add_i32 s19, s19, 3
; GFX11-NEXT:    s_add_i32 s18, s18, 3
; GFX11-NEXT:    s_add_i32 s17, s17, 3
; GFX11-NEXT:    s_add_i32 s16, s16, 3
; GFX11-NEXT:    s_add_i32 s3, s3, 3
; GFX11-NEXT:    s_add_i32 s2, s2, 3
; GFX11-NEXT:    s_add_i32 s1, s1, 3
; GFX11-NEXT:    s_add_i32 s0, s0, 3
; GFX11-NEXT:  .LBB2_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v16, s28 :: v_dual_mov_b32 v17, s29
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB2_4:
; GFX11-NEXT:    s_branch .LBB2_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <18 x i32> %a, splat (i32 3)
  %a2 = bitcast <18 x i32> %a1 to <9 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <18 x i32> %a to <9 x i64>
  br label %end

end:
  %phi = phi <9 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x i64> %phi
}

define inreg <18 x i32> @s_bitcast_v9i64_to_v18i32_inreg(<9 x i64> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9i64_to_v18i32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB3_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB3_3
; SI-NEXT:  .LBB3_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_addc_u32_e32 v15, vcc, 0, v15, vcc
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_addc_u32_e32 v13, vcc, 0, v13, vcc
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_addc_u32_e32 v11, vcc, 0, v11, vcc
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_addc_u32_e32 v9, vcc, 0, v9, vcc
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_addc_u32_e32 v7, vcc, 0, v7, vcc
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_addc_u32_e32 v5, vcc, 0, v5, vcc
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; SI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; SI-NEXT:  .LBB3_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB3_4:
; SI-NEXT:    s_branch .LBB3_2
;
; VI-LABEL: s_bitcast_v9i64_to_v18i32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB3_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB3_3
; VI-NEXT:  .LBB3_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; VI-NEXT:    v_add_u32_e32 v14, vcc, 3, v14
; VI-NEXT:    v_addc_u32_e32 v15, vcc, 0, v15, vcc
; VI-NEXT:    v_add_u32_e32 v12, vcc, 3, v12
; VI-NEXT:    v_addc_u32_e32 v13, vcc, 0, v13, vcc
; VI-NEXT:    v_add_u32_e32 v10, vcc, 3, v10
; VI-NEXT:    v_addc_u32_e32 v11, vcc, 0, v11, vcc
; VI-NEXT:    v_add_u32_e32 v8, vcc, 3, v8
; VI-NEXT:    v_addc_u32_e32 v9, vcc, 0, v9, vcc
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_addc_u32_e32 v7, vcc, 0, v7, vcc
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_addc_u32_e32 v5, vcc, 0, v5, vcc
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  .LBB3_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB3_4:
; VI-NEXT:    s_branch .LBB3_2
;
; GFX9-LABEL: s_bitcast_v9i64_to_v18i32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB3_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB3_3
; GFX9-NEXT:  .LBB3_2: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v16, vcc, 3, v16
; GFX9-NEXT:    v_addc_co_u32_e32 v17, vcc, 0, v17, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v14, vcc, 3, v14
; GFX9-NEXT:    v_addc_co_u32_e32 v15, vcc, 0, v15, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v12, vcc, 3, v12
; GFX9-NEXT:    v_addc_co_u32_e32 v13, vcc, 0, v13, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v10, vcc, 3, v10
; GFX9-NEXT:    v_addc_co_u32_e32 v11, vcc, 0, v11, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v8, vcc, 3, v8
; GFX9-NEXT:    v_addc_co_u32_e32 v9, vcc, 0, v9, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v6, vcc, 3, v6
; GFX9-NEXT:    v_addc_co_u32_e32 v7, vcc, 0, v7, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v4, vcc, 3, v4
; GFX9-NEXT:    v_addc_co_u32_e32 v5, vcc, 0, v5, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  .LBB3_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB3_4:
; GFX9-NEXT:    s_branch .LBB3_2
;
; GFX11-LABEL: s_bitcast_v9i64_to_v18i32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB3_4
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB3_3
; GFX11-NEXT:  .LBB3_2: ; %cmp.true
; GFX11-NEXT:    s_add_u32 s28, s28, 3
; GFX11-NEXT:    s_addc_u32 s29, s29, 0
; GFX11-NEXT:    s_add_u32 s26, s26, 3
; GFX11-NEXT:    s_addc_u32 s27, s27, 0
; GFX11-NEXT:    s_add_u32 s24, s24, 3
; GFX11-NEXT:    s_addc_u32 s25, s25, 0
; GFX11-NEXT:    s_add_u32 s22, s22, 3
; GFX11-NEXT:    s_addc_u32 s23, s23, 0
; GFX11-NEXT:    s_add_u32 s20, s20, 3
; GFX11-NEXT:    s_addc_u32 s21, s21, 0
; GFX11-NEXT:    s_add_u32 s18, s18, 3
; GFX11-NEXT:    s_addc_u32 s19, s19, 0
; GFX11-NEXT:    s_add_u32 s16, s16, 3
; GFX11-NEXT:    s_addc_u32 s17, s17, 0
; GFX11-NEXT:    s_add_u32 s2, s2, 3
; GFX11-NEXT:    s_addc_u32 s3, s3, 0
; GFX11-NEXT:    s_add_u32 s0, s0, 3
; GFX11-NEXT:    s_addc_u32 s1, s1, 0
; GFX11-NEXT:  .LBB3_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v16, s28 :: v_dual_mov_b32 v17, s29
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB3_4:
; GFX11-NEXT:    s_branch .LBB3_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <9 x i64> %a, splat (i64 3)
  %a2 = bitcast <9 x i64> %a1 to <18 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <9 x i64> %a to <18 x i32>
  br label %end

end:
  %phi = phi <18 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x i32> %phi
}

define inreg <9 x double> @s_bitcast_v18i32_to_v9f64_inreg(<18 x i32> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18i32_to_v9f64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB4_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB4_3
; SI-NEXT:  .LBB4_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v17, vcc, 3, v17
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_add_i32_e32 v15, vcc, 3, v15
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_add_i32_e32 v13, vcc, 3, v13
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_add_i32_e32 v11, vcc, 3, v11
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_add_i32_e32 v9, vcc, 3, v9
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_add_i32_e32 v7, vcc, 3, v7
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_add_i32_e32 v5, vcc, 3, v5
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; SI-NEXT:  .LBB4_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB4_4:
; SI-NEXT:    s_branch .LBB4_2
;
; VI-LABEL: s_bitcast_v18i32_to_v9f64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB4_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB4_3
; VI-NEXT:  .LBB4_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v17, vcc, 3, v17
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_add_u32_e32 v15, vcc, 3, v15
; VI-NEXT:    v_add_u32_e32 v14, vcc, 3, v14
; VI-NEXT:    v_add_u32_e32 v13, vcc, 3, v13
; VI-NEXT:    v_add_u32_e32 v12, vcc, 3, v12
; VI-NEXT:    v_add_u32_e32 v11, vcc, 3, v11
; VI-NEXT:    v_add_u32_e32 v10, vcc, 3, v10
; VI-NEXT:    v_add_u32_e32 v9, vcc, 3, v9
; VI-NEXT:    v_add_u32_e32 v8, vcc, 3, v8
; VI-NEXT:    v_add_u32_e32 v7, vcc, 3, v7
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_add_u32_e32 v5, vcc, 3, v5
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:  .LBB4_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB4_4:
; VI-NEXT:    s_branch .LBB4_2
;
; GFX9-LABEL: s_bitcast_v18i32_to_v9f64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB4_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB4_3
; GFX9-NEXT:  .LBB4_2: ; %cmp.true
; GFX9-NEXT:    v_add_u32_e32 v17, 3, v17
; GFX9-NEXT:    v_add_u32_e32 v16, 3, v16
; GFX9-NEXT:    v_add_u32_e32 v15, 3, v15
; GFX9-NEXT:    v_add_u32_e32 v14, 3, v14
; GFX9-NEXT:    v_add_u32_e32 v13, 3, v13
; GFX9-NEXT:    v_add_u32_e32 v12, 3, v12
; GFX9-NEXT:    v_add_u32_e32 v11, 3, v11
; GFX9-NEXT:    v_add_u32_e32 v10, 3, v10
; GFX9-NEXT:    v_add_u32_e32 v9, 3, v9
; GFX9-NEXT:    v_add_u32_e32 v8, 3, v8
; GFX9-NEXT:    v_add_u32_e32 v7, 3, v7
; GFX9-NEXT:    v_add_u32_e32 v6, 3, v6
; GFX9-NEXT:    v_add_u32_e32 v5, 3, v5
; GFX9-NEXT:    v_add_u32_e32 v4, 3, v4
; GFX9-NEXT:    v_add_u32_e32 v3, 3, v3
; GFX9-NEXT:    v_add_u32_e32 v2, 3, v2
; GFX9-NEXT:    v_add_u32_e32 v1, 3, v1
; GFX9-NEXT:    v_add_u32_e32 v0, 3, v0
; GFX9-NEXT:  .LBB4_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB4_4:
; GFX9-NEXT:    s_branch .LBB4_2
;
; GFX11-LABEL: s_bitcast_v18i32_to_v9f64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB4_4
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB4_3
; GFX11-NEXT:  .LBB4_2: ; %cmp.true
; GFX11-NEXT:    s_add_i32 s29, s29, 3
; GFX11-NEXT:    s_add_i32 s28, s28, 3
; GFX11-NEXT:    s_add_i32 s27, s27, 3
; GFX11-NEXT:    s_add_i32 s26, s26, 3
; GFX11-NEXT:    s_add_i32 s25, s25, 3
; GFX11-NEXT:    s_add_i32 s24, s24, 3
; GFX11-NEXT:    s_add_i32 s23, s23, 3
; GFX11-NEXT:    s_add_i32 s22, s22, 3
; GFX11-NEXT:    s_add_i32 s21, s21, 3
; GFX11-NEXT:    s_add_i32 s20, s20, 3
; GFX11-NEXT:    s_add_i32 s19, s19, 3
; GFX11-NEXT:    s_add_i32 s18, s18, 3
; GFX11-NEXT:    s_add_i32 s17, s17, 3
; GFX11-NEXT:    s_add_i32 s16, s16, 3
; GFX11-NEXT:    s_add_i32 s3, s3, 3
; GFX11-NEXT:    s_add_i32 s2, s2, 3
; GFX11-NEXT:    s_add_i32 s1, s1, 3
; GFX11-NEXT:    s_add_i32 s0, s0, 3
; GFX11-NEXT:  .LBB4_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v16, s28 :: v_dual_mov_b32 v17, s29
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB4_4:
; GFX11-NEXT:    s_branch .LBB4_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <18 x i32> %a, splat (i32 3)
  %a2 = bitcast <18 x i32> %a1 to <9 x double>
  br label %end

cmp.false:
  %a3 = bitcast <18 x i32> %a to <9 x double>
  br label %end

end:
  %phi = phi <9 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x double> %phi
}

define inreg <18 x i32> @s_bitcast_v9f64_to_v18i32_inreg(<9 x double> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9f64_to_v18i32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB5_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB5_3
; SI-NEXT:  .LBB5_2: ; %cmp.true
; SI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; SI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; SI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; SI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; SI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; SI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; SI-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; SI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; SI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; SI-NEXT:  .LBB5_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB5_4:
; SI-NEXT:    s_branch .LBB5_2
;
; VI-LABEL: s_bitcast_v9f64_to_v18i32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB5_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB5_3
; VI-NEXT:  .LBB5_2: ; %cmp.true
; VI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; VI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; VI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; VI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; VI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; VI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; VI-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB5_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB5_4:
; VI-NEXT:    s_branch .LBB5_2
;
; GFX9-LABEL: s_bitcast_v9f64_to_v18i32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB5_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB5_3
; GFX9-NEXT:  .LBB5_2: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX9-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; GFX9-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; GFX9-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; GFX9-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; GFX9-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; GFX9-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB5_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB5_4:
; GFX9-NEXT:    s_branch .LBB5_2
;
; GFX11-LABEL: s_bitcast_v9f64_to_v18i32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX11-NEXT:    scratch_store_b32 off, v32, s32 ; 4-byte Folded Spill
; GFX11-NEXT:    s_mov_b32 exec_lo, s4
; GFX11-NEXT:    v_writelane_b32 v32, s36, 0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s47, s23
; GFX11-NEXT:    s_mov_b32 s46, s22
; GFX11-NEXT:    s_mov_b32 s45, s21
; GFX11-NEXT:    v_writelane_b32 v32, s37, 1
; GFX11-NEXT:    s_mov_b32 s44, s20
; GFX11-NEXT:    s_mov_b32 s43, s19
; GFX11-NEXT:    s_mov_b32 s42, s18
; GFX11-NEXT:    s_mov_b32 s41, s17
; GFX11-NEXT:    v_writelane_b32 v32, s38, 2
; GFX11-NEXT:    s_mov_b32 s40, s16
; GFX11-NEXT:    s_mov_b32 s38, s2
; GFX11-NEXT:    s_mov_b32 s37, s1
; GFX11-NEXT:    s_mov_b32 s36, s0
; GFX11-NEXT:    v_writelane_b32 v32, s39, 3
; GFX11-NEXT:    s_mov_b32 s39, s3
; GFX11-NEXT:    s_mov_b32 s0, 0
; GFX11-NEXT:    s_and_b32 s1, vcc_lo, exec_lo
; GFX11-NEXT:    v_writelane_b32 v32, s48, 4
; GFX11-NEXT:    s_mov_b32 s48, s24
; GFX11-NEXT:    v_writelane_b32 v32, s49, 5
; GFX11-NEXT:    s_mov_b32 s49, s25
; GFX11-NEXT:    v_writelane_b32 v32, s50, 6
; GFX11-NEXT:    s_mov_b32 s50, s26
; GFX11-NEXT:    v_writelane_b32 v32, s51, 7
; GFX11-NEXT:    s_mov_b32 s51, s27
; GFX11-NEXT:    v_writelane_b32 v32, s52, 8
; GFX11-NEXT:    s_mov_b32 s52, s28
; GFX11-NEXT:    v_writelane_b32 v32, s53, 9
; GFX11-NEXT:    s_mov_b32 s53, s29
; GFX11-NEXT:    s_cbranch_scc0 .LBB5_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; GFX11-NEXT:    s_cbranch_vccnz .LBB5_4
; GFX11-NEXT:  .LBB5_2: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[16:17], s[52:53], 1.0
; GFX11-NEXT:    v_add_f64 v[14:15], s[50:51], 1.0
; GFX11-NEXT:    v_add_f64 v[12:13], s[48:49], 1.0
; GFX11-NEXT:    v_add_f64 v[10:11], s[46:47], 1.0
; GFX11-NEXT:    v_add_f64 v[8:9], s[44:45], 1.0
; GFX11-NEXT:    v_add_f64 v[6:7], s[42:43], 1.0
; GFX11-NEXT:    v_add_f64 v[4:5], s[40:41], 1.0
; GFX11-NEXT:    v_add_f64 v[2:3], s[38:39], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], s[36:37], 1.0
; GFX11-NEXT:    s_branch .LBB5_5
; GFX11-NEXT:  .LBB5_3:
; GFX11-NEXT:    s_branch .LBB5_2
; GFX11-NEXT:  .LBB5_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s36 :: v_dual_mov_b32 v1, s37
; GFX11-NEXT:    v_dual_mov_b32 v2, s38 :: v_dual_mov_b32 v3, s39
; GFX11-NEXT:    v_dual_mov_b32 v4, s40 :: v_dual_mov_b32 v5, s41
; GFX11-NEXT:    v_dual_mov_b32 v6, s42 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v8, s44 :: v_dual_mov_b32 v9, s45
; GFX11-NEXT:    v_dual_mov_b32 v10, s46 :: v_dual_mov_b32 v11, s47
; GFX11-NEXT:    v_dual_mov_b32 v12, s48 :: v_dual_mov_b32 v13, s49
; GFX11-NEXT:    v_dual_mov_b32 v14, s50 :: v_dual_mov_b32 v15, s51
; GFX11-NEXT:    v_dual_mov_b32 v16, s52 :: v_dual_mov_b32 v17, s53
; GFX11-NEXT:    v_dual_mov_b32 v18, s54 :: v_dual_mov_b32 v19, s55
; GFX11-NEXT:    v_dual_mov_b32 v20, s56 :: v_dual_mov_b32 v21, s57
; GFX11-NEXT:    v_dual_mov_b32 v22, s58 :: v_dual_mov_b32 v23, s59
; GFX11-NEXT:    v_dual_mov_b32 v24, s60 :: v_dual_mov_b32 v25, s61
; GFX11-NEXT:    v_dual_mov_b32 v26, s62 :: v_dual_mov_b32 v27, s63
; GFX11-NEXT:    v_dual_mov_b32 v28, s64 :: v_dual_mov_b32 v29, s65
; GFX11-NEXT:    v_dual_mov_b32 v30, s66 :: v_dual_mov_b32 v31, s67
; GFX11-NEXT:  .LBB5_5: ; %end
; GFX11-NEXT:    v_readlane_b32 s53, v32, 9
; GFX11-NEXT:    v_readlane_b32 s52, v32, 8
; GFX11-NEXT:    v_readlane_b32 s51, v32, 7
; GFX11-NEXT:    v_readlane_b32 s50, v32, 6
; GFX11-NEXT:    v_readlane_b32 s49, v32, 5
; GFX11-NEXT:    v_readlane_b32 s48, v32, 4
; GFX11-NEXT:    v_readlane_b32 s39, v32, 3
; GFX11-NEXT:    v_readlane_b32 s38, v32, 2
; GFX11-NEXT:    v_readlane_b32 s37, v32, 1
; GFX11-NEXT:    v_readlane_b32 s36, v32, 0
; GFX11-NEXT:    s_xor_saveexec_b32 s0, -1
; GFX11-NEXT:    scratch_load_b32 v32, off, s32 ; 4-byte Folded Reload
; GFX11-NEXT:    s_mov_b32 exec_lo, s0
; GFX11-NEXT:    s_waitcnt vmcnt(0)
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <9 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <9 x double> %a1 to <18 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <9 x double> %a to <18 x i32>
  br label %end

end:
  %phi = phi <18 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x i32> %phi
}

define inreg <36 x i16> @s_bitcast_v18i32_to_v36i16_inreg(<18 x i32> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18i32_to_v36i16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_readfirstlane_b32 s9, v1
; SI-NEXT:    v_readfirstlane_b32 s8, v2
; SI-NEXT:    v_readfirstlane_b32 s7, v3
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_readfirstlane_b32 s6, v4
; SI-NEXT:    s_cbranch_scc0 .LBB6_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_mov_b32_e32 v1, s7
; SI-NEXT:    v_mov_b32_e32 v2, s9
; SI-NEXT:    v_mov_b32_e32 v3, s28
; SI-NEXT:    v_mov_b32_e32 v4, s26
; SI-NEXT:    v_mov_b32_e32 v5, s24
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s20
; SI-NEXT:    v_mov_b32_e32 v8, s18
; SI-NEXT:    v_mov_b32_e32 v9, s16
; SI-NEXT:    v_alignbit_b32 v1, s6, v1, 16
; SI-NEXT:    v_alignbit_b32 v2, s8, v2, 16
; SI-NEXT:    v_alignbit_b32 v3, s29, v3, 16
; SI-NEXT:    v_alignbit_b32 v4, s27, v4, 16
; SI-NEXT:    v_alignbit_b32 v5, s25, v5, 16
; SI-NEXT:    v_alignbit_b32 v6, s23, v6, 16
; SI-NEXT:    v_alignbit_b32 v7, s21, v7, 16
; SI-NEXT:    v_alignbit_b32 v8, s19, v8, 16
; SI-NEXT:    v_alignbit_b32 v9, s17, v9, 16
; SI-NEXT:    s_lshr_b32 s10, s6, 16
; SI-NEXT:    s_lshr_b32 s11, s8, 16
; SI-NEXT:    s_lshr_b32 s12, s29, 16
; SI-NEXT:    s_lshr_b32 s13, s27, 16
; SI-NEXT:    s_lshr_b32 s14, s25, 16
; SI-NEXT:    s_lshr_b32 s15, s23, 16
; SI-NEXT:    s_lshr_b32 s40, s21, 16
; SI-NEXT:    s_lshr_b32 s41, s19, 16
; SI-NEXT:    s_lshr_b32 s42, s17, 16
; SI-NEXT:    s_cbranch_execnz .LBB6_3
; SI-NEXT:  .LBB6_2: ; %cmp.true
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    s_add_i32 s9, s9, 3
; SI-NEXT:    s_add_i32 s7, s7, 3
; SI-NEXT:    s_add_i32 s17, s17, 3
; SI-NEXT:    s_add_i32 s19, s19, 3
; SI-NEXT:    s_add_i32 s21, s21, 3
; SI-NEXT:    s_add_i32 s23, s23, 3
; SI-NEXT:    s_add_i32 s25, s25, 3
; SI-NEXT:    s_add_i32 s27, s27, 3
; SI-NEXT:    s_add_i32 s29, s29, 3
; SI-NEXT:    s_add_i32 s8, s8, 3
; SI-NEXT:    s_add_i32 s6, s6, 3
; SI-NEXT:    v_mov_b32_e32 v1, s7
; SI-NEXT:    v_mov_b32_e32 v2, s9
; SI-NEXT:    v_mov_b32_e32 v3, s28
; SI-NEXT:    v_mov_b32_e32 v4, s26
; SI-NEXT:    v_mov_b32_e32 v5, s24
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s20
; SI-NEXT:    v_mov_b32_e32 v8, s18
; SI-NEXT:    v_mov_b32_e32 v9, s16
; SI-NEXT:    v_alignbit_b32 v1, s6, v1, 16
; SI-NEXT:    v_alignbit_b32 v2, s8, v2, 16
; SI-NEXT:    v_alignbit_b32 v3, s29, v3, 16
; SI-NEXT:    v_alignbit_b32 v4, s27, v4, 16
; SI-NEXT:    v_alignbit_b32 v5, s25, v5, 16
; SI-NEXT:    v_alignbit_b32 v6, s23, v6, 16
; SI-NEXT:    v_alignbit_b32 v7, s21, v7, 16
; SI-NEXT:    v_alignbit_b32 v8, s19, v8, 16
; SI-NEXT:    v_alignbit_b32 v9, s17, v9, 16
; SI-NEXT:    s_lshr_b32 s10, s6, 16
; SI-NEXT:    s_lshr_b32 s11, s8, 16
; SI-NEXT:    s_lshr_b32 s12, s29, 16
; SI-NEXT:    s_lshr_b32 s13, s27, 16
; SI-NEXT:    s_lshr_b32 s14, s25, 16
; SI-NEXT:    s_lshr_b32 s15, s23, 16
; SI-NEXT:    s_lshr_b32 s40, s21, 16
; SI-NEXT:    s_lshr_b32 s41, s19, 16
; SI-NEXT:    s_lshr_b32 s42, s17, 16
; SI-NEXT:  .LBB6_3: ; %end
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v9, s4, v9
; SI-NEXT:    s_and_b32 s4, s17, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s42, 16
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    v_mov_b32_e32 v10, s4
; SI-NEXT:    s_and_b32 s4, s18, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v8
; SI-NEXT:    buffer_store_dword v9, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v9, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v8, s4, v8
; SI-NEXT:    s_and_b32 s4, s19, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s41, 16
; SI-NEXT:    buffer_store_dword v10, v9, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v9, vcc, 8, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v8, v9, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v9, s4
; SI-NEXT:    s_and_b32 s4, s20, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v8, vcc, 12, v0
; SI-NEXT:    v_or_b32_e32 v7, s4, v7
; SI-NEXT:    s_and_b32 s4, s21, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s40, 16
; SI-NEXT:    buffer_store_dword v9, v8, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v8, vcc, 16, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v7, v8, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v8, s4
; SI-NEXT:    s_and_b32 s4, s22, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v7, vcc, 20, v0
; SI-NEXT:    v_or_b32_e32 v6, s4, v6
; SI-NEXT:    s_and_b32 s4, s23, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s15, 16
; SI-NEXT:    buffer_store_dword v8, v7, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v7, vcc, 24, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v6, v7, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v7, s4
; SI-NEXT:    s_and_b32 s4, s24, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v6, vcc, 28, v0
; SI-NEXT:    v_or_b32_e32 v5, s4, v5
; SI-NEXT:    s_and_b32 s4, s25, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s14, 16
; SI-NEXT:    buffer_store_dword v7, v6, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v6, vcc, 32, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v5, v6, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v6, s4
; SI-NEXT:    s_and_b32 s4, s26, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v5, vcc, 36, v0
; SI-NEXT:    v_or_b32_e32 v4, s4, v4
; SI-NEXT:    s_and_b32 s4, s27, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s13, 16
; SI-NEXT:    buffer_store_dword v6, v5, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v5, vcc, 40, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v4, v5, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v5, s4
; SI-NEXT:    s_and_b32 s4, s28, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v4, vcc, 44, v0
; SI-NEXT:    v_or_b32_e32 v3, s4, v3
; SI-NEXT:    s_and_b32 s4, s29, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s12, 16
; SI-NEXT:    buffer_store_dword v5, v4, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v4, vcc, 48, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v3, v4, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v4, s4
; SI-NEXT:    s_and_b32 s4, s9, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v3, vcc, 52, v0
; SI-NEXT:    v_or_b32_e32 v2, s4, v2
; SI-NEXT:    s_and_b32 s4, s8, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s11, 16
; SI-NEXT:    buffer_store_dword v4, v3, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v3, vcc, 56, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v2, v3, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v3, s4
; SI-NEXT:    s_and_b32 s4, s7, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v2, vcc, 60, v0
; SI-NEXT:    v_or_b32_e32 v1, s4, v1
; SI-NEXT:    s_and_b32 s4, s6, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s10, 16
; SI-NEXT:    buffer_store_dword v3, v2, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v2, vcc, 64, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v1, s4
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB6_4:
; SI-NEXT:    ; implicit-def: $vgpr9
; SI-NEXT:    ; implicit-def: $sgpr42
; SI-NEXT:    ; implicit-def: $vgpr8
; SI-NEXT:    ; implicit-def: $sgpr41
; SI-NEXT:    ; implicit-def: $vgpr7
; SI-NEXT:    ; implicit-def: $sgpr40
; SI-NEXT:    ; implicit-def: $vgpr6
; SI-NEXT:    ; implicit-def: $sgpr15
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $sgpr14
; SI-NEXT:    ; implicit-def: $vgpr4
; SI-NEXT:    ; implicit-def: $sgpr13
; SI-NEXT:    ; implicit-def: $vgpr3
; SI-NEXT:    ; implicit-def: $sgpr12
; SI-NEXT:    ; implicit-def: $vgpr2
; SI-NEXT:    ; implicit-def: $sgpr11
; SI-NEXT:    ; implicit-def: $vgpr1
; SI-NEXT:    ; implicit-def: $sgpr10
; SI-NEXT:    s_branch .LBB6_2
;
; VI-LABEL: s_bitcast_v18i32_to_v36i16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_readfirstlane_b32 s9, v0
; VI-NEXT:    v_readfirstlane_b32 s8, v1
; VI-NEXT:    v_readfirstlane_b32 s6, v2
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_readfirstlane_b32 s7, v3
; VI-NEXT:    s_cbranch_scc0 .LBB6_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:    s_cbranch_execnz .LBB6_3
; VI-NEXT:  .LBB6_2: ; %cmp.true
; VI-NEXT:    s_add_i32 s7, s7, 3
; VI-NEXT:    s_add_i32 s6, s6, 3
; VI-NEXT:    s_add_i32 s8, s8, 3
; VI-NEXT:    s_add_i32 s9, s9, 3
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:  .LBB6_3: ; %end
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s59, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s16, s58, 16
; VI-NEXT:    s_or_b32 s5, s5, s16
; VI-NEXT:    s_and_b32 s16, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s17, s57, 16
; VI-NEXT:    s_or_b32 s16, s16, s17
; VI-NEXT:    s_and_b32 s17, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s18, s56, 16
; VI-NEXT:    s_or_b32 s17, s17, s18
; VI-NEXT:    s_and_b32 s18, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s19, s47, 16
; VI-NEXT:    s_or_b32 s18, s18, s19
; VI-NEXT:    s_and_b32 s19, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s20, s46, 16
; VI-NEXT:    s_or_b32 s19, s19, s20
; VI-NEXT:    s_and_b32 s20, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s21, s45, 16
; VI-NEXT:    s_or_b32 s20, s20, s21
; VI-NEXT:    s_and_b32 s21, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s22, s44, 16
; VI-NEXT:    s_or_b32 s21, s21, s22
; VI-NEXT:    s_and_b32 s22, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s23, s43, 16
; VI-NEXT:    s_or_b32 s22, s22, s23
; VI-NEXT:    s_and_b32 s23, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s24, s42, 16
; VI-NEXT:    s_or_b32 s23, s23, s24
; VI-NEXT:    s_and_b32 s24, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s25, s41, 16
; VI-NEXT:    s_or_b32 s24, s24, s25
; VI-NEXT:    s_and_b32 s25, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s26, s40, 16
; VI-NEXT:    s_or_b32 s25, s25, s26
; VI-NEXT:    s_and_b32 s26, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s15, s26, s15
; VI-NEXT:    s_and_b32 s26, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_and_b32 s9, 0xffff, s9
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_and_b32 s8, 0xffff, s8
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_and_b32 s6, 0xffff, s6
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_and_b32 s7, 0xffff, s7
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s14, s26, s14
; VI-NEXT:    s_or_b32 s9, s9, s13
; VI-NEXT:    s_or_b32 s8, s8, s12
; VI-NEXT:    s_or_b32 s6, s6, s11
; VI-NEXT:    s_or_b32 s7, s7, s10
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s16
; VI-NEXT:    v_mov_b32_e32 v3, s17
; VI-NEXT:    v_mov_b32_e32 v4, s18
; VI-NEXT:    v_mov_b32_e32 v5, s19
; VI-NEXT:    v_mov_b32_e32 v6, s20
; VI-NEXT:    v_mov_b32_e32 v7, s21
; VI-NEXT:    v_mov_b32_e32 v8, s22
; VI-NEXT:    v_mov_b32_e32 v9, s23
; VI-NEXT:    v_mov_b32_e32 v10, s24
; VI-NEXT:    v_mov_b32_e32 v11, s25
; VI-NEXT:    v_mov_b32_e32 v12, s15
; VI-NEXT:    v_mov_b32_e32 v13, s14
; VI-NEXT:    v_mov_b32_e32 v14, s9
; VI-NEXT:    v_mov_b32_e32 v15, s8
; VI-NEXT:    v_mov_b32_e32 v16, s6
; VI-NEXT:    v_mov_b32_e32 v17, s7
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB6_4:
; VI-NEXT:    ; implicit-def: $sgpr59
; VI-NEXT:    ; implicit-def: $sgpr58
; VI-NEXT:    ; implicit-def: $sgpr57
; VI-NEXT:    ; implicit-def: $sgpr56
; VI-NEXT:    ; implicit-def: $sgpr47
; VI-NEXT:    ; implicit-def: $sgpr46
; VI-NEXT:    ; implicit-def: $sgpr45
; VI-NEXT:    ; implicit-def: $sgpr44
; VI-NEXT:    ; implicit-def: $sgpr43
; VI-NEXT:    ; implicit-def: $sgpr42
; VI-NEXT:    ; implicit-def: $sgpr41
; VI-NEXT:    ; implicit-def: $sgpr40
; VI-NEXT:    ; implicit-def: $sgpr15
; VI-NEXT:    ; implicit-def: $sgpr14
; VI-NEXT:    ; implicit-def: $sgpr13
; VI-NEXT:    ; implicit-def: $sgpr12
; VI-NEXT:    ; implicit-def: $sgpr11
; VI-NEXT:    ; implicit-def: $sgpr10
; VI-NEXT:    s_branch .LBB6_2
;
; GFX9-LABEL: s_bitcast_v18i32_to_v36i16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_readfirstlane_b32 s6, v0
; GFX9-NEXT:    v_readfirstlane_b32 s7, v1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v2
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_readfirstlane_b32 s9, v3
; GFX9-NEXT:    s_cbranch_scc0 .LBB6_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:    s_cbranch_execnz .LBB6_3
; GFX9-NEXT:  .LBB6_2: ; %cmp.true
; GFX9-NEXT:    s_add_i32 s9, s9, 3
; GFX9-NEXT:    s_add_i32 s8, s8, 3
; GFX9-NEXT:    s_add_i32 s7, s7, 3
; GFX9-NEXT:    s_add_i32 s6, s6, 3
; GFX9-NEXT:    s_add_i32 s29, s29, 3
; GFX9-NEXT:    s_add_i32 s28, s28, 3
; GFX9-NEXT:    s_add_i32 s27, s27, 3
; GFX9-NEXT:    s_add_i32 s26, s26, 3
; GFX9-NEXT:    s_add_i32 s25, s25, 3
; GFX9-NEXT:    s_add_i32 s24, s24, 3
; GFX9-NEXT:    s_add_i32 s23, s23, 3
; GFX9-NEXT:    s_add_i32 s22, s22, 3
; GFX9-NEXT:    s_add_i32 s21, s21, 3
; GFX9-NEXT:    s_add_i32 s20, s20, 3
; GFX9-NEXT:    s_add_i32 s19, s19, 3
; GFX9-NEXT:    s_add_i32 s18, s18, 3
; GFX9-NEXT:    s_add_i32 s17, s17, 3
; GFX9-NEXT:    s_add_i32 s16, s16, 3
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:  .LBB6_3: ; %end
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s16, s59
; GFX9-NEXT:    s_pack_ll_b32_b16 s5, s17, s58
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s18, s57
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s19, s56
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s20, s47
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s21, s46
; GFX9-NEXT:    s_pack_ll_b32_b16 s20, s22, s45
; GFX9-NEXT:    s_pack_ll_b32_b16 s21, s23, s44
; GFX9-NEXT:    s_pack_ll_b32_b16 s22, s24, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s23, s25, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s24, s26, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s25, s27, s40
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s28, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s29, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s6, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s7, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s8, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s9, s10
; GFX9-NEXT:    v_mov_b32_e32 v0, s4
; GFX9-NEXT:    v_mov_b32_e32 v1, s5
; GFX9-NEXT:    v_mov_b32_e32 v2, s16
; GFX9-NEXT:    v_mov_b32_e32 v3, s17
; GFX9-NEXT:    v_mov_b32_e32 v4, s18
; GFX9-NEXT:    v_mov_b32_e32 v5, s19
; GFX9-NEXT:    v_mov_b32_e32 v6, s20
; GFX9-NEXT:    v_mov_b32_e32 v7, s21
; GFX9-NEXT:    v_mov_b32_e32 v8, s22
; GFX9-NEXT:    v_mov_b32_e32 v9, s23
; GFX9-NEXT:    v_mov_b32_e32 v10, s24
; GFX9-NEXT:    v_mov_b32_e32 v11, s25
; GFX9-NEXT:    v_mov_b32_e32 v12, s15
; GFX9-NEXT:    v_mov_b32_e32 v13, s14
; GFX9-NEXT:    v_mov_b32_e32 v14, s6
; GFX9-NEXT:    v_mov_b32_e32 v15, s7
; GFX9-NEXT:    v_mov_b32_e32 v16, s8
; GFX9-NEXT:    v_mov_b32_e32 v17, s9
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB6_4:
; GFX9-NEXT:    ; implicit-def: $sgpr59
; GFX9-NEXT:    ; implicit-def: $sgpr58
; GFX9-NEXT:    ; implicit-def: $sgpr57
; GFX9-NEXT:    ; implicit-def: $sgpr56
; GFX9-NEXT:    ; implicit-def: $sgpr47
; GFX9-NEXT:    ; implicit-def: $sgpr46
; GFX9-NEXT:    ; implicit-def: $sgpr45
; GFX9-NEXT:    ; implicit-def: $sgpr44
; GFX9-NEXT:    ; implicit-def: $sgpr43
; GFX9-NEXT:    ; implicit-def: $sgpr42
; GFX9-NEXT:    ; implicit-def: $sgpr41
; GFX9-NEXT:    ; implicit-def: $sgpr40
; GFX9-NEXT:    ; implicit-def: $sgpr15
; GFX9-NEXT:    ; implicit-def: $sgpr14
; GFX9-NEXT:    ; implicit-def: $sgpr13
; GFX9-NEXT:    ; implicit-def: $sgpr12
; GFX9-NEXT:    ; implicit-def: $sgpr11
; GFX9-NEXT:    ; implicit-def: $sgpr10
; GFX9-NEXT:    s_branch .LBB6_2
;
; GFX11-LABEL: s_bitcast_v18i32_to_v36i16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s46, 0
; GFX11-NEXT:    s_and_b32 s4, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB6_4
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s46
; GFX11-NEXT:    s_cbranch_vccnz .LBB6_3
; GFX11-NEXT:  .LBB6_2: ; %cmp.true
; GFX11-NEXT:    s_add_i32 s29, s29, 3
; GFX11-NEXT:    s_add_i32 s28, s28, 3
; GFX11-NEXT:    s_add_i32 s27, s27, 3
; GFX11-NEXT:    s_add_i32 s26, s26, 3
; GFX11-NEXT:    s_add_i32 s25, s25, 3
; GFX11-NEXT:    s_add_i32 s24, s24, 3
; GFX11-NEXT:    s_add_i32 s23, s23, 3
; GFX11-NEXT:    s_add_i32 s22, s22, 3
; GFX11-NEXT:    s_add_i32 s21, s21, 3
; GFX11-NEXT:    s_add_i32 s20, s20, 3
; GFX11-NEXT:    s_add_i32 s19, s19, 3
; GFX11-NEXT:    s_add_i32 s18, s18, 3
; GFX11-NEXT:    s_add_i32 s17, s17, 3
; GFX11-NEXT:    s_add_i32 s16, s16, 3
; GFX11-NEXT:    s_add_i32 s3, s3, 3
; GFX11-NEXT:    s_add_i32 s2, s2, 3
; GFX11-NEXT:    s_add_i32 s1, s1, 3
; GFX11-NEXT:    s_add_i32 s0, s0, 3
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:  .LBB6_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s16, s41
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s17, s40
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s18, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s19, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s20, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s21, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s22, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s23, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s24, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s25, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s26, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s27, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s28, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s29, s4
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s15 :: v_dual_mov_b32 v7, s14
; GFX11-NEXT:    v_dual_mov_b32 v8, s13 :: v_dual_mov_b32 v9, s12
; GFX11-NEXT:    v_dual_mov_b32 v10, s11 :: v_dual_mov_b32 v11, s10
; GFX11-NEXT:    v_dual_mov_b32 v12, s9 :: v_dual_mov_b32 v13, s8
; GFX11-NEXT:    v_dual_mov_b32 v14, s7 :: v_dual_mov_b32 v15, s6
; GFX11-NEXT:    v_dual_mov_b32 v16, s5 :: v_dual_mov_b32 v17, s4
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB6_4:
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    ; implicit-def: $sgpr4
; GFX11-NEXT:    s_branch .LBB6_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <18 x i32> %a, splat (i32 3)
  %a2 = bitcast <18 x i32> %a1 to <36 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <18 x i32> %a to <36 x i16>
  br label %end

end:
  %phi = phi <36 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x i16> %phi
}

define inreg <18 x i32> @s_bitcast_v36i16_to_v18i32_inreg(<36 x i16> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36i16_to_v18i32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    v_mov_b32_e32 v32, v20
; SI-NEXT:    v_mov_b32_e32 v33, v18
; SI-NEXT:    v_mov_b32_e32 v34, v16
; SI-NEXT:    v_mov_b32_e32 v35, v14
; SI-NEXT:    v_mov_b32_e32 v36, v12
; SI-NEXT:    v_mov_b32_e32 v37, v10
; SI-NEXT:    v_mov_b32_e32 v38, v8
; SI-NEXT:    v_mov_b32_e32 v39, v6
; SI-NEXT:    v_mov_b32_e32 v48, v4
; SI-NEXT:    v_mov_b32_e32 v49, v2
; SI-NEXT:    v_mov_b32_e32 v50, v0
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v45, 16, v1
; SI-NEXT:    v_lshlrev_b32_e32 v44, 16, v3
; SI-NEXT:    v_lshlrev_b32_e32 v43, 16, v5
; SI-NEXT:    v_lshlrev_b32_e32 v42, 16, v7
; SI-NEXT:    v_lshlrev_b32_e32 v41, 16, v9
; SI-NEXT:    v_lshlrev_b32_e32 v40, 16, v11
; SI-NEXT:    v_lshlrev_b32_e32 v55, 16, v13
; SI-NEXT:    v_lshlrev_b32_e32 v54, 16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v53, 16, v17
; SI-NEXT:    v_lshlrev_b32_e32 v52, 16, v19
; SI-NEXT:    v_lshlrev_b32_e32 v51, 16, v21
; SI-NEXT:    s_cbranch_scc0 .LBB7_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v50
; SI-NEXT:    v_or_b32_e32 v7, v0, v45
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v49
; SI-NEXT:    v_or_b32_e32 v8, v0, v44
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v48
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    v_or_b32_e32 v9, v0, v43
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v39
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    v_or_b32_e32 v10, v0, v42
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v38
; SI-NEXT:    s_or_b32 s5, s5, s6
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    v_or_b32_e32 v11, v0, v41
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v37
; SI-NEXT:    s_or_b32 s6, s6, s7
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    v_or_b32_e32 v12, v0, v40
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v36
; SI-NEXT:    s_or_b32 s7, s7, s8
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    v_or_b32_e32 v13, v0, v55
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; SI-NEXT:    s_or_b32 s8, s8, s9
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    v_or_b32_e32 v14, v0, v54
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v34
; SI-NEXT:    s_or_b32 s9, s9, s10
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_or_b32_e32 v15, v0, v53
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; SI-NEXT:    s_or_b32 s10, s10, s11
; SI-NEXT:    v_or_b32_e32 v16, v0, v52
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; SI-NEXT:    v_or_b32_e32 v17, v0, v51
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:    s_cbranch_execnz .LBB7_3
; SI-NEXT:  .LBB7_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v50
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v45, v0
; SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v49
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v44, v0
; SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v48
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v43, v0
; SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v39
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v42, v0
; SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v38
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v41, v0
; SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v37
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v40, v0
; SI-NEXT:    v_add_i32_e32 v12, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v36
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v55, v0
; SI-NEXT:    v_add_i32_e32 v13, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v35
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    v_or_b32_e32 v0, v54, v0
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    v_add_i32_e32 v14, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v34
; SI-NEXT:    s_or_b32 s4, s5, s4
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s5, s6, s5
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    v_or_b32_e32 v0, v53, v0
; SI-NEXT:    s_or_b32 s6, s7, s6
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    v_add_i32_e32 v15, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v33
; SI-NEXT:    s_or_b32 s7, s8, s7
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s8, s9, s8
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    v_or_b32_e32 v0, v52, v0
; SI-NEXT:    s_or_b32 s9, s10, s9
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_add_i32_e32 v16, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v32
; SI-NEXT:    s_or_b32 s10, s11, s10
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s4, s4, 0x30000
; SI-NEXT:    s_add_i32 s5, s5, 0x30000
; SI-NEXT:    s_add_i32 s6, s6, 0x30000
; SI-NEXT:    s_add_i32 s7, s7, 0x30000
; SI-NEXT:    s_add_i32 s8, s8, 0x30000
; SI-NEXT:    s_add_i32 s9, s9, 0x30000
; SI-NEXT:    s_add_i32 s10, s10, 0x30000
; SI-NEXT:    v_or_b32_e32 v0, v51, v0
; SI-NEXT:    v_add_i32_e32 v17, vcc, 0x30000, v0
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:  .LBB7_3: ; %end
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB7_4:
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    s_branch .LBB7_2
;
; VI-LABEL: s_bitcast_v36i16_to_v18i32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s43, s29, 16
; VI-NEXT:    s_lshr_b32 s42, s28, 16
; VI-NEXT:    s_lshr_b32 s41, s27, 16
; VI-NEXT:    s_lshr_b32 s40, s26, 16
; VI-NEXT:    s_lshr_b32 s15, s25, 16
; VI-NEXT:    s_lshr_b32 s14, s24, 16
; VI-NEXT:    s_lshr_b32 s13, s23, 16
; VI-NEXT:    s_lshr_b32 s12, s22, 16
; VI-NEXT:    s_lshr_b32 s11, s21, 16
; VI-NEXT:    s_lshr_b32 s10, s20, 16
; VI-NEXT:    s_lshr_b32 s9, s19, 16
; VI-NEXT:    s_lshr_b32 s8, s18, 16
; VI-NEXT:    s_lshr_b32 s7, s17, 16
; VI-NEXT:    s_lshr_b32 s6, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v35, v1
; VI-NEXT:    v_mov_b32_e32 v34, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB7_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s6, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s7, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s8, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s9, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s10, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s11, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s12, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s13, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s14, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s15, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s40, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s41, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s42, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s43, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v34, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v35, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB7_3
; VI-NEXT:  .LBB7_2: ; %cmp.true
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_lshl_b32 s6, s6, 16
; VI-NEXT:    s_and_b32 s16, s16, 0xffff
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_lshl_b32 s7, s7, 16
; VI-NEXT:    s_or_b32 s6, s6, s16
; VI-NEXT:    s_and_b32 s16, s17, 0xffff
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_lshl_b32 s8, s8, 16
; VI-NEXT:    s_or_b32 s7, s7, s16
; VI-NEXT:    s_and_b32 s16, s18, 0xffff
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_lshl_b32 s9, s9, 16
; VI-NEXT:    s_or_b32 s8, s8, s16
; VI-NEXT:    s_and_b32 s16, s19, 0xffff
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s9, s9, s16
; VI-NEXT:    s_and_b32 s16, s20, 0xffff
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_or_b32 s10, s10, s16
; VI-NEXT:    s_and_b32 s16, s21, 0xffff
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_or_b32 s11, s11, s16
; VI-NEXT:    s_and_b32 s16, s22, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v35
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_or_b32 s12, s12, s16
; VI-NEXT:    s_and_b32 s16, s23, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_or_b32 s13, s13, s16
; VI-NEXT:    s_and_b32 s16, s24, 0xffff
; VI-NEXT:    v_add_u32_e32 v15, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v33
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_lshl_b32 s5, s42, 16
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s14, s14, s16
; VI-NEXT:    s_and_b32 s16, s25, 0xffff
; VI-NEXT:    s_and_b32 s18, s28, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_lshl_b32 s4, s43, 16
; VI-NEXT:    s_lshl_b32 s41, s41, 16
; VI-NEXT:    s_lshl_b32 s40, s40, 16
; VI-NEXT:    s_or_b32 s15, s15, s16
; VI-NEXT:    s_and_b32 s16, s26, 0xffff
; VI-NEXT:    s_and_b32 s17, s27, 0xffff
; VI-NEXT:    s_or_b32 s5, s5, s18
; VI-NEXT:    s_and_b32 s18, s29, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v3, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v34
; VI-NEXT:    v_add_u32_e32 v16, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v32
; VI-NEXT:    s_or_b32 s16, s40, s16
; VI-NEXT:    s_or_b32 s17, s41, s17
; VI-NEXT:    s_or_b32 s4, s4, s18
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s6, s6, 0x30000
; VI-NEXT:    s_add_i32 s7, s7, 0x30000
; VI-NEXT:    s_add_i32 s8, s8, 0x30000
; VI-NEXT:    s_add_i32 s9, s9, 0x30000
; VI-NEXT:    s_add_i32 s10, s10, 0x30000
; VI-NEXT:    s_add_i32 s11, s11, 0x30000
; VI-NEXT:    s_add_i32 s12, s12, 0x30000
; VI-NEXT:    s_add_i32 s13, s13, 0x30000
; VI-NEXT:    s_add_i32 s14, s14, 0x30000
; VI-NEXT:    s_add_i32 s15, s15, 0x30000
; VI-NEXT:    s_add_i32 s16, s16, 0x30000
; VI-NEXT:    s_add_i32 s17, s17, 0x30000
; VI-NEXT:    s_add_i32 s5, s5, 0x30000
; VI-NEXT:    s_add_i32 s4, s4, 0x30000
; VI-NEXT:    v_add_u32_e32 v14, vcc, 0x30000, v3
; VI-NEXT:    v_add_u32_e32 v17, vcc, 0x30000, v0
; VI-NEXT:    v_mov_b32_e32 v0, s6
; VI-NEXT:    v_mov_b32_e32 v1, s7
; VI-NEXT:    v_mov_b32_e32 v2, s8
; VI-NEXT:    v_mov_b32_e32 v3, s9
; VI-NEXT:    v_mov_b32_e32 v4, s10
; VI-NEXT:    v_mov_b32_e32 v5, s11
; VI-NEXT:    v_mov_b32_e32 v6, s12
; VI-NEXT:    v_mov_b32_e32 v7, s13
; VI-NEXT:    v_mov_b32_e32 v8, s14
; VI-NEXT:    v_mov_b32_e32 v9, s15
; VI-NEXT:    v_mov_b32_e32 v10, s16
; VI-NEXT:    v_mov_b32_e32 v11, s17
; VI-NEXT:    v_mov_b32_e32 v12, s5
; VI-NEXT:    v_mov_b32_e32 v13, s4
; VI-NEXT:  .LBB7_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB7_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB7_2
;
; GFX9-LABEL: s_bitcast_v36i16_to_v18i32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB7_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB7_3
; GFX9-NEXT:  .LBB7_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v0, v39, 16, v0
; GFX9-NEXT:    v_lshl_or_b32 v1, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_u16 v14, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v15, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, s6, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, s7, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, s8, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v3, s9, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v4, s10, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v5, s11, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v6, s12, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v7, s13, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v8, s14, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v9, s15, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v10, s16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v11, s17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v12, s18, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v13, s19, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v16, v16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v17, v17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB7_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB7_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB7_2
;
; GFX11-LABEL: s_bitcast_v36i16_to_v18i32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB7_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB7_4
; GFX11-NEXT:  .LBB7_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v0, s0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, s1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, s2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v3, s3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v4, s4, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v5, s5, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v6, s6, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v7, s7, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v8, s8, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v9, s9, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v10, s10, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v11, s11, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v12, s12, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v13, s13, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v14, s14, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v15, s15, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v16, s16, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v17, s17, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB7_3:
; GFX11-NEXT:    s_branch .LBB7_2
; GFX11-NEXT:  .LBB7_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <36 x i16> %a, splat (i16 3)
  %a2 = bitcast <36 x i16> %a1 to <18 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <36 x i16> %a to <18 x i32>
  br label %end

end:
  %phi = phi <18 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x i32> %phi
}

define inreg <36 x half> @s_bitcast_v18i32_to_v36f16_inreg(<18 x i32> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18i32_to_v36f16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_readfirstlane_b32 s8, v1
; SI-NEXT:    v_readfirstlane_b32 s7, v2
; SI-NEXT:    v_readfirstlane_b32 s6, v3
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_readfirstlane_b32 s9, v4
; SI-NEXT:    s_cbranch_scc0 .LBB8_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_lshr_b32 s4, s9, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; SI-NEXT:    s_lshr_b32 s4, s6, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v2, s4
; SI-NEXT:    s_lshr_b32 s4, s7, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v4, s4
; SI-NEXT:    s_lshr_b32 s4, s8, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v6, s4
; SI-NEXT:    s_lshr_b32 s4, s29, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v8, s4
; SI-NEXT:    s_lshr_b32 s4, s28, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v10, s4
; SI-NEXT:    s_lshr_b32 s4, s27, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v12, s4
; SI-NEXT:    s_lshr_b32 s4, s26, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; SI-NEXT:    s_lshr_b32 s4, s25, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; SI-NEXT:    s_lshr_b32 s4, s24, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; SI-NEXT:    s_lshr_b32 s4, s23, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; SI-NEXT:    s_lshr_b32 s4, s22, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; SI-NEXT:    s_lshr_b32 s4, s21, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v25, s4
; SI-NEXT:    s_lshr_b32 s4, s20, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v27, s4
; SI-NEXT:    s_lshr_b32 s4, s19, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v30, s4
; SI-NEXT:    s_lshr_b32 s4, s18, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v32, s4
; SI-NEXT:    s_lshr_b32 s4, s17, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v34, s4
; SI-NEXT:    s_lshr_b32 s4, s16, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v36, s4
; SI-NEXT:    v_cvt_f32_f16_e32 v3, s9
; SI-NEXT:    v_cvt_f32_f16_e32 v5, s6
; SI-NEXT:    v_cvt_f32_f16_e32 v7, s7
; SI-NEXT:    v_cvt_f32_f16_e32 v9, s8
; SI-NEXT:    v_cvt_f32_f16_e32 v11, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v13, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v14, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v16, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v22, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v24, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v26, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v28, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v29, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v31, s18
; SI-NEXT:    v_cvt_f32_f16_e32 v33, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v35, s16
; SI-NEXT:    s_cbranch_execnz .LBB8_3
; SI-NEXT:  .LBB8_2: ; %cmp.true
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    s_add_i32 s17, s17, 3
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    s_add_i32 s19, s19, 3
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    s_add_i32 s21, s21, 3
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    s_add_i32 s23, s23, 3
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    s_add_i32 s25, s25, 3
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    s_add_i32 s27, s27, 3
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    s_add_i32 s29, s29, 3
; SI-NEXT:    s_add_i32 s8, s8, 3
; SI-NEXT:    s_add_i32 s7, s7, 3
; SI-NEXT:    s_add_i32 s6, s6, 3
; SI-NEXT:    s_add_i32 s9, s9, 3
; SI-NEXT:    s_lshr_b32 s4, s16, 16
; SI-NEXT:    s_lshr_b32 s5, s17, 16
; SI-NEXT:    s_lshr_b32 s10, s18, 16
; SI-NEXT:    s_lshr_b32 s11, s19, 16
; SI-NEXT:    s_lshr_b32 s12, s20, 16
; SI-NEXT:    s_lshr_b32 s13, s21, 16
; SI-NEXT:    s_lshr_b32 s14, s22, 16
; SI-NEXT:    s_lshr_b32 s15, s23, 16
; SI-NEXT:    s_lshr_b32 s40, s24, 16
; SI-NEXT:    s_lshr_b32 s41, s25, 16
; SI-NEXT:    s_lshr_b32 s42, s26, 16
; SI-NEXT:    s_lshr_b32 s43, s27, 16
; SI-NEXT:    s_lshr_b32 s44, s28, 16
; SI-NEXT:    s_lshr_b32 s45, s29, 16
; SI-NEXT:    s_lshr_b32 s46, s8, 16
; SI-NEXT:    s_lshr_b32 s47, s7, 16
; SI-NEXT:    s_lshr_b32 s56, s6, 16
; SI-NEXT:    s_lshr_b32 s57, s9, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v3, s9
; SI-NEXT:    v_cvt_f32_f16_e32 v5, s6
; SI-NEXT:    v_cvt_f32_f16_e32 v7, s7
; SI-NEXT:    v_cvt_f32_f16_e32 v9, s8
; SI-NEXT:    v_cvt_f32_f16_e32 v11, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v13, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v14, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v16, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v22, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v24, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v26, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v28, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v29, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v31, s18
; SI-NEXT:    v_cvt_f32_f16_e32 v33, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v35, s16
; SI-NEXT:    v_cvt_f32_f16_e32 v1, s57
; SI-NEXT:    v_cvt_f32_f16_e32 v2, s56
; SI-NEXT:    v_cvt_f32_f16_e32 v4, s47
; SI-NEXT:    v_cvt_f32_f16_e32 v6, s46
; SI-NEXT:    v_cvt_f32_f16_e32 v8, s45
; SI-NEXT:    v_cvt_f32_f16_e32 v10, s44
; SI-NEXT:    v_cvt_f32_f16_e32 v12, s43
; SI-NEXT:    v_cvt_f32_f16_e32 v15, s42
; SI-NEXT:    v_cvt_f32_f16_e32 v17, s41
; SI-NEXT:    v_cvt_f32_f16_e32 v19, s40
; SI-NEXT:    v_cvt_f32_f16_e32 v21, s15
; SI-NEXT:    v_cvt_f32_f16_e32 v23, s14
; SI-NEXT:    v_cvt_f32_f16_e32 v25, s13
; SI-NEXT:    v_cvt_f32_f16_e32 v27, s12
; SI-NEXT:    v_cvt_f32_f16_e32 v30, s11
; SI-NEXT:    v_cvt_f32_f16_e32 v32, s10
; SI-NEXT:    v_cvt_f32_f16_e32 v34, s5
; SI-NEXT:    v_cvt_f32_f16_e32 v36, s4
; SI-NEXT:  .LBB8_3: ; %end
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v35, v35
; SI-NEXT:    v_cvt_f16_f32_e32 v34, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v33, v33
; SI-NEXT:    v_cvt_f16_f32_e32 v32, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v31
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v30
; SI-NEXT:    v_lshlrev_b32_e32 v36, 16, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v29
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v27
; SI-NEXT:    v_or_b32_e32 v35, v35, v36
; SI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v25
; SI-NEXT:    buffer_store_dword v35, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v35, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v33, v33, v34
; SI-NEXT:    v_lshlrev_b32_e32 v32, 16, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v23
; SI-NEXT:    buffer_store_dword v33, v35, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v33, vcc, 8, v0
; SI-NEXT:    v_or_b32_e32 v31, v31, v32
; SI-NEXT:    v_lshlrev_b32_e32 v30, 16, v30
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v24
; SI-NEXT:    v_cvt_f16_f32_e32 v21, v21
; SI-NEXT:    buffer_store_dword v31, v33, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v31, vcc, 12, v0
; SI-NEXT:    v_or_b32_e32 v29, v29, v30
; SI-NEXT:    v_lshlrev_b32_e32 v27, 16, v27
; SI-NEXT:    v_cvt_f16_f32_e32 v22, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    buffer_store_dword v29, v31, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v29, vcc, 16, v0
; SI-NEXT:    v_or_b32_e32 v27, v28, v27
; SI-NEXT:    v_lshlrev_b32_e32 v25, 16, v25
; SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    buffer_store_dword v27, v29, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v27, vcc, 20, v0
; SI-NEXT:    v_or_b32_e32 v25, v26, v25
; SI-NEXT:    v_lshlrev_b32_e32 v23, 16, v23
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    buffer_store_dword v25, v27, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v25, vcc, 24, v0
; SI-NEXT:    v_or_b32_e32 v23, v24, v23
; SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    buffer_store_dword v23, v25, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v23, vcc, 28, v0
; SI-NEXT:    v_or_b32_e32 v21, v22, v21
; SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    buffer_store_dword v21, v23, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v21, vcc, 32, v0
; SI-NEXT:    v_or_b32_e32 v19, v20, v19
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v17
; SI-NEXT:    buffer_store_dword v19, v21, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v19, vcc, 36, v0
; SI-NEXT:    v_or_b32_e32 v17, v18, v17
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    buffer_store_dword v17, v19, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v17, vcc, 40, v0
; SI-NEXT:    v_or_b32_e32 v15, v16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    buffer_store_dword v15, v17, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v15, vcc, 44, v0
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    buffer_store_dword v12, v15, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v13
; SI-NEXT:    v_add_i32_e32 v13, vcc, 48, v0
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_or_b32_e32 v10, v12, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    buffer_store_dword v10, v13, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 52, v0
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v8
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    buffer_store_dword v8, v11, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v9
; SI-NEXT:    v_add_i32_e32 v9, vcc, 56, v0
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    buffer_store_dword v6, v9, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 60, v0
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v6, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    buffer_store_dword v4, v7, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v5
; SI-NEXT:    v_add_i32_e32 v5, vcc, 64, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v2, v4, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    buffer_store_dword v2, v5, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v3
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB8_4:
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    ; implicit-def: $vgpr22
; SI-NEXT:    ; implicit-def: $vgpr21
; SI-NEXT:    ; implicit-def: $vgpr20
; SI-NEXT:    ; implicit-def: $vgpr19
; SI-NEXT:    ; implicit-def: $vgpr18
; SI-NEXT:    ; implicit-def: $vgpr17
; SI-NEXT:    ; implicit-def: $vgpr16
; SI-NEXT:    ; implicit-def: $vgpr15
; SI-NEXT:    ; implicit-def: $vgpr14
; SI-NEXT:    ; implicit-def: $vgpr12
; SI-NEXT:    ; implicit-def: $vgpr13
; SI-NEXT:    ; implicit-def: $vgpr10
; SI-NEXT:    ; implicit-def: $vgpr11
; SI-NEXT:    ; implicit-def: $vgpr8
; SI-NEXT:    ; implicit-def: $vgpr9
; SI-NEXT:    ; implicit-def: $vgpr6
; SI-NEXT:    ; implicit-def: $vgpr7
; SI-NEXT:    ; implicit-def: $vgpr4
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $vgpr2
; SI-NEXT:    ; implicit-def: $vgpr3
; SI-NEXT:    ; implicit-def: $vgpr1
; SI-NEXT:    s_branch .LBB8_2
;
; VI-LABEL: s_bitcast_v18i32_to_v36f16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_readfirstlane_b32 s9, v0
; VI-NEXT:    v_readfirstlane_b32 s8, v1
; VI-NEXT:    v_readfirstlane_b32 s6, v2
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_readfirstlane_b32 s7, v3
; VI-NEXT:    s_cbranch_scc0 .LBB8_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:    s_cbranch_execnz .LBB8_3
; VI-NEXT:  .LBB8_2: ; %cmp.true
; VI-NEXT:    s_add_i32 s7, s7, 3
; VI-NEXT:    s_add_i32 s6, s6, 3
; VI-NEXT:    s_add_i32 s8, s8, 3
; VI-NEXT:    s_add_i32 s9, s9, 3
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:  .LBB8_3: ; %end
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s59, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s16, s58, 16
; VI-NEXT:    s_or_b32 s5, s5, s16
; VI-NEXT:    s_and_b32 s16, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s17, s57, 16
; VI-NEXT:    s_or_b32 s16, s16, s17
; VI-NEXT:    s_and_b32 s17, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s18, s56, 16
; VI-NEXT:    s_or_b32 s17, s17, s18
; VI-NEXT:    s_and_b32 s18, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s19, s47, 16
; VI-NEXT:    s_or_b32 s18, s18, s19
; VI-NEXT:    s_and_b32 s19, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s20, s46, 16
; VI-NEXT:    s_or_b32 s19, s19, s20
; VI-NEXT:    s_and_b32 s20, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s21, s45, 16
; VI-NEXT:    s_or_b32 s20, s20, s21
; VI-NEXT:    s_and_b32 s21, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s22, s44, 16
; VI-NEXT:    s_or_b32 s21, s21, s22
; VI-NEXT:    s_and_b32 s22, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s23, s43, 16
; VI-NEXT:    s_or_b32 s22, s22, s23
; VI-NEXT:    s_and_b32 s23, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s24, s42, 16
; VI-NEXT:    s_or_b32 s23, s23, s24
; VI-NEXT:    s_and_b32 s24, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s25, s41, 16
; VI-NEXT:    s_or_b32 s24, s24, s25
; VI-NEXT:    s_and_b32 s25, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s26, s40, 16
; VI-NEXT:    s_or_b32 s25, s25, s26
; VI-NEXT:    s_and_b32 s26, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s15, s26, s15
; VI-NEXT:    s_and_b32 s26, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_and_b32 s9, 0xffff, s9
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_and_b32 s8, 0xffff, s8
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_and_b32 s6, 0xffff, s6
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_and_b32 s7, 0xffff, s7
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s14, s26, s14
; VI-NEXT:    s_or_b32 s9, s9, s13
; VI-NEXT:    s_or_b32 s8, s8, s12
; VI-NEXT:    s_or_b32 s6, s6, s11
; VI-NEXT:    s_or_b32 s7, s7, s10
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s16
; VI-NEXT:    v_mov_b32_e32 v3, s17
; VI-NEXT:    v_mov_b32_e32 v4, s18
; VI-NEXT:    v_mov_b32_e32 v5, s19
; VI-NEXT:    v_mov_b32_e32 v6, s20
; VI-NEXT:    v_mov_b32_e32 v7, s21
; VI-NEXT:    v_mov_b32_e32 v8, s22
; VI-NEXT:    v_mov_b32_e32 v9, s23
; VI-NEXT:    v_mov_b32_e32 v10, s24
; VI-NEXT:    v_mov_b32_e32 v11, s25
; VI-NEXT:    v_mov_b32_e32 v12, s15
; VI-NEXT:    v_mov_b32_e32 v13, s14
; VI-NEXT:    v_mov_b32_e32 v14, s9
; VI-NEXT:    v_mov_b32_e32 v15, s8
; VI-NEXT:    v_mov_b32_e32 v16, s6
; VI-NEXT:    v_mov_b32_e32 v17, s7
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB8_4:
; VI-NEXT:    ; implicit-def: $sgpr59
; VI-NEXT:    ; implicit-def: $sgpr58
; VI-NEXT:    ; implicit-def: $sgpr57
; VI-NEXT:    ; implicit-def: $sgpr56
; VI-NEXT:    ; implicit-def: $sgpr47
; VI-NEXT:    ; implicit-def: $sgpr46
; VI-NEXT:    ; implicit-def: $sgpr45
; VI-NEXT:    ; implicit-def: $sgpr44
; VI-NEXT:    ; implicit-def: $sgpr43
; VI-NEXT:    ; implicit-def: $sgpr42
; VI-NEXT:    ; implicit-def: $sgpr41
; VI-NEXT:    ; implicit-def: $sgpr40
; VI-NEXT:    ; implicit-def: $sgpr15
; VI-NEXT:    ; implicit-def: $sgpr14
; VI-NEXT:    ; implicit-def: $sgpr13
; VI-NEXT:    ; implicit-def: $sgpr12
; VI-NEXT:    ; implicit-def: $sgpr11
; VI-NEXT:    ; implicit-def: $sgpr10
; VI-NEXT:    s_branch .LBB8_2
;
; GFX9-LABEL: s_bitcast_v18i32_to_v36f16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_readfirstlane_b32 s6, v0
; GFX9-NEXT:    v_readfirstlane_b32 s7, v1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v2
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_readfirstlane_b32 s9, v3
; GFX9-NEXT:    s_cbranch_scc0 .LBB8_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:    s_cbranch_execnz .LBB8_3
; GFX9-NEXT:  .LBB8_2: ; %cmp.true
; GFX9-NEXT:    s_add_i32 s9, s9, 3
; GFX9-NEXT:    s_add_i32 s8, s8, 3
; GFX9-NEXT:    s_add_i32 s7, s7, 3
; GFX9-NEXT:    s_add_i32 s6, s6, 3
; GFX9-NEXT:    s_add_i32 s29, s29, 3
; GFX9-NEXT:    s_add_i32 s28, s28, 3
; GFX9-NEXT:    s_add_i32 s27, s27, 3
; GFX9-NEXT:    s_add_i32 s26, s26, 3
; GFX9-NEXT:    s_add_i32 s25, s25, 3
; GFX9-NEXT:    s_add_i32 s24, s24, 3
; GFX9-NEXT:    s_add_i32 s23, s23, 3
; GFX9-NEXT:    s_add_i32 s22, s22, 3
; GFX9-NEXT:    s_add_i32 s21, s21, 3
; GFX9-NEXT:    s_add_i32 s20, s20, 3
; GFX9-NEXT:    s_add_i32 s19, s19, 3
; GFX9-NEXT:    s_add_i32 s18, s18, 3
; GFX9-NEXT:    s_add_i32 s17, s17, 3
; GFX9-NEXT:    s_add_i32 s16, s16, 3
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:  .LBB8_3: ; %end
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s16, s59
; GFX9-NEXT:    s_pack_ll_b32_b16 s5, s17, s58
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s18, s57
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s19, s56
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s20, s47
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s21, s46
; GFX9-NEXT:    s_pack_ll_b32_b16 s20, s22, s45
; GFX9-NEXT:    s_pack_ll_b32_b16 s21, s23, s44
; GFX9-NEXT:    s_pack_ll_b32_b16 s22, s24, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s23, s25, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s24, s26, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s25, s27, s40
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s28, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s29, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s6, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s7, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s8, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s9, s10
; GFX9-NEXT:    v_mov_b32_e32 v0, s4
; GFX9-NEXT:    v_mov_b32_e32 v1, s5
; GFX9-NEXT:    v_mov_b32_e32 v2, s16
; GFX9-NEXT:    v_mov_b32_e32 v3, s17
; GFX9-NEXT:    v_mov_b32_e32 v4, s18
; GFX9-NEXT:    v_mov_b32_e32 v5, s19
; GFX9-NEXT:    v_mov_b32_e32 v6, s20
; GFX9-NEXT:    v_mov_b32_e32 v7, s21
; GFX9-NEXT:    v_mov_b32_e32 v8, s22
; GFX9-NEXT:    v_mov_b32_e32 v9, s23
; GFX9-NEXT:    v_mov_b32_e32 v10, s24
; GFX9-NEXT:    v_mov_b32_e32 v11, s25
; GFX9-NEXT:    v_mov_b32_e32 v12, s15
; GFX9-NEXT:    v_mov_b32_e32 v13, s14
; GFX9-NEXT:    v_mov_b32_e32 v14, s6
; GFX9-NEXT:    v_mov_b32_e32 v15, s7
; GFX9-NEXT:    v_mov_b32_e32 v16, s8
; GFX9-NEXT:    v_mov_b32_e32 v17, s9
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB8_4:
; GFX9-NEXT:    ; implicit-def: $sgpr59
; GFX9-NEXT:    ; implicit-def: $sgpr58
; GFX9-NEXT:    ; implicit-def: $sgpr57
; GFX9-NEXT:    ; implicit-def: $sgpr56
; GFX9-NEXT:    ; implicit-def: $sgpr47
; GFX9-NEXT:    ; implicit-def: $sgpr46
; GFX9-NEXT:    ; implicit-def: $sgpr45
; GFX9-NEXT:    ; implicit-def: $sgpr44
; GFX9-NEXT:    ; implicit-def: $sgpr43
; GFX9-NEXT:    ; implicit-def: $sgpr42
; GFX9-NEXT:    ; implicit-def: $sgpr41
; GFX9-NEXT:    ; implicit-def: $sgpr40
; GFX9-NEXT:    ; implicit-def: $sgpr15
; GFX9-NEXT:    ; implicit-def: $sgpr14
; GFX9-NEXT:    ; implicit-def: $sgpr13
; GFX9-NEXT:    ; implicit-def: $sgpr12
; GFX9-NEXT:    ; implicit-def: $sgpr11
; GFX9-NEXT:    ; implicit-def: $sgpr10
; GFX9-NEXT:    s_branch .LBB8_2
;
; GFX11-LABEL: s_bitcast_v18i32_to_v36f16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s46, 0
; GFX11-NEXT:    s_and_b32 s4, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB8_4
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s46
; GFX11-NEXT:    s_cbranch_vccnz .LBB8_3
; GFX11-NEXT:  .LBB8_2: ; %cmp.true
; GFX11-NEXT:    s_add_i32 s29, s29, 3
; GFX11-NEXT:    s_add_i32 s28, s28, 3
; GFX11-NEXT:    s_add_i32 s27, s27, 3
; GFX11-NEXT:    s_add_i32 s26, s26, 3
; GFX11-NEXT:    s_add_i32 s25, s25, 3
; GFX11-NEXT:    s_add_i32 s24, s24, 3
; GFX11-NEXT:    s_add_i32 s23, s23, 3
; GFX11-NEXT:    s_add_i32 s22, s22, 3
; GFX11-NEXT:    s_add_i32 s21, s21, 3
; GFX11-NEXT:    s_add_i32 s20, s20, 3
; GFX11-NEXT:    s_add_i32 s19, s19, 3
; GFX11-NEXT:    s_add_i32 s18, s18, 3
; GFX11-NEXT:    s_add_i32 s17, s17, 3
; GFX11-NEXT:    s_add_i32 s16, s16, 3
; GFX11-NEXT:    s_add_i32 s3, s3, 3
; GFX11-NEXT:    s_add_i32 s2, s2, 3
; GFX11-NEXT:    s_add_i32 s1, s1, 3
; GFX11-NEXT:    s_add_i32 s0, s0, 3
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:  .LBB8_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s16, s41
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s17, s40
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s18, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s19, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s20, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s21, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s22, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s23, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s24, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s25, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s26, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s27, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s28, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s29, s4
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s15 :: v_dual_mov_b32 v7, s14
; GFX11-NEXT:    v_dual_mov_b32 v8, s13 :: v_dual_mov_b32 v9, s12
; GFX11-NEXT:    v_dual_mov_b32 v10, s11 :: v_dual_mov_b32 v11, s10
; GFX11-NEXT:    v_dual_mov_b32 v12, s9 :: v_dual_mov_b32 v13, s8
; GFX11-NEXT:    v_dual_mov_b32 v14, s7 :: v_dual_mov_b32 v15, s6
; GFX11-NEXT:    v_dual_mov_b32 v16, s5 :: v_dual_mov_b32 v17, s4
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB8_4:
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    ; implicit-def: $sgpr4
; GFX11-NEXT:    s_branch .LBB8_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <18 x i32> %a, splat (i32 3)
  %a2 = bitcast <18 x i32> %a1 to <36 x half>
  br label %end

cmp.false:
  %a3 = bitcast <18 x i32> %a to <36 x half>
  br label %end

end:
  %phi = phi <36 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x half> %phi
}

define inreg <18 x i32> @s_bitcast_v36f16_to_v18i32_inreg(<36 x half> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36f16_to_v18i32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v63, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(6)
; SI-NEXT:    v_cvt_f16_f32_e32 v57, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v56, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v47, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v51, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v50, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v49, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v48, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v39, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v38, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v37, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v35, s17
; SI-NEXT:    v_cvt_f16_f32_e32 v34, s16
; SI-NEXT:    s_waitcnt expcnt(1)
; SI-NEXT:    v_cvt_f16_f32_e32 v62, s19
; SI-NEXT:    v_cvt_f16_f32_e32 v33, s18
; SI-NEXT:    v_cvt_f16_f32_e32 v60, s21
; SI-NEXT:    v_cvt_f16_f32_e32 v61, s20
; SI-NEXT:    v_cvt_f16_f32_e32 v44, s23
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v63, s22
; SI-NEXT:    v_cvt_f16_f32_e32 v42, s25
; SI-NEXT:    v_cvt_f16_f32_e32 v41, s24
; SI-NEXT:    v_cvt_f16_f32_e32 v40, s27
; SI-NEXT:    v_cvt_f16_f32_e32 v55, s26
; SI-NEXT:    v_cvt_f16_f32_e32 v59, s29
; SI-NEXT:    v_cvt_f16_f32_e32 v58, s28
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_cbranch_scc0 .LBB9_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v35
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v62
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v60
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v44
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v42
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v40
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v59
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v57
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v47
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v50
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v48
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v38
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v36
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v30
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v26
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v0, v34, v0
; SI-NEXT:    v_or_b32_e32 v1, v33, v1
; SI-NEXT:    v_or_b32_e32 v2, v61, v2
; SI-NEXT:    v_or_b32_e32 v3, v63, v3
; SI-NEXT:    v_or_b32_e32 v4, v41, v4
; SI-NEXT:    v_or_b32_e32 v5, v55, v5
; SI-NEXT:    v_or_b32_e32 v6, v58, v6
; SI-NEXT:    v_or_b32_e32 v7, v56, v7
; SI-NEXT:    v_or_b32_e32 v8, v51, v8
; SI-NEXT:    v_or_b32_e32 v9, v49, v9
; SI-NEXT:    v_or_b32_e32 v10, v39, v10
; SI-NEXT:    v_or_b32_e32 v11, v37, v11
; SI-NEXT:    v_or_b32_e32 v12, v31, v12
; SI-NEXT:    v_or_b32_e32 v13, v29, v13
; SI-NEXT:    v_or_b32_e32 v14, v27, v14
; SI-NEXT:    v_or_b32_e32 v15, v25, v15
; SI-NEXT:    v_or_b32_e32 v16, v23, v16
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:    s_cbranch_execnz .LBB9_3
; SI-NEXT:  .LBB9_2: ; %cmp.true
; SI-NEXT:    v_cvt_f32_f16_e32 v0, v35
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v62
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v33
; SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v0, v1, v0
; SI-NEXT:    v_or_b32_e32 v1, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v60
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v61
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v63
; SI-NEXT:    s_waitcnt vmcnt(2)
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v41
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_or_b32_e32 v2, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v44
; SI-NEXT:    s_waitcnt vmcnt(1)
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v40
; SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v55
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; SI-NEXT:    v_or_b32_e32 v3, v4, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v42
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v58
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v47
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v5, v4
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v59
; SI-NEXT:    v_or_b32_e32 v5, v7, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v57
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v56
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v51
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v49
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_or_b32_e32 v7, v8, v7
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v50
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v48
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v38
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v9, v11, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v39
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v37
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v31
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v28
; SI-NEXT:    v_or_b32_e32 v10, v11, v10
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v36
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_or_b32_e32 v11, v13, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v30
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v29
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v27
; SI-NEXT:    v_or_b32_e32 v13, v14, v13
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v26
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v25
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_or_b32_e32 v14, v16, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    v_or_b32_e32 v15, v17, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_add_f32_e32 v18, 0x38000000, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_add_f32_e32 v19, 0x38000000, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v16
; SI-NEXT:    v_or_b32_e32 v16, v17, v16
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:  .LBB9_3: ; %end
; SI-NEXT:    buffer_load_dword v63, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB9_4:
; SI-NEXT:    buffer_store_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v55, v36
; SI-NEXT:    v_mov_b32_e32 v36, v19
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v40, v37
; SI-NEXT:    v_mov_b32_e32 v37, v18
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v41, v38
; SI-NEXT:    v_mov_b32_e32 v38, v23
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v42, v39
; SI-NEXT:    v_mov_b32_e32 v39, v24
; SI-NEXT:    v_mov_b32_e32 v43, v48
; SI-NEXT:    v_mov_b32_e32 v48, v25
; SI-NEXT:    v_mov_b32_e32 v32, v44
; SI-NEXT:    v_mov_b32_e32 v44, v49
; SI-NEXT:    v_mov_b32_e32 v49, v26
; SI-NEXT:    v_mov_b32_e32 v45, v50
; SI-NEXT:    v_mov_b32_e32 v50, v27
; SI-NEXT:    v_mov_b32_e32 v46, v51
; SI-NEXT:    v_mov_b32_e32 v51, v28
; SI-NEXT:    v_mov_b32_e32 v52, v29
; SI-NEXT:    v_mov_b32_e32 v53, v30
; SI-NEXT:    v_mov_b32_e32 v54, v31
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    v_mov_b32_e32 v24, v39
; SI-NEXT:    v_mov_b32_e32 v39, v42
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v23, v38
; SI-NEXT:    v_mov_b32_e32 v38, v41
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v18, v37
; SI-NEXT:    v_mov_b32_e32 v37, v40
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v19, v36
; SI-NEXT:    v_mov_b32_e32 v36, v55
; SI-NEXT:    buffer_load_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v31, v54
; SI-NEXT:    v_mov_b32_e32 v30, v53
; SI-NEXT:    v_mov_b32_e32 v29, v52
; SI-NEXT:    v_mov_b32_e32 v28, v51
; SI-NEXT:    v_mov_b32_e32 v51, v46
; SI-NEXT:    v_mov_b32_e32 v27, v50
; SI-NEXT:    v_mov_b32_e32 v50, v45
; SI-NEXT:    v_mov_b32_e32 v26, v49
; SI-NEXT:    v_mov_b32_e32 v49, v44
; SI-NEXT:    v_mov_b32_e32 v44, v32
; SI-NEXT:    v_mov_b32_e32 v25, v48
; SI-NEXT:    v_mov_b32_e32 v48, v43
; SI-NEXT:    s_branch .LBB9_2
;
; VI-LABEL: s_bitcast_v36f16_to_v18i32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s6, s29, 16
; VI-NEXT:    s_lshr_b32 s7, s28, 16
; VI-NEXT:    s_lshr_b32 s8, s27, 16
; VI-NEXT:    s_lshr_b32 s9, s26, 16
; VI-NEXT:    s_lshr_b32 s10, s25, 16
; VI-NEXT:    s_lshr_b32 s11, s24, 16
; VI-NEXT:    s_lshr_b32 s12, s23, 16
; VI-NEXT:    s_lshr_b32 s13, s22, 16
; VI-NEXT:    s_lshr_b32 s14, s21, 16
; VI-NEXT:    s_lshr_b32 s15, s20, 16
; VI-NEXT:    s_lshr_b32 s40, s19, 16
; VI-NEXT:    s_lshr_b32 s41, s18, 16
; VI-NEXT:    s_lshr_b32 s42, s17, 16
; VI-NEXT:    s_lshr_b32 s43, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v34, v1
; VI-NEXT:    v_mov_b32_e32 v35, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB9_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s43, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s42, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s41, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s40, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s15, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s14, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s13, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s12, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s11, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s10, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s9, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s8, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s7, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s6, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v35, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v34, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB9_3
; VI-NEXT:  .LBB9_2: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v13, 0x200
; VI-NEXT:    v_mov_b32_e32 v0, s43
; VI-NEXT:    v_mov_b32_e32 v2, s42
; VI-NEXT:    v_add_f16_sdwa v0, v0, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, s16, v13
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s17, v13
; VI-NEXT:    v_or_b32_e32 v0, v1, v0
; VI-NEXT:    v_or_b32_e32 v1, v3, v2
; VI-NEXT:    v_mov_b32_e32 v2, s41
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s18, v13
; VI-NEXT:    v_or_b32_e32 v2, v3, v2
; VI-NEXT:    v_mov_b32_e32 v3, s40
; VI-NEXT:    v_add_f16_sdwa v3, v3, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v4, s19, v13
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_mov_b32_e32 v4, s15
; VI-NEXT:    v_add_f16_sdwa v4, v4, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v5, s20, v13
; VI-NEXT:    v_or_b32_e32 v4, v5, v4
; VI-NEXT:    v_mov_b32_e32 v5, s14
; VI-NEXT:    v_add_f16_sdwa v5, v5, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v6, s21, v13
; VI-NEXT:    v_or_b32_e32 v5, v6, v5
; VI-NEXT:    v_mov_b32_e32 v6, s13
; VI-NEXT:    v_add_f16_sdwa v6, v6, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v7, s22, v13
; VI-NEXT:    v_or_b32_e32 v6, v7, v6
; VI-NEXT:    v_mov_b32_e32 v7, s12
; VI-NEXT:    v_add_f16_sdwa v7, v7, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v8, s23, v13
; VI-NEXT:    v_or_b32_e32 v7, v8, v7
; VI-NEXT:    v_mov_b32_e32 v8, s11
; VI-NEXT:    v_add_f16_sdwa v8, v8, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v9, s24, v13
; VI-NEXT:    v_or_b32_e32 v8, v9, v8
; VI-NEXT:    v_mov_b32_e32 v9, s10
; VI-NEXT:    v_add_f16_sdwa v9, v9, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v10, s25, v13
; VI-NEXT:    v_or_b32_e32 v9, v10, v9
; VI-NEXT:    v_mov_b32_e32 v10, s9
; VI-NEXT:    v_add_f16_sdwa v10, v10, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v11, s26, v13
; VI-NEXT:    v_or_b32_e32 v10, v11, v10
; VI-NEXT:    v_mov_b32_e32 v11, s8
; VI-NEXT:    v_add_f16_sdwa v11, v11, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v12, s27, v13
; VI-NEXT:    v_or_b32_e32 v11, v12, v11
; VI-NEXT:    v_mov_b32_e32 v12, s7
; VI-NEXT:    v_add_f16_sdwa v12, v12, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v14, s28, v13
; VI-NEXT:    v_or_b32_e32 v12, v14, v12
; VI-NEXT:    v_mov_b32_e32 v14, s6
; VI-NEXT:    v_add_f16_sdwa v14, v14, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v13, s29, v13
; VI-NEXT:    v_mov_b32_e32 v17, 0x200
; VI-NEXT:    v_or_b32_e32 v13, v13, v14
; VI-NEXT:    v_add_f16_sdwa v14, v35, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v15, 0x200, v35
; VI-NEXT:    v_or_b32_e32 v14, v15, v14
; VI-NEXT:    v_add_f16_sdwa v15, v34, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v16, 0x200, v34
; VI-NEXT:    v_or_b32_e32 v15, v16, v15
; VI-NEXT:    v_add_f16_sdwa v16, v33, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v33
; VI-NEXT:    v_or_b32_e32 v16, v18, v16
; VI-NEXT:    v_add_f16_sdwa v17, v32, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v32
; VI-NEXT:    v_or_b32_e32 v17, v18, v17
; VI-NEXT:  .LBB9_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB9_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB9_2
;
; GFX9-LABEL: s_bitcast_v36f16_to_v18i32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB9_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB9_3
; GFX9-NEXT:  .LBB9_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v15, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_mov_b32_e32 v13, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v14
; GFX9-NEXT:    s_movk_i32 s4, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v15
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_f16 v0, s6, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, s7, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, s8, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v3, s9, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v4, s10, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v5, s11, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v6, s12, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v7, s13, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v8, s14, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v9, s15, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v10, s16, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v11, s17, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v12, s18, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v13, s19, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v14, v14, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v15, v15, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v16, v16, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v17, v17, s4 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB9_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB9_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB9_2
;
; GFX11-LABEL: s_bitcast_v36f16_to_v18i32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB9_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB9_4
; GFX11-NEXT:  .LBB9_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s0 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s4 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s5 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s6 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s7 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s8 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s9 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s10 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s11 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v12, 0x200, s12 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v13, 0x200, s13 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v14, 0x200, s14 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v15, 0x200, s15 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v16, 0x200, s16 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v17, 0x200, s17 op_sel_hi:[0,1]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB9_3:
; GFX11-NEXT:    s_branch .LBB9_2
; GFX11-NEXT:  .LBB9_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <36 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <36 x half> %a1 to <18 x i32>
  br label %end

cmp.false:
  %a3 = bitcast <36 x half> %a to <18 x i32>
  br label %end

end:
  %phi = phi <18 x i32> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x i32> %phi
}

define inreg <9 x i64> @s_bitcast_v18f32_to_v9i64_inreg(<18 x float> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18f32_to_v9i64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB10_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB10_3
; SI-NEXT:  .LBB10_2: ; %cmp.true
; SI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; SI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; SI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; SI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; SI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; SI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; SI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; SI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; SI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; SI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; SI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; SI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; SI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; SI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; SI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; SI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; SI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; SI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; SI-NEXT:  .LBB10_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB10_4:
; SI-NEXT:    s_branch .LBB10_2
;
; VI-LABEL: s_bitcast_v18f32_to_v9i64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB10_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB10_3
; VI-NEXT:  .LBB10_2: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; VI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; VI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; VI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; VI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; VI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; VI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; VI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; VI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; VI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; VI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; VI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; VI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; VI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  .LBB10_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB10_4:
; VI-NEXT:    s_branch .LBB10_2
;
; GFX9-LABEL: s_bitcast_v18f32_to_v9i64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB10_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB10_3
; GFX9-NEXT:  .LBB10_2: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v17, 1.0, v17
; GFX9-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GFX9-NEXT:    v_add_f32_e32 v15, 1.0, v15
; GFX9-NEXT:    v_add_f32_e32 v14, 1.0, v14
; GFX9-NEXT:    v_add_f32_e32 v13, 1.0, v13
; GFX9-NEXT:    v_add_f32_e32 v12, 1.0, v12
; GFX9-NEXT:    v_add_f32_e32 v11, 1.0, v11
; GFX9-NEXT:    v_add_f32_e32 v10, 1.0, v10
; GFX9-NEXT:    v_add_f32_e32 v9, 1.0, v9
; GFX9-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GFX9-NEXT:    v_add_f32_e32 v7, 1.0, v7
; GFX9-NEXT:    v_add_f32_e32 v6, 1.0, v6
; GFX9-NEXT:    v_add_f32_e32 v5, 1.0, v5
; GFX9-NEXT:    v_add_f32_e32 v4, 1.0, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  .LBB10_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB10_4:
; GFX9-NEXT:    s_branch .LBB10_2
;
; GFX11-LABEL: s_bitcast_v18f32_to_v9i64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX11-NEXT:    scratch_store_b32 off, v32, s32 ; 4-byte Folded Spill
; GFX11-NEXT:    s_mov_b32 exec_lo, s4
; GFX11-NEXT:    v_writelane_b32 v32, s36, 0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s47, s23
; GFX11-NEXT:    s_mov_b32 s46, s22
; GFX11-NEXT:    s_mov_b32 s45, s21
; GFX11-NEXT:    v_writelane_b32 v32, s37, 1
; GFX11-NEXT:    s_mov_b32 s44, s20
; GFX11-NEXT:    s_mov_b32 s43, s19
; GFX11-NEXT:    s_mov_b32 s42, s18
; GFX11-NEXT:    s_mov_b32 s41, s17
; GFX11-NEXT:    v_writelane_b32 v32, s38, 2
; GFX11-NEXT:    s_mov_b32 s40, s16
; GFX11-NEXT:    s_mov_b32 s38, s2
; GFX11-NEXT:    s_mov_b32 s37, s1
; GFX11-NEXT:    s_mov_b32 s36, s0
; GFX11-NEXT:    v_writelane_b32 v32, s39, 3
; GFX11-NEXT:    s_mov_b32 s39, s3
; GFX11-NEXT:    s_mov_b32 s0, 0
; GFX11-NEXT:    s_and_b32 s1, vcc_lo, exec_lo
; GFX11-NEXT:    v_writelane_b32 v32, s48, 4
; GFX11-NEXT:    s_mov_b32 s48, s24
; GFX11-NEXT:    v_writelane_b32 v32, s49, 5
; GFX11-NEXT:    s_mov_b32 s49, s25
; GFX11-NEXT:    v_writelane_b32 v32, s50, 6
; GFX11-NEXT:    s_mov_b32 s50, s26
; GFX11-NEXT:    v_writelane_b32 v32, s51, 7
; GFX11-NEXT:    s_mov_b32 s51, s27
; GFX11-NEXT:    v_writelane_b32 v32, s52, 8
; GFX11-NEXT:    s_mov_b32 s52, s28
; GFX11-NEXT:    v_writelane_b32 v32, s53, 9
; GFX11-NEXT:    s_mov_b32 s53, s29
; GFX11-NEXT:    s_cbranch_scc0 .LBB10_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; GFX11-NEXT:    s_cbranch_vccnz .LBB10_4
; GFX11-NEXT:  .LBB10_2: ; %cmp.true
; GFX11-NEXT:    v_add_f32_e64 v17, s53, 1.0
; GFX11-NEXT:    v_add_f32_e64 v16, s52, 1.0
; GFX11-NEXT:    v_add_f32_e64 v15, s51, 1.0
; GFX11-NEXT:    v_add_f32_e64 v14, s50, 1.0
; GFX11-NEXT:    v_add_f32_e64 v13, s49, 1.0
; GFX11-NEXT:    v_add_f32_e64 v12, s48, 1.0
; GFX11-NEXT:    v_add_f32_e64 v11, s47, 1.0
; GFX11-NEXT:    v_add_f32_e64 v10, s46, 1.0
; GFX11-NEXT:    v_add_f32_e64 v9, s45, 1.0
; GFX11-NEXT:    v_add_f32_e64 v8, s44, 1.0
; GFX11-NEXT:    v_add_f32_e64 v7, s43, 1.0
; GFX11-NEXT:    v_add_f32_e64 v6, s42, 1.0
; GFX11-NEXT:    v_add_f32_e64 v5, s41, 1.0
; GFX11-NEXT:    v_add_f32_e64 v4, s40, 1.0
; GFX11-NEXT:    v_add_f32_e64 v3, s39, 1.0
; GFX11-NEXT:    v_add_f32_e64 v2, s38, 1.0
; GFX11-NEXT:    v_add_f32_e64 v1, s37, 1.0
; GFX11-NEXT:    v_add_f32_e64 v0, s36, 1.0
; GFX11-NEXT:    s_branch .LBB10_5
; GFX11-NEXT:  .LBB10_3:
; GFX11-NEXT:    s_branch .LBB10_2
; GFX11-NEXT:  .LBB10_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s36 :: v_dual_mov_b32 v1, s37
; GFX11-NEXT:    v_dual_mov_b32 v2, s38 :: v_dual_mov_b32 v3, s39
; GFX11-NEXT:    v_dual_mov_b32 v4, s40 :: v_dual_mov_b32 v5, s41
; GFX11-NEXT:    v_dual_mov_b32 v6, s42 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v8, s44 :: v_dual_mov_b32 v9, s45
; GFX11-NEXT:    v_dual_mov_b32 v10, s46 :: v_dual_mov_b32 v11, s47
; GFX11-NEXT:    v_dual_mov_b32 v12, s48 :: v_dual_mov_b32 v13, s49
; GFX11-NEXT:    v_dual_mov_b32 v14, s50 :: v_dual_mov_b32 v15, s51
; GFX11-NEXT:    v_dual_mov_b32 v16, s52 :: v_dual_mov_b32 v17, s53
; GFX11-NEXT:    v_dual_mov_b32 v18, s54 :: v_dual_mov_b32 v19, s55
; GFX11-NEXT:    v_dual_mov_b32 v20, s56 :: v_dual_mov_b32 v21, s57
; GFX11-NEXT:    v_dual_mov_b32 v22, s58 :: v_dual_mov_b32 v23, s59
; GFX11-NEXT:    v_dual_mov_b32 v24, s60 :: v_dual_mov_b32 v25, s61
; GFX11-NEXT:    v_dual_mov_b32 v26, s62 :: v_dual_mov_b32 v27, s63
; GFX11-NEXT:    v_dual_mov_b32 v28, s64 :: v_dual_mov_b32 v29, s65
; GFX11-NEXT:    v_dual_mov_b32 v30, s66 :: v_dual_mov_b32 v31, s67
; GFX11-NEXT:  .LBB10_5: ; %end
; GFX11-NEXT:    v_readlane_b32 s53, v32, 9
; GFX11-NEXT:    v_readlane_b32 s52, v32, 8
; GFX11-NEXT:    v_readlane_b32 s51, v32, 7
; GFX11-NEXT:    v_readlane_b32 s50, v32, 6
; GFX11-NEXT:    v_readlane_b32 s49, v32, 5
; GFX11-NEXT:    v_readlane_b32 s48, v32, 4
; GFX11-NEXT:    v_readlane_b32 s39, v32, 3
; GFX11-NEXT:    v_readlane_b32 s38, v32, 2
; GFX11-NEXT:    v_readlane_b32 s37, v32, 1
; GFX11-NEXT:    v_readlane_b32 s36, v32, 0
; GFX11-NEXT:    s_xor_saveexec_b32 s0, -1
; GFX11-NEXT:    scratch_load_b32 v32, off, s32 ; 4-byte Folded Reload
; GFX11-NEXT:    s_mov_b32 exec_lo, s0
; GFX11-NEXT:    s_waitcnt vmcnt(0)
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <18 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <18 x float> %a1 to <9 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <18 x float> %a to <9 x i64>
  br label %end

end:
  %phi = phi <9 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x i64> %phi
}

define inreg <18 x float> @s_bitcast_v9i64_to_v18f32_inreg(<9 x i64> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9i64_to_v18f32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB11_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB11_3
; SI-NEXT:  .LBB11_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_addc_u32_e32 v15, vcc, 0, v15, vcc
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_addc_u32_e32 v13, vcc, 0, v13, vcc
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_addc_u32_e32 v11, vcc, 0, v11, vcc
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_addc_u32_e32 v9, vcc, 0, v9, vcc
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_addc_u32_e32 v7, vcc, 0, v7, vcc
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_addc_u32_e32 v5, vcc, 0, v5, vcc
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; SI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; SI-NEXT:  .LBB11_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB11_4:
; SI-NEXT:    s_branch .LBB11_2
;
; VI-LABEL: s_bitcast_v9i64_to_v18f32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB11_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB11_3
; VI-NEXT:  .LBB11_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; VI-NEXT:    v_add_u32_e32 v14, vcc, 3, v14
; VI-NEXT:    v_addc_u32_e32 v15, vcc, 0, v15, vcc
; VI-NEXT:    v_add_u32_e32 v12, vcc, 3, v12
; VI-NEXT:    v_addc_u32_e32 v13, vcc, 0, v13, vcc
; VI-NEXT:    v_add_u32_e32 v10, vcc, 3, v10
; VI-NEXT:    v_addc_u32_e32 v11, vcc, 0, v11, vcc
; VI-NEXT:    v_add_u32_e32 v8, vcc, 3, v8
; VI-NEXT:    v_addc_u32_e32 v9, vcc, 0, v9, vcc
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_addc_u32_e32 v7, vcc, 0, v7, vcc
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_addc_u32_e32 v5, vcc, 0, v5, vcc
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:  .LBB11_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB11_4:
; VI-NEXT:    s_branch .LBB11_2
;
; GFX9-LABEL: s_bitcast_v9i64_to_v18f32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB11_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB11_3
; GFX9-NEXT:  .LBB11_2: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v16, vcc, 3, v16
; GFX9-NEXT:    v_addc_co_u32_e32 v17, vcc, 0, v17, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v14, vcc, 3, v14
; GFX9-NEXT:    v_addc_co_u32_e32 v15, vcc, 0, v15, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v12, vcc, 3, v12
; GFX9-NEXT:    v_addc_co_u32_e32 v13, vcc, 0, v13, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v10, vcc, 3, v10
; GFX9-NEXT:    v_addc_co_u32_e32 v11, vcc, 0, v11, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v8, vcc, 3, v8
; GFX9-NEXT:    v_addc_co_u32_e32 v9, vcc, 0, v9, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v6, vcc, 3, v6
; GFX9-NEXT:    v_addc_co_u32_e32 v7, vcc, 0, v7, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v4, vcc, 3, v4
; GFX9-NEXT:    v_addc_co_u32_e32 v5, vcc, 0, v5, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:  .LBB11_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB11_4:
; GFX9-NEXT:    s_branch .LBB11_2
;
; GFX11-LABEL: s_bitcast_v9i64_to_v18f32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB11_4
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB11_3
; GFX11-NEXT:  .LBB11_2: ; %cmp.true
; GFX11-NEXT:    s_add_u32 s28, s28, 3
; GFX11-NEXT:    s_addc_u32 s29, s29, 0
; GFX11-NEXT:    s_add_u32 s26, s26, 3
; GFX11-NEXT:    s_addc_u32 s27, s27, 0
; GFX11-NEXT:    s_add_u32 s24, s24, 3
; GFX11-NEXT:    s_addc_u32 s25, s25, 0
; GFX11-NEXT:    s_add_u32 s22, s22, 3
; GFX11-NEXT:    s_addc_u32 s23, s23, 0
; GFX11-NEXT:    s_add_u32 s20, s20, 3
; GFX11-NEXT:    s_addc_u32 s21, s21, 0
; GFX11-NEXT:    s_add_u32 s18, s18, 3
; GFX11-NEXT:    s_addc_u32 s19, s19, 0
; GFX11-NEXT:    s_add_u32 s16, s16, 3
; GFX11-NEXT:    s_addc_u32 s17, s17, 0
; GFX11-NEXT:    s_add_u32 s2, s2, 3
; GFX11-NEXT:    s_addc_u32 s3, s3, 0
; GFX11-NEXT:    s_add_u32 s0, s0, 3
; GFX11-NEXT:    s_addc_u32 s1, s1, 0
; GFX11-NEXT:  .LBB11_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v16, s28 :: v_dual_mov_b32 v17, s29
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB11_4:
; GFX11-NEXT:    s_branch .LBB11_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <9 x i64> %a, splat (i64 3)
  %a2 = bitcast <9 x i64> %a1 to <18 x float>
  br label %end

cmp.false:
  %a3 = bitcast <9 x i64> %a to <18 x float>
  br label %end

end:
  %phi = phi <18 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x float> %phi
}

define inreg <9 x double> @s_bitcast_v18f32_to_v9f64_inreg(<18 x float> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18f32_to_v9f64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB12_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB12_3
; SI-NEXT:  .LBB12_2: ; %cmp.true
; SI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; SI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; SI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; SI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; SI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; SI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; SI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; SI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; SI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; SI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; SI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; SI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; SI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; SI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; SI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; SI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; SI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; SI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; SI-NEXT:  .LBB12_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB12_4:
; SI-NEXT:    s_branch .LBB12_2
;
; VI-LABEL: s_bitcast_v18f32_to_v9f64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB12_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB12_3
; VI-NEXT:  .LBB12_2: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; VI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; VI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; VI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; VI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; VI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; VI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; VI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; VI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; VI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; VI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; VI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; VI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; VI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:  .LBB12_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB12_4:
; VI-NEXT:    s_branch .LBB12_2
;
; GFX9-LABEL: s_bitcast_v18f32_to_v9f64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB12_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB12_3
; GFX9-NEXT:  .LBB12_2: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v17, 1.0, v17
; GFX9-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GFX9-NEXT:    v_add_f32_e32 v15, 1.0, v15
; GFX9-NEXT:    v_add_f32_e32 v14, 1.0, v14
; GFX9-NEXT:    v_add_f32_e32 v13, 1.0, v13
; GFX9-NEXT:    v_add_f32_e32 v12, 1.0, v12
; GFX9-NEXT:    v_add_f32_e32 v11, 1.0, v11
; GFX9-NEXT:    v_add_f32_e32 v10, 1.0, v10
; GFX9-NEXT:    v_add_f32_e32 v9, 1.0, v9
; GFX9-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GFX9-NEXT:    v_add_f32_e32 v7, 1.0, v7
; GFX9-NEXT:    v_add_f32_e32 v6, 1.0, v6
; GFX9-NEXT:    v_add_f32_e32 v5, 1.0, v5
; GFX9-NEXT:    v_add_f32_e32 v4, 1.0, v4
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:  .LBB12_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB12_4:
; GFX9-NEXT:    s_branch .LBB12_2
;
; GFX11-LABEL: s_bitcast_v18f32_to_v9f64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX11-NEXT:    scratch_store_b32 off, v32, s32 ; 4-byte Folded Spill
; GFX11-NEXT:    s_mov_b32 exec_lo, s4
; GFX11-NEXT:    v_writelane_b32 v32, s36, 0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s47, s23
; GFX11-NEXT:    s_mov_b32 s46, s22
; GFX11-NEXT:    s_mov_b32 s45, s21
; GFX11-NEXT:    v_writelane_b32 v32, s37, 1
; GFX11-NEXT:    s_mov_b32 s44, s20
; GFX11-NEXT:    s_mov_b32 s43, s19
; GFX11-NEXT:    s_mov_b32 s42, s18
; GFX11-NEXT:    s_mov_b32 s41, s17
; GFX11-NEXT:    v_writelane_b32 v32, s38, 2
; GFX11-NEXT:    s_mov_b32 s40, s16
; GFX11-NEXT:    s_mov_b32 s38, s2
; GFX11-NEXT:    s_mov_b32 s37, s1
; GFX11-NEXT:    s_mov_b32 s36, s0
; GFX11-NEXT:    v_writelane_b32 v32, s39, 3
; GFX11-NEXT:    s_mov_b32 s39, s3
; GFX11-NEXT:    s_mov_b32 s0, 0
; GFX11-NEXT:    s_and_b32 s1, vcc_lo, exec_lo
; GFX11-NEXT:    v_writelane_b32 v32, s48, 4
; GFX11-NEXT:    s_mov_b32 s48, s24
; GFX11-NEXT:    v_writelane_b32 v32, s49, 5
; GFX11-NEXT:    s_mov_b32 s49, s25
; GFX11-NEXT:    v_writelane_b32 v32, s50, 6
; GFX11-NEXT:    s_mov_b32 s50, s26
; GFX11-NEXT:    v_writelane_b32 v32, s51, 7
; GFX11-NEXT:    s_mov_b32 s51, s27
; GFX11-NEXT:    v_writelane_b32 v32, s52, 8
; GFX11-NEXT:    s_mov_b32 s52, s28
; GFX11-NEXT:    v_writelane_b32 v32, s53, 9
; GFX11-NEXT:    s_mov_b32 s53, s29
; GFX11-NEXT:    s_cbranch_scc0 .LBB12_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; GFX11-NEXT:    s_cbranch_vccnz .LBB12_4
; GFX11-NEXT:  .LBB12_2: ; %cmp.true
; GFX11-NEXT:    v_add_f32_e64 v17, s53, 1.0
; GFX11-NEXT:    v_add_f32_e64 v16, s52, 1.0
; GFX11-NEXT:    v_add_f32_e64 v15, s51, 1.0
; GFX11-NEXT:    v_add_f32_e64 v14, s50, 1.0
; GFX11-NEXT:    v_add_f32_e64 v13, s49, 1.0
; GFX11-NEXT:    v_add_f32_e64 v12, s48, 1.0
; GFX11-NEXT:    v_add_f32_e64 v11, s47, 1.0
; GFX11-NEXT:    v_add_f32_e64 v10, s46, 1.0
; GFX11-NEXT:    v_add_f32_e64 v9, s45, 1.0
; GFX11-NEXT:    v_add_f32_e64 v8, s44, 1.0
; GFX11-NEXT:    v_add_f32_e64 v7, s43, 1.0
; GFX11-NEXT:    v_add_f32_e64 v6, s42, 1.0
; GFX11-NEXT:    v_add_f32_e64 v5, s41, 1.0
; GFX11-NEXT:    v_add_f32_e64 v4, s40, 1.0
; GFX11-NEXT:    v_add_f32_e64 v3, s39, 1.0
; GFX11-NEXT:    v_add_f32_e64 v2, s38, 1.0
; GFX11-NEXT:    v_add_f32_e64 v1, s37, 1.0
; GFX11-NEXT:    v_add_f32_e64 v0, s36, 1.0
; GFX11-NEXT:    s_branch .LBB12_5
; GFX11-NEXT:  .LBB12_3:
; GFX11-NEXT:    s_branch .LBB12_2
; GFX11-NEXT:  .LBB12_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s36 :: v_dual_mov_b32 v1, s37
; GFX11-NEXT:    v_dual_mov_b32 v2, s38 :: v_dual_mov_b32 v3, s39
; GFX11-NEXT:    v_dual_mov_b32 v4, s40 :: v_dual_mov_b32 v5, s41
; GFX11-NEXT:    v_dual_mov_b32 v6, s42 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v8, s44 :: v_dual_mov_b32 v9, s45
; GFX11-NEXT:    v_dual_mov_b32 v10, s46 :: v_dual_mov_b32 v11, s47
; GFX11-NEXT:    v_dual_mov_b32 v12, s48 :: v_dual_mov_b32 v13, s49
; GFX11-NEXT:    v_dual_mov_b32 v14, s50 :: v_dual_mov_b32 v15, s51
; GFX11-NEXT:    v_dual_mov_b32 v16, s52 :: v_dual_mov_b32 v17, s53
; GFX11-NEXT:    v_dual_mov_b32 v18, s54 :: v_dual_mov_b32 v19, s55
; GFX11-NEXT:    v_dual_mov_b32 v20, s56 :: v_dual_mov_b32 v21, s57
; GFX11-NEXT:    v_dual_mov_b32 v22, s58 :: v_dual_mov_b32 v23, s59
; GFX11-NEXT:    v_dual_mov_b32 v24, s60 :: v_dual_mov_b32 v25, s61
; GFX11-NEXT:    v_dual_mov_b32 v26, s62 :: v_dual_mov_b32 v27, s63
; GFX11-NEXT:    v_dual_mov_b32 v28, s64 :: v_dual_mov_b32 v29, s65
; GFX11-NEXT:    v_dual_mov_b32 v30, s66 :: v_dual_mov_b32 v31, s67
; GFX11-NEXT:  .LBB12_5: ; %end
; GFX11-NEXT:    v_readlane_b32 s53, v32, 9
; GFX11-NEXT:    v_readlane_b32 s52, v32, 8
; GFX11-NEXT:    v_readlane_b32 s51, v32, 7
; GFX11-NEXT:    v_readlane_b32 s50, v32, 6
; GFX11-NEXT:    v_readlane_b32 s49, v32, 5
; GFX11-NEXT:    v_readlane_b32 s48, v32, 4
; GFX11-NEXT:    v_readlane_b32 s39, v32, 3
; GFX11-NEXT:    v_readlane_b32 s38, v32, 2
; GFX11-NEXT:    v_readlane_b32 s37, v32, 1
; GFX11-NEXT:    v_readlane_b32 s36, v32, 0
; GFX11-NEXT:    s_xor_saveexec_b32 s0, -1
; GFX11-NEXT:    scratch_load_b32 v32, off, s32 ; 4-byte Folded Reload
; GFX11-NEXT:    s_mov_b32 exec_lo, s0
; GFX11-NEXT:    s_waitcnt vmcnt(0)
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <18 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <18 x float> %a1 to <9 x double>
  br label %end

cmp.false:
  %a3 = bitcast <18 x float> %a to <9 x double>
  br label %end

end:
  %phi = phi <9 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x double> %phi
}

define inreg <18 x float> @s_bitcast_v9f64_to_v18f32_inreg(<9 x double> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9f64_to_v18f32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB13_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB13_3
; SI-NEXT:  .LBB13_2: ; %cmp.true
; SI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; SI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; SI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; SI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; SI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; SI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; SI-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; SI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; SI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; SI-NEXT:  .LBB13_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB13_4:
; SI-NEXT:    s_branch .LBB13_2
;
; VI-LABEL: s_bitcast_v9f64_to_v18f32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB13_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB13_3
; VI-NEXT:  .LBB13_2: ; %cmp.true
; VI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; VI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; VI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; VI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; VI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; VI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; VI-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:  .LBB13_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB13_4:
; VI-NEXT:    s_branch .LBB13_2
;
; GFX9-LABEL: s_bitcast_v9f64_to_v18f32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB13_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB13_3
; GFX9-NEXT:  .LBB13_2: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX9-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; GFX9-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; GFX9-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; GFX9-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; GFX9-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; GFX9-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:  .LBB13_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB13_4:
; GFX9-NEXT:    s_branch .LBB13_2
;
; GFX11-LABEL: s_bitcast_v9f64_to_v18f32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX11-NEXT:    scratch_store_b32 off, v32, s32 ; 4-byte Folded Spill
; GFX11-NEXT:    s_mov_b32 exec_lo, s4
; GFX11-NEXT:    v_writelane_b32 v32, s36, 0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s47, s23
; GFX11-NEXT:    s_mov_b32 s46, s22
; GFX11-NEXT:    s_mov_b32 s45, s21
; GFX11-NEXT:    v_writelane_b32 v32, s37, 1
; GFX11-NEXT:    s_mov_b32 s44, s20
; GFX11-NEXT:    s_mov_b32 s43, s19
; GFX11-NEXT:    s_mov_b32 s42, s18
; GFX11-NEXT:    s_mov_b32 s41, s17
; GFX11-NEXT:    v_writelane_b32 v32, s38, 2
; GFX11-NEXT:    s_mov_b32 s40, s16
; GFX11-NEXT:    s_mov_b32 s38, s2
; GFX11-NEXT:    s_mov_b32 s37, s1
; GFX11-NEXT:    s_mov_b32 s36, s0
; GFX11-NEXT:    v_writelane_b32 v32, s39, 3
; GFX11-NEXT:    s_mov_b32 s39, s3
; GFX11-NEXT:    s_mov_b32 s0, 0
; GFX11-NEXT:    s_and_b32 s1, vcc_lo, exec_lo
; GFX11-NEXT:    v_writelane_b32 v32, s48, 4
; GFX11-NEXT:    s_mov_b32 s48, s24
; GFX11-NEXT:    v_writelane_b32 v32, s49, 5
; GFX11-NEXT:    s_mov_b32 s49, s25
; GFX11-NEXT:    v_writelane_b32 v32, s50, 6
; GFX11-NEXT:    s_mov_b32 s50, s26
; GFX11-NEXT:    v_writelane_b32 v32, s51, 7
; GFX11-NEXT:    s_mov_b32 s51, s27
; GFX11-NEXT:    v_writelane_b32 v32, s52, 8
; GFX11-NEXT:    s_mov_b32 s52, s28
; GFX11-NEXT:    v_writelane_b32 v32, s53, 9
; GFX11-NEXT:    s_mov_b32 s53, s29
; GFX11-NEXT:    s_cbranch_scc0 .LBB13_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; GFX11-NEXT:    s_cbranch_vccnz .LBB13_4
; GFX11-NEXT:  .LBB13_2: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[16:17], s[52:53], 1.0
; GFX11-NEXT:    v_add_f64 v[14:15], s[50:51], 1.0
; GFX11-NEXT:    v_add_f64 v[12:13], s[48:49], 1.0
; GFX11-NEXT:    v_add_f64 v[10:11], s[46:47], 1.0
; GFX11-NEXT:    v_add_f64 v[8:9], s[44:45], 1.0
; GFX11-NEXT:    v_add_f64 v[6:7], s[42:43], 1.0
; GFX11-NEXT:    v_add_f64 v[4:5], s[40:41], 1.0
; GFX11-NEXT:    v_add_f64 v[2:3], s[38:39], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], s[36:37], 1.0
; GFX11-NEXT:    s_branch .LBB13_5
; GFX11-NEXT:  .LBB13_3:
; GFX11-NEXT:    s_branch .LBB13_2
; GFX11-NEXT:  .LBB13_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s36 :: v_dual_mov_b32 v1, s37
; GFX11-NEXT:    v_dual_mov_b32 v2, s38 :: v_dual_mov_b32 v3, s39
; GFX11-NEXT:    v_dual_mov_b32 v4, s40 :: v_dual_mov_b32 v5, s41
; GFX11-NEXT:    v_dual_mov_b32 v6, s42 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v8, s44 :: v_dual_mov_b32 v9, s45
; GFX11-NEXT:    v_dual_mov_b32 v10, s46 :: v_dual_mov_b32 v11, s47
; GFX11-NEXT:    v_dual_mov_b32 v12, s48 :: v_dual_mov_b32 v13, s49
; GFX11-NEXT:    v_dual_mov_b32 v14, s50 :: v_dual_mov_b32 v15, s51
; GFX11-NEXT:    v_dual_mov_b32 v16, s52 :: v_dual_mov_b32 v17, s53
; GFX11-NEXT:    v_dual_mov_b32 v18, s54 :: v_dual_mov_b32 v19, s55
; GFX11-NEXT:    v_dual_mov_b32 v20, s56 :: v_dual_mov_b32 v21, s57
; GFX11-NEXT:    v_dual_mov_b32 v22, s58 :: v_dual_mov_b32 v23, s59
; GFX11-NEXT:    v_dual_mov_b32 v24, s60 :: v_dual_mov_b32 v25, s61
; GFX11-NEXT:    v_dual_mov_b32 v26, s62 :: v_dual_mov_b32 v27, s63
; GFX11-NEXT:    v_dual_mov_b32 v28, s64 :: v_dual_mov_b32 v29, s65
; GFX11-NEXT:    v_dual_mov_b32 v30, s66 :: v_dual_mov_b32 v31, s67
; GFX11-NEXT:  .LBB13_5: ; %end
; GFX11-NEXT:    v_readlane_b32 s53, v32, 9
; GFX11-NEXT:    v_readlane_b32 s52, v32, 8
; GFX11-NEXT:    v_readlane_b32 s51, v32, 7
; GFX11-NEXT:    v_readlane_b32 s50, v32, 6
; GFX11-NEXT:    v_readlane_b32 s49, v32, 5
; GFX11-NEXT:    v_readlane_b32 s48, v32, 4
; GFX11-NEXT:    v_readlane_b32 s39, v32, 3
; GFX11-NEXT:    v_readlane_b32 s38, v32, 2
; GFX11-NEXT:    v_readlane_b32 s37, v32, 1
; GFX11-NEXT:    v_readlane_b32 s36, v32, 0
; GFX11-NEXT:    s_xor_saveexec_b32 s0, -1
; GFX11-NEXT:    scratch_load_b32 v32, off, s32 ; 4-byte Folded Reload
; GFX11-NEXT:    s_mov_b32 exec_lo, s0
; GFX11-NEXT:    s_waitcnt vmcnt(0)
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <9 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <9 x double> %a1 to <18 x float>
  br label %end

cmp.false:
  %a3 = bitcast <9 x double> %a to <18 x float>
  br label %end

end:
  %phi = phi <18 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x float> %phi
}

define inreg <36 x i16> @s_bitcast_v18f32_to_v36i16_inreg(<18 x float> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18f32_to_v36i16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_mov_b32_e32 v19, s16
; SI-NEXT:    v_mov_b32_e32 v18, s17
; SI-NEXT:    v_mov_b32_e32 v16, s18
; SI-NEXT:    v_mov_b32_e32 v15, s19
; SI-NEXT:    v_mov_b32_e32 v14, s20
; SI-NEXT:    v_mov_b32_e32 v13, s21
; SI-NEXT:    v_mov_b32_e32 v12, s22
; SI-NEXT:    v_mov_b32_e32 v11, s23
; SI-NEXT:    v_mov_b32_e32 v10, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v8, s26
; SI-NEXT:    v_mov_b32_e32 v7, s27
; SI-NEXT:    v_mov_b32_e32 v6, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v5, s29
; SI-NEXT:    s_cbranch_scc0 .LBB14_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_alignbit_b32 v17, v4, v3, 16
; SI-NEXT:    v_alignbit_b32 v20, v2, v1, 16
; SI-NEXT:    v_alignbit_b32 v21, v5, v6, 16
; SI-NEXT:    v_alignbit_b32 v22, v7, v8, 16
; SI-NEXT:    v_alignbit_b32 v25, v9, v10, 16
; SI-NEXT:    v_alignbit_b32 v27, v11, v12, 16
; SI-NEXT:    v_alignbit_b32 v29, v13, v14, 16
; SI-NEXT:    v_alignbit_b32 v31, v15, v16, 16
; SI-NEXT:    v_alignbit_b32 v33, v18, v19, 16
; SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v4
; SI-NEXT:    v_lshrrev_b32_e32 v24, 16, v2
; SI-NEXT:    v_lshrrev_b32_e32 v26, 16, v5
; SI-NEXT:    v_lshrrev_b32_e32 v28, 16, v7
; SI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; SI-NEXT:    v_lshrrev_b32_e32 v32, 16, v11
; SI-NEXT:    v_lshrrev_b32_e32 v34, 16, v13
; SI-NEXT:    v_lshrrev_b32_e32 v35, 16, v15
; SI-NEXT:    v_lshrrev_b32_e32 v36, 16, v18
; SI-NEXT:    s_cbranch_execnz .LBB14_3
; SI-NEXT:  .LBB14_2: ; %cmp.true
; SI-NEXT:    v_add_f32_e32 v18, 1.0, v18
; SI-NEXT:    v_add_f32_e32 v19, 1.0, v19
; SI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; SI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; SI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; SI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; SI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; SI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; SI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; SI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; SI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; SI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; SI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; SI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; SI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; SI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; SI-NEXT:    v_add_f32_e32 v4, 1.0, v4
; SI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; SI-NEXT:    v_alignbit_b32 v17, v4, v3, 16
; SI-NEXT:    v_alignbit_b32 v20, v2, v1, 16
; SI-NEXT:    v_alignbit_b32 v21, v5, v6, 16
; SI-NEXT:    v_alignbit_b32 v22, v7, v8, 16
; SI-NEXT:    v_alignbit_b32 v25, v9, v10, 16
; SI-NEXT:    v_alignbit_b32 v27, v11, v12, 16
; SI-NEXT:    v_alignbit_b32 v29, v13, v14, 16
; SI-NEXT:    v_alignbit_b32 v31, v15, v16, 16
; SI-NEXT:    v_alignbit_b32 v33, v18, v19, 16
; SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v4
; SI-NEXT:    v_lshrrev_b32_e32 v24, 16, v2
; SI-NEXT:    v_lshrrev_b32_e32 v26, 16, v5
; SI-NEXT:    v_lshrrev_b32_e32 v28, 16, v7
; SI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; SI-NEXT:    v_lshrrev_b32_e32 v32, 16, v11
; SI-NEXT:    v_lshrrev_b32_e32 v34, 16, v13
; SI-NEXT:    v_lshrrev_b32_e32 v35, 16, v15
; SI-NEXT:    v_lshrrev_b32_e32 v36, 16, v18
; SI-NEXT:  .LBB14_3: ; %end
; SI-NEXT:    v_and_b32_e32 v19, 0xffff, v19
; SI-NEXT:    v_lshlrev_b32_e32 v33, 16, v33
; SI-NEXT:    v_or_b32_e32 v19, v19, v33
; SI-NEXT:    buffer_store_dword v19, v0, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v36
; SI-NEXT:    v_or_b32_e32 v18, v18, v19
; SI-NEXT:    v_add_i32_e32 v19, vcc, 4, v0
; SI-NEXT:    buffer_store_dword v18, v19, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v18, 16, v31
; SI-NEXT:    v_or_b32_e32 v16, v16, v18
; SI-NEXT:    v_add_i32_e32 v18, vcc, 8, v0
; SI-NEXT:    buffer_store_dword v16, v18, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v35
; SI-NEXT:    v_or_b32_e32 v15, v15, v16
; SI-NEXT:    v_add_i32_e32 v16, vcc, 12, v0
; SI-NEXT:    buffer_store_dword v15, v16, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v14, 0xffff, v14
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v29
; SI-NEXT:    v_or_b32_e32 v14, v14, v15
; SI-NEXT:    v_add_i32_e32 v15, vcc, 16, v0
; SI-NEXT:    buffer_store_dword v14, v15, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v34
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 20, v0
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v27
; SI-NEXT:    v_or_b32_e32 v12, v12, v13
; SI-NEXT:    v_add_i32_e32 v13, vcc, 24, v0
; SI-NEXT:    buffer_store_dword v12, v13, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v32
; SI-NEXT:    v_or_b32_e32 v11, v11, v12
; SI-NEXT:    v_add_i32_e32 v12, vcc, 28, v0
; SI-NEXT:    buffer_store_dword v11, v12, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v25
; SI-NEXT:    v_or_b32_e32 v10, v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 32, v0
; SI-NEXT:    buffer_store_dword v10, v11, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v30
; SI-NEXT:    v_or_b32_e32 v9, v9, v10
; SI-NEXT:    v_add_i32_e32 v10, vcc, 36, v0
; SI-NEXT:    buffer_store_dword v9, v10, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v22
; SI-NEXT:    v_or_b32_e32 v8, v8, v9
; SI-NEXT:    v_add_i32_e32 v9, vcc, 40, v0
; SI-NEXT:    buffer_store_dword v8, v9, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v28
; SI-NEXT:    v_or_b32_e32 v7, v7, v8
; SI-NEXT:    v_add_i32_e32 v8, vcc, 44, v0
; SI-NEXT:    buffer_store_dword v7, v8, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v21
; SI-NEXT:    v_or_b32_e32 v6, v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 48, v0
; SI-NEXT:    buffer_store_dword v6, v7, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v26
; SI-NEXT:    v_or_b32_e32 v5, v5, v6
; SI-NEXT:    v_add_i32_e32 v6, vcc, 52, v0
; SI-NEXT:    buffer_store_dword v5, v6, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v20
; SI-NEXT:    v_or_b32_e32 v1, v1, v5
; SI-NEXT:    v_add_i32_e32 v5, vcc, 56, v0
; SI-NEXT:    buffer_store_dword v1, v5, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v2
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v24
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v2, vcc, 60, v0
; SI-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v3
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v17
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v2, vcc, 64, v0
; SI-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v4
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v23
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB14_4:
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr22
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr21
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    ; implicit-def: $vgpr20
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr17
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    s_branch .LBB14_2
;
; VI-LABEL: s_bitcast_v18f32_to_v36i16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v18, s16
; VI-NEXT:    v_mov_b32_e32 v17, s17
; VI-NEXT:    v_mov_b32_e32 v16, s18
; VI-NEXT:    v_mov_b32_e32 v15, s19
; VI-NEXT:    v_mov_b32_e32 v14, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB14_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:    s_cbranch_execnz .LBB14_3
; VI-NEXT:  .LBB14_2: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; VI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; VI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; VI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; VI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; VI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; VI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; VI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; VI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; VI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; VI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; VI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; VI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; VI-NEXT:    v_add_f32_e32 v18, 1.0, v18
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:  .LBB14_3: ; %end
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; VI-NEXT:    v_or_b32_sdwa v4, v14, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v34
; VI-NEXT:    v_or_b32_sdwa v5, v5, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v33
; VI-NEXT:    v_or_b32_sdwa v6, v6, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v32
; VI-NEXT:    v_or_b32_sdwa v7, v7, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v31
; VI-NEXT:    v_or_b32_sdwa v8, v8, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v30
; VI-NEXT:    v_or_b32_sdwa v9, v9, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v29
; VI-NEXT:    v_or_b32_sdwa v10, v10, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; VI-NEXT:    v_lshlrev_b32_e32 v20, 16, v20
; VI-NEXT:    v_or_b32_sdwa v11, v11, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v27
; VI-NEXT:    v_or_b32_sdwa v20, v18, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v18, 16, v21
; VI-NEXT:    v_or_b32_sdwa v12, v12, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v26
; VI-NEXT:    v_or_b32_sdwa v21, v17, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v17, 16, v35
; VI-NEXT:    v_or_b32_sdwa v13, v13, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v25
; VI-NEXT:    v_or_b32_sdwa v18, v16, v17 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v16, 16, v19
; VI-NEXT:    v_or_b32_sdwa v14, v0, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v24
; VI-NEXT:    v_or_b32_sdwa v19, v15, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v15, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v23
; VI-NEXT:    v_or_b32_sdwa v16, v2, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v22
; VI-NEXT:    v_or_b32_sdwa v17, v3, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, v20
; VI-NEXT:    v_mov_b32_e32 v1, v21
; VI-NEXT:    v_mov_b32_e32 v2, v18
; VI-NEXT:    v_mov_b32_e32 v3, v19
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB14_4:
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr35
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr34
; VI-NEXT:    ; implicit-def: $vgpr33
; VI-NEXT:    ; implicit-def: $vgpr32
; VI-NEXT:    ; implicit-def: $vgpr31
; VI-NEXT:    ; implicit-def: $vgpr30
; VI-NEXT:    ; implicit-def: $vgpr29
; VI-NEXT:    ; implicit-def: $vgpr28
; VI-NEXT:    ; implicit-def: $vgpr27
; VI-NEXT:    ; implicit-def: $vgpr26
; VI-NEXT:    ; implicit-def: $vgpr25
; VI-NEXT:    ; implicit-def: $vgpr24
; VI-NEXT:    ; implicit-def: $vgpr23
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    s_branch .LBB14_2
;
; GFX9-LABEL: s_bitcast_v18f32_to_v36i16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_mov_b32_e32 v18, s16
; GFX9-NEXT:    v_mov_b32_e32 v17, s17
; GFX9-NEXT:    v_mov_b32_e32 v16, s18
; GFX9-NEXT:    v_mov_b32_e32 v15, s19
; GFX9-NEXT:    v_mov_b32_e32 v14, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB14_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:    s_cbranch_execnz .LBB14_3
; GFX9-NEXT:  .LBB14_2: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:    v_add_f32_e32 v13, 1.0, v13
; GFX9-NEXT:    v_add_f32_e32 v12, 1.0, v12
; GFX9-NEXT:    v_add_f32_e32 v11, 1.0, v11
; GFX9-NEXT:    v_add_f32_e32 v10, 1.0, v10
; GFX9-NEXT:    v_add_f32_e32 v9, 1.0, v9
; GFX9-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GFX9-NEXT:    v_add_f32_e32 v7, 1.0, v7
; GFX9-NEXT:    v_add_f32_e32 v6, 1.0, v6
; GFX9-NEXT:    v_add_f32_e32 v5, 1.0, v5
; GFX9-NEXT:    v_add_f32_e32 v14, 1.0, v14
; GFX9-NEXT:    v_add_f32_e32 v15, 1.0, v15
; GFX9-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GFX9-NEXT:    v_add_f32_e32 v17, 1.0, v17
; GFX9-NEXT:    v_add_f32_e32 v18, 1.0, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:  .LBB14_3: ; %end
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v14
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX9-NEXT:    v_lshl_or_b32 v4, v4, 16, v14
; GFX9-NEXT:    v_lshl_or_b32 v14, v25, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v1
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX9-NEXT:    v_lshl_or_b32 v19, v19, 16, v15
; GFX9-NEXT:    v_lshl_or_b32 v15, v24, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v2
; GFX9-NEXT:    v_lshl_or_b32 v20, v20, 16, v18
; GFX9-NEXT:    v_lshl_or_b32 v21, v21, 16, v17
; GFX9-NEXT:    v_lshl_or_b32 v18, v35, 16, v16
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX9-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; GFX9-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; GFX9-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX9-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX9-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX9-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; GFX9-NEXT:    v_lshl_or_b32 v16, v23, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v3
; GFX9-NEXT:    v_lshl_or_b32 v5, v34, 16, v5
; GFX9-NEXT:    v_lshl_or_b32 v6, v33, 16, v6
; GFX9-NEXT:    v_lshl_or_b32 v7, v32, 16, v7
; GFX9-NEXT:    v_lshl_or_b32 v8, v31, 16, v8
; GFX9-NEXT:    v_lshl_or_b32 v9, v30, 16, v9
; GFX9-NEXT:    v_lshl_or_b32 v10, v29, 16, v10
; GFX9-NEXT:    v_lshl_or_b32 v11, v28, 16, v11
; GFX9-NEXT:    v_lshl_or_b32 v12, v27, 16, v12
; GFX9-NEXT:    v_lshl_or_b32 v13, v26, 16, v13
; GFX9-NEXT:    v_lshl_or_b32 v17, v22, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, v20
; GFX9-NEXT:    v_mov_b32_e32 v1, v21
; GFX9-NEXT:    v_mov_b32_e32 v2, v18
; GFX9-NEXT:    v_mov_b32_e32 v3, v19
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB14_4:
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr35
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr34
; GFX9-NEXT:    ; implicit-def: $vgpr33
; GFX9-NEXT:    ; implicit-def: $vgpr32
; GFX9-NEXT:    ; implicit-def: $vgpr31
; GFX9-NEXT:    ; implicit-def: $vgpr30
; GFX9-NEXT:    ; implicit-def: $vgpr29
; GFX9-NEXT:    ; implicit-def: $vgpr28
; GFX9-NEXT:    ; implicit-def: $vgpr27
; GFX9-NEXT:    ; implicit-def: $vgpr26
; GFX9-NEXT:    ; implicit-def: $vgpr25
; GFX9-NEXT:    ; implicit-def: $vgpr24
; GFX9-NEXT:    ; implicit-def: $vgpr23
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    s_branch .LBB14_2
;
; GFX11-LABEL: s_bitcast_v18f32_to_v36i16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB14_3
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s5, s29, 16
; GFX11-NEXT:    s_lshr_b32 s6, s28, 16
; GFX11-NEXT:    s_lshr_b32 s7, s27, 16
; GFX11-NEXT:    s_lshr_b32 s8, s26, 16
; GFX11-NEXT:    s_lshr_b32 s9, s25, 16
; GFX11-NEXT:    s_lshr_b32 s10, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s12, s22, 16
; GFX11-NEXT:    s_lshr_b32 s13, s21, 16
; GFX11-NEXT:    s_lshr_b32 s14, s20, 16
; GFX11-NEXT:    s_lshr_b32 s15, s19, 16
; GFX11-NEXT:    s_lshr_b32 s40, s18, 16
; GFX11-NEXT:    s_lshr_b32 s41, s17, 16
; GFX11-NEXT:    s_lshr_b32 s42, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB14_4
; GFX11-NEXT:  .LBB14_2: ; %cmp.true
; GFX11-NEXT:    v_add_f32_e64 v13, s29, 1.0
; GFX11-NEXT:    v_add_f32_e64 v14, s28, 1.0
; GFX11-NEXT:    v_add_f32_e64 v15, s27, 1.0
; GFX11-NEXT:    v_add_f32_e64 v16, s26, 1.0
; GFX11-NEXT:    v_add_f32_e64 v17, s25, 1.0
; GFX11-NEXT:    v_add_f32_e64 v8, s24, 1.0
; GFX11-NEXT:    v_add_f32_e64 v9, s23, 1.0
; GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; GFX11-NEXT:    v_add_f32_e64 v11, s21, 1.0
; GFX11-NEXT:    v_add_f32_e64 v12, s20, 1.0
; GFX11-NEXT:    v_add_f32_e64 v3, s19, 1.0
; GFX11-NEXT:    v_add_f32_e64 v4, s18, 1.0
; GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; GFX11-NEXT:    v_add_f32_e64 v6, s16, 1.0
; GFX11-NEXT:    v_add_f32_e64 v7, s3, 1.0
; GFX11-NEXT:    v_add_f32_e64 v0, s2, 1.0
; GFX11-NEXT:    v_add_f32_e64 v1, s1, 1.0
; GFX11-NEXT:    v_add_f32_e64 v2, s0, 1.0
; GFX11-NEXT:    v_lshrrev_b32_e32 v18, 16, v13
; GFX11-NEXT:    v_lshrrev_b32_e32 v19, 16, v14
; GFX11-NEXT:    v_lshrrev_b32_e32 v20, 16, v15
; GFX11-NEXT:    v_lshrrev_b32_e32 v21, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v22, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v23, 16, v8
; GFX11-NEXT:    v_lshrrev_b32_e32 v24, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; GFX11-NEXT:    v_lshrrev_b32_e32 v26, 16, v11
; GFX11-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX11-NEXT:    v_lshrrev_b32_e32 v28, 16, v3
; GFX11-NEXT:    v_lshrrev_b32_e32 v29, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX11-NEXT:    v_lshrrev_b32_e32 v31, 16, v6
; GFX11-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX11-NEXT:    v_lshrrev_b32_e32 v33, 16, v0
; GFX11-NEXT:    v_lshrrev_b32_e32 v34, 16, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v35, 16, v2
; GFX11-NEXT:    s_branch .LBB14_5
; GFX11-NEXT:  .LBB14_3:
; GFX11-NEXT:    ; implicit-def: $sgpr46
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    s_branch .LBB14_2
; GFX11-NEXT:  .LBB14_4:
; GFX11-NEXT:    v_dual_mov_b32 v2, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v0, s2 :: v_dual_mov_b32 v7, s3
; GFX11-NEXT:    v_dual_mov_b32 v6, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v4, s18 :: v_dual_mov_b32 v3, s19
; GFX11-NEXT:    v_dual_mov_b32 v12, s20 :: v_dual_mov_b32 v11, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v9, s23
; GFX11-NEXT:    v_dual_mov_b32 v8, s24 :: v_dual_mov_b32 v17, s25
; GFX11-NEXT:    v_dual_mov_b32 v16, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v14, s28 :: v_dual_mov_b32 v13, s29
; GFX11-NEXT:    v_dual_mov_b32 v35, s46 :: v_dual_mov_b32 v34, s45
; GFX11-NEXT:    v_dual_mov_b32 v33, s44 :: v_dual_mov_b32 v32, s43
; GFX11-NEXT:    v_dual_mov_b32 v31, s42 :: v_dual_mov_b32 v30, s41
; GFX11-NEXT:    v_dual_mov_b32 v29, s40 :: v_dual_mov_b32 v28, s15
; GFX11-NEXT:    v_dual_mov_b32 v27, s14 :: v_dual_mov_b32 v26, s13
; GFX11-NEXT:    v_dual_mov_b32 v25, s12 :: v_dual_mov_b32 v24, s11
; GFX11-NEXT:    v_dual_mov_b32 v23, s10 :: v_dual_mov_b32 v22, s9
; GFX11-NEXT:    v_dual_mov_b32 v21, s8 :: v_dual_mov_b32 v20, s7
; GFX11-NEXT:    v_dual_mov_b32 v19, s6 :: v_dual_mov_b32 v18, s5
; GFX11-NEXT:  .LBB14_5: ; %end
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX11-NEXT:    v_and_b32_e32 v36, 0xffff, v0
; GFX11-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshl_or_b32 v0, v35, 16, v2
; GFX11-NEXT:    v_lshl_or_b32 v1, v34, 16, v1
; GFX11-NEXT:    v_lshl_or_b32 v2, v33, 16, v36
; GFX11-NEXT:    v_and_b32_e32 v33, 0xffff, v4
; GFX11-NEXT:    v_and_b32_e32 v34, 0xffff, v3
; GFX11-NEXT:    v_lshl_or_b32 v3, v32, 16, v7
; GFX11-NEXT:    v_lshl_or_b32 v4, v31, 16, v6
; GFX11-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX11-NEXT:    v_lshl_or_b32 v6, v29, 16, v33
; GFX11-NEXT:    v_lshl_or_b32 v7, v28, 16, v34
; GFX11-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX11-NEXT:    v_and_b32_e32 v28, 0xffff, v9
; GFX11-NEXT:    v_and_b32_e32 v29, 0xffff, v8
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX11-NEXT:    v_lshl_or_b32 v8, v27, 16, v12
; GFX11-NEXT:    v_lshl_or_b32 v9, v26, 16, v11
; GFX11-NEXT:    v_lshl_or_b32 v11, v24, 16, v28
; GFX11-NEXT:    v_lshl_or_b32 v12, v23, 16, v29
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX11-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX11-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX11-NEXT:    v_and_b32_e32 v23, 0xffff, v14
; GFX11-NEXT:    v_and_b32_e32 v24, 0xffff, v13
; GFX11-NEXT:    v_lshl_or_b32 v5, v30, 16, v5
; GFX11-NEXT:    v_lshl_or_b32 v10, v25, 16, v10
; GFX11-NEXT:    v_lshl_or_b32 v13, v22, 16, v17
; GFX11-NEXT:    v_lshl_or_b32 v14, v21, 16, v16
; GFX11-NEXT:    v_lshl_or_b32 v15, v20, 16, v15
; GFX11-NEXT:    v_lshl_or_b32 v16, v19, 16, v23
; GFX11-NEXT:    v_lshl_or_b32 v17, v18, 16, v24
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <18 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <18 x float> %a1 to <36 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <18 x float> %a to <36 x i16>
  br label %end

end:
  %phi = phi <36 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x i16> %phi
}

define inreg <18 x float> @s_bitcast_v36i16_to_v18f32_inreg(<36 x i16> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36i16_to_v18f32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    v_mov_b32_e32 v32, v20
; SI-NEXT:    v_mov_b32_e32 v33, v18
; SI-NEXT:    v_mov_b32_e32 v34, v16
; SI-NEXT:    v_mov_b32_e32 v35, v14
; SI-NEXT:    v_mov_b32_e32 v36, v12
; SI-NEXT:    v_mov_b32_e32 v37, v10
; SI-NEXT:    v_mov_b32_e32 v38, v8
; SI-NEXT:    v_mov_b32_e32 v39, v6
; SI-NEXT:    v_mov_b32_e32 v48, v4
; SI-NEXT:    v_mov_b32_e32 v49, v2
; SI-NEXT:    v_mov_b32_e32 v50, v0
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v45, 16, v1
; SI-NEXT:    v_lshlrev_b32_e32 v44, 16, v3
; SI-NEXT:    v_lshlrev_b32_e32 v43, 16, v5
; SI-NEXT:    v_lshlrev_b32_e32 v42, 16, v7
; SI-NEXT:    v_lshlrev_b32_e32 v41, 16, v9
; SI-NEXT:    v_lshlrev_b32_e32 v40, 16, v11
; SI-NEXT:    v_lshlrev_b32_e32 v55, 16, v13
; SI-NEXT:    v_lshlrev_b32_e32 v54, 16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v53, 16, v17
; SI-NEXT:    v_lshlrev_b32_e32 v52, 16, v19
; SI-NEXT:    v_lshlrev_b32_e32 v51, 16, v21
; SI-NEXT:    s_cbranch_scc0 .LBB15_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v50
; SI-NEXT:    v_or_b32_e32 v7, v0, v45
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v49
; SI-NEXT:    v_or_b32_e32 v8, v0, v44
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v48
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    v_or_b32_e32 v9, v0, v43
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v39
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    v_or_b32_e32 v10, v0, v42
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v38
; SI-NEXT:    s_or_b32 s5, s5, s6
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    v_or_b32_e32 v11, v0, v41
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v37
; SI-NEXT:    s_or_b32 s6, s6, s7
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    v_or_b32_e32 v12, v0, v40
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v36
; SI-NEXT:    s_or_b32 s7, s7, s8
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    v_or_b32_e32 v13, v0, v55
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; SI-NEXT:    s_or_b32 s8, s8, s9
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    v_or_b32_e32 v14, v0, v54
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v34
; SI-NEXT:    s_or_b32 s9, s9, s10
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_or_b32_e32 v15, v0, v53
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; SI-NEXT:    s_or_b32 s10, s10, s11
; SI-NEXT:    v_or_b32_e32 v16, v0, v52
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; SI-NEXT:    v_or_b32_e32 v17, v0, v51
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:    s_cbranch_execnz .LBB15_3
; SI-NEXT:  .LBB15_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v50
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v45, v0
; SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v49
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v44, v0
; SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v48
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v43, v0
; SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v39
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v42, v0
; SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v38
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v41, v0
; SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v37
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v40, v0
; SI-NEXT:    v_add_i32_e32 v12, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v36
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v55, v0
; SI-NEXT:    v_add_i32_e32 v13, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v35
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    v_or_b32_e32 v0, v54, v0
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    v_add_i32_e32 v14, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v34
; SI-NEXT:    s_or_b32 s4, s5, s4
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s5, s6, s5
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    v_or_b32_e32 v0, v53, v0
; SI-NEXT:    s_or_b32 s6, s7, s6
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    v_add_i32_e32 v15, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v33
; SI-NEXT:    s_or_b32 s7, s8, s7
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s8, s9, s8
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    v_or_b32_e32 v0, v52, v0
; SI-NEXT:    s_or_b32 s9, s10, s9
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_add_i32_e32 v16, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v32
; SI-NEXT:    s_or_b32 s10, s11, s10
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s4, s4, 0x30000
; SI-NEXT:    s_add_i32 s5, s5, 0x30000
; SI-NEXT:    s_add_i32 s6, s6, 0x30000
; SI-NEXT:    s_add_i32 s7, s7, 0x30000
; SI-NEXT:    s_add_i32 s8, s8, 0x30000
; SI-NEXT:    s_add_i32 s9, s9, 0x30000
; SI-NEXT:    s_add_i32 s10, s10, 0x30000
; SI-NEXT:    v_or_b32_e32 v0, v51, v0
; SI-NEXT:    v_add_i32_e32 v17, vcc, 0x30000, v0
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:  .LBB15_3: ; %end
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB15_4:
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    s_branch .LBB15_2
;
; VI-LABEL: s_bitcast_v36i16_to_v18f32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s43, s29, 16
; VI-NEXT:    s_lshr_b32 s42, s28, 16
; VI-NEXT:    s_lshr_b32 s41, s27, 16
; VI-NEXT:    s_lshr_b32 s40, s26, 16
; VI-NEXT:    s_lshr_b32 s15, s25, 16
; VI-NEXT:    s_lshr_b32 s14, s24, 16
; VI-NEXT:    s_lshr_b32 s13, s23, 16
; VI-NEXT:    s_lshr_b32 s12, s22, 16
; VI-NEXT:    s_lshr_b32 s11, s21, 16
; VI-NEXT:    s_lshr_b32 s10, s20, 16
; VI-NEXT:    s_lshr_b32 s9, s19, 16
; VI-NEXT:    s_lshr_b32 s8, s18, 16
; VI-NEXT:    s_lshr_b32 s7, s17, 16
; VI-NEXT:    s_lshr_b32 s6, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v35, v1
; VI-NEXT:    v_mov_b32_e32 v34, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB15_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s6, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s7, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s8, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s9, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s10, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s11, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s12, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s13, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s14, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s15, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s40, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s41, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s42, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s43, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v34, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v35, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB15_3
; VI-NEXT:  .LBB15_2: ; %cmp.true
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_lshl_b32 s6, s6, 16
; VI-NEXT:    s_and_b32 s16, s16, 0xffff
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_lshl_b32 s7, s7, 16
; VI-NEXT:    s_or_b32 s6, s6, s16
; VI-NEXT:    s_and_b32 s16, s17, 0xffff
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_lshl_b32 s8, s8, 16
; VI-NEXT:    s_or_b32 s7, s7, s16
; VI-NEXT:    s_and_b32 s16, s18, 0xffff
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_lshl_b32 s9, s9, 16
; VI-NEXT:    s_or_b32 s8, s8, s16
; VI-NEXT:    s_and_b32 s16, s19, 0xffff
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s9, s9, s16
; VI-NEXT:    s_and_b32 s16, s20, 0xffff
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_or_b32 s10, s10, s16
; VI-NEXT:    s_and_b32 s16, s21, 0xffff
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_or_b32 s11, s11, s16
; VI-NEXT:    s_and_b32 s16, s22, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v35
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_or_b32 s12, s12, s16
; VI-NEXT:    s_and_b32 s16, s23, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_or_b32 s13, s13, s16
; VI-NEXT:    s_and_b32 s16, s24, 0xffff
; VI-NEXT:    v_add_u32_e32 v15, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v33
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_lshl_b32 s5, s42, 16
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s14, s14, s16
; VI-NEXT:    s_and_b32 s16, s25, 0xffff
; VI-NEXT:    s_and_b32 s18, s28, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_lshl_b32 s4, s43, 16
; VI-NEXT:    s_lshl_b32 s41, s41, 16
; VI-NEXT:    s_lshl_b32 s40, s40, 16
; VI-NEXT:    s_or_b32 s15, s15, s16
; VI-NEXT:    s_and_b32 s16, s26, 0xffff
; VI-NEXT:    s_and_b32 s17, s27, 0xffff
; VI-NEXT:    s_or_b32 s5, s5, s18
; VI-NEXT:    s_and_b32 s18, s29, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v3, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v34
; VI-NEXT:    v_add_u32_e32 v16, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v32
; VI-NEXT:    s_or_b32 s16, s40, s16
; VI-NEXT:    s_or_b32 s17, s41, s17
; VI-NEXT:    s_or_b32 s4, s4, s18
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s6, s6, 0x30000
; VI-NEXT:    s_add_i32 s7, s7, 0x30000
; VI-NEXT:    s_add_i32 s8, s8, 0x30000
; VI-NEXT:    s_add_i32 s9, s9, 0x30000
; VI-NEXT:    s_add_i32 s10, s10, 0x30000
; VI-NEXT:    s_add_i32 s11, s11, 0x30000
; VI-NEXT:    s_add_i32 s12, s12, 0x30000
; VI-NEXT:    s_add_i32 s13, s13, 0x30000
; VI-NEXT:    s_add_i32 s14, s14, 0x30000
; VI-NEXT:    s_add_i32 s15, s15, 0x30000
; VI-NEXT:    s_add_i32 s16, s16, 0x30000
; VI-NEXT:    s_add_i32 s17, s17, 0x30000
; VI-NEXT:    s_add_i32 s5, s5, 0x30000
; VI-NEXT:    s_add_i32 s4, s4, 0x30000
; VI-NEXT:    v_add_u32_e32 v14, vcc, 0x30000, v3
; VI-NEXT:    v_add_u32_e32 v17, vcc, 0x30000, v0
; VI-NEXT:    v_mov_b32_e32 v0, s6
; VI-NEXT:    v_mov_b32_e32 v1, s7
; VI-NEXT:    v_mov_b32_e32 v2, s8
; VI-NEXT:    v_mov_b32_e32 v3, s9
; VI-NEXT:    v_mov_b32_e32 v4, s10
; VI-NEXT:    v_mov_b32_e32 v5, s11
; VI-NEXT:    v_mov_b32_e32 v6, s12
; VI-NEXT:    v_mov_b32_e32 v7, s13
; VI-NEXT:    v_mov_b32_e32 v8, s14
; VI-NEXT:    v_mov_b32_e32 v9, s15
; VI-NEXT:    v_mov_b32_e32 v10, s16
; VI-NEXT:    v_mov_b32_e32 v11, s17
; VI-NEXT:    v_mov_b32_e32 v12, s5
; VI-NEXT:    v_mov_b32_e32 v13, s4
; VI-NEXT:  .LBB15_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB15_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB15_2
;
; GFX9-LABEL: s_bitcast_v36i16_to_v18f32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB15_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB15_3
; GFX9-NEXT:  .LBB15_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v0, v39, 16, v0
; GFX9-NEXT:    v_lshl_or_b32 v1, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_u16 v14, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v15, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, s6, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, s7, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, s8, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v3, s9, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v4, s10, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v5, s11, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v6, s12, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v7, s13, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v8, s14, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v9, s15, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v10, s16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v11, s17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v12, s18, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v13, s19, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v16, v16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v17, v17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB15_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB15_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB15_2
;
; GFX11-LABEL: s_bitcast_v36i16_to_v18f32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB15_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB15_4
; GFX11-NEXT:  .LBB15_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v0, s0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, s1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, s2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v3, s3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v4, s4, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v5, s5, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v6, s6, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v7, s7, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v8, s8, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v9, s9, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v10, s10, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v11, s11, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v12, s12, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v13, s13, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v14, s14, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v15, s15, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v16, s16, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v17, s17, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB15_3:
; GFX11-NEXT:    s_branch .LBB15_2
; GFX11-NEXT:  .LBB15_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <36 x i16> %a, splat (i16 3)
  %a2 = bitcast <36 x i16> %a1 to <18 x float>
  br label %end

cmp.false:
  %a3 = bitcast <36 x i16> %a to <18 x float>
  br label %end

end:
  %phi = phi <18 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x float> %phi
}

define inreg <36 x half> @s_bitcast_v18f32_to_v36f16_inreg(<18 x float> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v18f32_to_v36f16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_readfirstlane_b32 s8, v1
; SI-NEXT:    v_readfirstlane_b32 s7, v2
; SI-NEXT:    v_readfirstlane_b32 s6, v3
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_readfirstlane_b32 s9, v4
; SI-NEXT:    s_cbranch_scc0 .LBB16_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_lshr_b32 s4, s9, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; SI-NEXT:    s_lshr_b32 s4, s6, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v2, s4
; SI-NEXT:    s_lshr_b32 s4, s7, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v4, s4
; SI-NEXT:    s_lshr_b32 s4, s8, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v6, s4
; SI-NEXT:    s_lshr_b32 s4, s29, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v8, s4
; SI-NEXT:    s_lshr_b32 s4, s28, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v10, s4
; SI-NEXT:    s_lshr_b32 s4, s27, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v12, s4
; SI-NEXT:    s_lshr_b32 s4, s26, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; SI-NEXT:    s_lshr_b32 s4, s25, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; SI-NEXT:    s_lshr_b32 s4, s24, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; SI-NEXT:    s_lshr_b32 s4, s23, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; SI-NEXT:    s_lshr_b32 s4, s22, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; SI-NEXT:    s_lshr_b32 s4, s21, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v25, s4
; SI-NEXT:    s_lshr_b32 s4, s20, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v27, s4
; SI-NEXT:    s_lshr_b32 s4, s19, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v30, s4
; SI-NEXT:    s_lshr_b32 s4, s18, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v32, s4
; SI-NEXT:    s_lshr_b32 s4, s17, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v34, s4
; SI-NEXT:    s_lshr_b32 s4, s16, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v36, s4
; SI-NEXT:    v_cvt_f32_f16_e32 v3, s9
; SI-NEXT:    v_cvt_f32_f16_e32 v5, s6
; SI-NEXT:    v_cvt_f32_f16_e32 v7, s7
; SI-NEXT:    v_cvt_f32_f16_e32 v9, s8
; SI-NEXT:    v_cvt_f32_f16_e32 v11, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v13, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v14, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v16, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v22, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v24, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v26, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v28, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v29, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v31, s18
; SI-NEXT:    v_cvt_f32_f16_e32 v33, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v35, s16
; SI-NEXT:    s_cbranch_execnz .LBB16_3
; SI-NEXT:  .LBB16_2: ; %cmp.true
; SI-NEXT:    v_add_f32_e64 v1, s16, 1.0
; SI-NEXT:    v_add_f32_e64 v2, s17, 1.0
; SI-NEXT:    v_add_f32_e64 v4, s18, 1.0
; SI-NEXT:    v_add_f32_e64 v6, s19, 1.0
; SI-NEXT:    v_add_f32_e64 v8, s20, 1.0
; SI-NEXT:    v_add_f32_e64 v10, s21, 1.0
; SI-NEXT:    v_add_f32_e64 v12, s22, 1.0
; SI-NEXT:    v_add_f32_e64 v15, s23, 1.0
; SI-NEXT:    v_add_f32_e64 v17, s24, 1.0
; SI-NEXT:    v_add_f32_e64 v18, s25, 1.0
; SI-NEXT:    v_add_f32_e64 v16, s26, 1.0
; SI-NEXT:    v_add_f32_e64 v14, s27, 1.0
; SI-NEXT:    v_add_f32_e64 v13, s28, 1.0
; SI-NEXT:    v_add_f32_e64 v11, s29, 1.0
; SI-NEXT:    v_add_f32_e64 v9, s8, 1.0
; SI-NEXT:    v_add_f32_e64 v7, s7, 1.0
; SI-NEXT:    v_add_f32_e64 v5, s6, 1.0
; SI-NEXT:    v_add_f32_e64 v3, s9, 1.0
; SI-NEXT:    v_lshrrev_b32_e32 v36, 16, v1
; SI-NEXT:    v_lshrrev_b32_e32 v34, 16, v2
; SI-NEXT:    v_lshrrev_b32_e32 v32, 16, v4
; SI-NEXT:    v_lshrrev_b32_e32 v30, 16, v6
; SI-NEXT:    v_lshrrev_b32_e32 v27, 16, v8
; SI-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v12
; SI-NEXT:    v_lshrrev_b32_e32 v21, 16, v15
; SI-NEXT:    v_lshrrev_b32_e32 v19, 16, v17
; SI-NEXT:    v_lshrrev_b32_e32 v37, 16, v18
; SI-NEXT:    v_lshrrev_b32_e32 v38, 16, v16
; SI-NEXT:    v_lshrrev_b32_e32 v39, 16, v14
; SI-NEXT:    v_lshrrev_b32_e32 v48, 16, v13
; SI-NEXT:    v_lshrrev_b32_e32 v49, 16, v11
; SI-NEXT:    v_lshrrev_b32_e32 v50, 16, v9
; SI-NEXT:    v_lshrrev_b32_e32 v51, 16, v7
; SI-NEXT:    v_lshrrev_b32_e32 v52, 16, v5
; SI-NEXT:    v_lshrrev_b32_e32 v53, 16, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v16
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v20, v17
; SI-NEXT:    v_cvt_f32_f16_e32 v22, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v24, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v26, v10
; SI-NEXT:    v_cvt_f32_f16_e32 v28, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v29, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v31, v4
; SI-NEXT:    v_cvt_f32_f16_e32 v33, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v35, v1
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v53
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v52
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v51
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v50
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v49
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v48
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v39
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v38
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v37
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_cvt_f32_f16_e32 v21, v21
; SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v25, v25
; SI-NEXT:    v_cvt_f32_f16_e32 v27, v27
; SI-NEXT:    v_cvt_f32_f16_e32 v30, v30
; SI-NEXT:    v_cvt_f32_f16_e32 v32, v32
; SI-NEXT:    v_cvt_f32_f16_e32 v34, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v36, v36
; SI-NEXT:  .LBB16_3: ; %end
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v35, v35
; SI-NEXT:    v_cvt_f16_f32_e32 v34, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v33, v33
; SI-NEXT:    v_cvt_f16_f32_e32 v32, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v31
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v30
; SI-NEXT:    v_lshlrev_b32_e32 v36, 16, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v29
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v27
; SI-NEXT:    v_or_b32_e32 v35, v35, v36
; SI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v25
; SI-NEXT:    buffer_store_dword v35, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v35, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v33, v33, v34
; SI-NEXT:    v_lshlrev_b32_e32 v32, 16, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v23
; SI-NEXT:    buffer_store_dword v33, v35, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v33, vcc, 8, v0
; SI-NEXT:    v_or_b32_e32 v31, v31, v32
; SI-NEXT:    v_lshlrev_b32_e32 v30, 16, v30
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v24
; SI-NEXT:    v_cvt_f16_f32_e32 v21, v21
; SI-NEXT:    buffer_store_dword v31, v33, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v31, vcc, 12, v0
; SI-NEXT:    v_or_b32_e32 v29, v29, v30
; SI-NEXT:    v_lshlrev_b32_e32 v27, 16, v27
; SI-NEXT:    v_cvt_f16_f32_e32 v22, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    buffer_store_dword v29, v31, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v29, vcc, 16, v0
; SI-NEXT:    v_or_b32_e32 v27, v28, v27
; SI-NEXT:    v_lshlrev_b32_e32 v25, 16, v25
; SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    buffer_store_dword v27, v29, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v27, vcc, 20, v0
; SI-NEXT:    v_or_b32_e32 v25, v26, v25
; SI-NEXT:    v_lshlrev_b32_e32 v23, 16, v23
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    buffer_store_dword v25, v27, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v25, vcc, 24, v0
; SI-NEXT:    v_or_b32_e32 v23, v24, v23
; SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    buffer_store_dword v23, v25, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v23, vcc, 28, v0
; SI-NEXT:    v_or_b32_e32 v21, v22, v21
; SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    buffer_store_dword v21, v23, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v21, vcc, 32, v0
; SI-NEXT:    v_or_b32_e32 v19, v20, v19
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v17
; SI-NEXT:    buffer_store_dword v19, v21, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v19, vcc, 36, v0
; SI-NEXT:    v_or_b32_e32 v17, v18, v17
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    buffer_store_dword v17, v19, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v17, vcc, 40, v0
; SI-NEXT:    v_or_b32_e32 v15, v16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    buffer_store_dword v15, v17, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v15, vcc, 44, v0
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    buffer_store_dword v12, v15, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v13
; SI-NEXT:    v_add_i32_e32 v13, vcc, 48, v0
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_or_b32_e32 v10, v12, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    buffer_store_dword v10, v13, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 52, v0
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v8
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    buffer_store_dword v8, v11, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v9
; SI-NEXT:    v_add_i32_e32 v9, vcc, 56, v0
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    buffer_store_dword v6, v9, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 60, v0
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v6, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    buffer_store_dword v4, v7, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v5
; SI-NEXT:    v_add_i32_e32 v5, vcc, 64, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v2, v4, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    buffer_store_dword v2, v5, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v3
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB16_4:
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    ; implicit-def: $vgpr22
; SI-NEXT:    ; implicit-def: $vgpr21
; SI-NEXT:    ; implicit-def: $vgpr20
; SI-NEXT:    ; implicit-def: $vgpr19
; SI-NEXT:    ; implicit-def: $vgpr18
; SI-NEXT:    ; implicit-def: $vgpr17
; SI-NEXT:    ; implicit-def: $vgpr16
; SI-NEXT:    ; implicit-def: $vgpr15
; SI-NEXT:    ; implicit-def: $vgpr14
; SI-NEXT:    ; implicit-def: $vgpr12
; SI-NEXT:    ; implicit-def: $vgpr13
; SI-NEXT:    ; implicit-def: $vgpr10
; SI-NEXT:    ; implicit-def: $vgpr11
; SI-NEXT:    ; implicit-def: $vgpr8
; SI-NEXT:    ; implicit-def: $vgpr9
; SI-NEXT:    ; implicit-def: $vgpr6
; SI-NEXT:    ; implicit-def: $vgpr7
; SI-NEXT:    ; implicit-def: $vgpr4
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $vgpr2
; SI-NEXT:    ; implicit-def: $vgpr3
; SI-NEXT:    ; implicit-def: $vgpr1
; SI-NEXT:    s_branch .LBB16_2
;
; VI-LABEL: s_bitcast_v18f32_to_v36f16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v18, s16
; VI-NEXT:    v_mov_b32_e32 v17, s17
; VI-NEXT:    v_mov_b32_e32 v16, s18
; VI-NEXT:    v_mov_b32_e32 v15, s19
; VI-NEXT:    v_mov_b32_e32 v14, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB16_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:    s_cbranch_execnz .LBB16_3
; VI-NEXT:  .LBB16_2: ; %cmp.true
; VI-NEXT:    v_add_f32_e32 v3, 1.0, v3
; VI-NEXT:    v_add_f32_e32 v2, 1.0, v2
; VI-NEXT:    v_add_f32_e32 v1, 1.0, v1
; VI-NEXT:    v_add_f32_e32 v0, 1.0, v0
; VI-NEXT:    v_add_f32_e32 v13, 1.0, v13
; VI-NEXT:    v_add_f32_e32 v12, 1.0, v12
; VI-NEXT:    v_add_f32_e32 v11, 1.0, v11
; VI-NEXT:    v_add_f32_e32 v10, 1.0, v10
; VI-NEXT:    v_add_f32_e32 v9, 1.0, v9
; VI-NEXT:    v_add_f32_e32 v8, 1.0, v8
; VI-NEXT:    v_add_f32_e32 v7, 1.0, v7
; VI-NEXT:    v_add_f32_e32 v6, 1.0, v6
; VI-NEXT:    v_add_f32_e32 v5, 1.0, v5
; VI-NEXT:    v_add_f32_e32 v14, 1.0, v14
; VI-NEXT:    v_add_f32_e32 v15, 1.0, v15
; VI-NEXT:    v_add_f32_e32 v16, 1.0, v16
; VI-NEXT:    v_add_f32_e32 v17, 1.0, v17
; VI-NEXT:    v_add_f32_e32 v18, 1.0, v18
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:  .LBB16_3: ; %end
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; VI-NEXT:    v_or_b32_sdwa v4, v14, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v34
; VI-NEXT:    v_or_b32_sdwa v5, v5, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v33
; VI-NEXT:    v_or_b32_sdwa v6, v6, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v32
; VI-NEXT:    v_or_b32_sdwa v7, v7, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v31
; VI-NEXT:    v_or_b32_sdwa v8, v8, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v30
; VI-NEXT:    v_or_b32_sdwa v9, v9, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v29
; VI-NEXT:    v_or_b32_sdwa v10, v10, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; VI-NEXT:    v_lshlrev_b32_e32 v20, 16, v20
; VI-NEXT:    v_or_b32_sdwa v11, v11, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v27
; VI-NEXT:    v_or_b32_sdwa v20, v18, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v18, 16, v21
; VI-NEXT:    v_or_b32_sdwa v12, v12, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v26
; VI-NEXT:    v_or_b32_sdwa v21, v17, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v17, 16, v35
; VI-NEXT:    v_or_b32_sdwa v13, v13, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v25
; VI-NEXT:    v_or_b32_sdwa v18, v16, v17 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v16, 16, v19
; VI-NEXT:    v_or_b32_sdwa v14, v0, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v24
; VI-NEXT:    v_or_b32_sdwa v19, v15, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v15, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v23
; VI-NEXT:    v_or_b32_sdwa v16, v2, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v22
; VI-NEXT:    v_or_b32_sdwa v17, v3, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, v20
; VI-NEXT:    v_mov_b32_e32 v1, v21
; VI-NEXT:    v_mov_b32_e32 v2, v18
; VI-NEXT:    v_mov_b32_e32 v3, v19
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB16_4:
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr35
; VI-NEXT:    ; implicit-def: $vgpr19
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr34
; VI-NEXT:    ; implicit-def: $vgpr33
; VI-NEXT:    ; implicit-def: $vgpr32
; VI-NEXT:    ; implicit-def: $vgpr31
; VI-NEXT:    ; implicit-def: $vgpr30
; VI-NEXT:    ; implicit-def: $vgpr29
; VI-NEXT:    ; implicit-def: $vgpr28
; VI-NEXT:    ; implicit-def: $vgpr27
; VI-NEXT:    ; implicit-def: $vgpr26
; VI-NEXT:    ; implicit-def: $vgpr25
; VI-NEXT:    ; implicit-def: $vgpr24
; VI-NEXT:    ; implicit-def: $vgpr23
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    s_branch .LBB16_2
;
; GFX9-LABEL: s_bitcast_v18f32_to_v36f16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_mov_b32_e32 v18, s16
; GFX9-NEXT:    v_mov_b32_e32 v17, s17
; GFX9-NEXT:    v_mov_b32_e32 v16, s18
; GFX9-NEXT:    v_mov_b32_e32 v15, s19
; GFX9-NEXT:    v_mov_b32_e32 v14, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB16_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:    s_cbranch_execnz .LBB16_3
; GFX9-NEXT:  .LBB16_2: ; %cmp.true
; GFX9-NEXT:    v_add_f32_e32 v3, 1.0, v3
; GFX9-NEXT:    v_add_f32_e32 v2, 1.0, v2
; GFX9-NEXT:    v_add_f32_e32 v1, 1.0, v1
; GFX9-NEXT:    v_add_f32_e32 v0, 1.0, v0
; GFX9-NEXT:    v_add_f32_e32 v13, 1.0, v13
; GFX9-NEXT:    v_add_f32_e32 v12, 1.0, v12
; GFX9-NEXT:    v_add_f32_e32 v11, 1.0, v11
; GFX9-NEXT:    v_add_f32_e32 v10, 1.0, v10
; GFX9-NEXT:    v_add_f32_e32 v9, 1.0, v9
; GFX9-NEXT:    v_add_f32_e32 v8, 1.0, v8
; GFX9-NEXT:    v_add_f32_e32 v7, 1.0, v7
; GFX9-NEXT:    v_add_f32_e32 v6, 1.0, v6
; GFX9-NEXT:    v_add_f32_e32 v5, 1.0, v5
; GFX9-NEXT:    v_add_f32_e32 v14, 1.0, v14
; GFX9-NEXT:    v_add_f32_e32 v15, 1.0, v15
; GFX9-NEXT:    v_add_f32_e32 v16, 1.0, v16
; GFX9-NEXT:    v_add_f32_e32 v17, 1.0, v17
; GFX9-NEXT:    v_add_f32_e32 v18, 1.0, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v19, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:  .LBB16_3: ; %end
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v14
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX9-NEXT:    v_lshl_or_b32 v4, v4, 16, v14
; GFX9-NEXT:    v_lshl_or_b32 v14, v25, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v1
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX9-NEXT:    v_lshl_or_b32 v19, v19, 16, v15
; GFX9-NEXT:    v_lshl_or_b32 v15, v24, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v2
; GFX9-NEXT:    v_lshl_or_b32 v20, v20, 16, v18
; GFX9-NEXT:    v_lshl_or_b32 v21, v21, 16, v17
; GFX9-NEXT:    v_lshl_or_b32 v18, v35, 16, v16
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX9-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; GFX9-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; GFX9-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX9-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX9-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX9-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; GFX9-NEXT:    v_lshl_or_b32 v16, v23, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v3
; GFX9-NEXT:    v_lshl_or_b32 v5, v34, 16, v5
; GFX9-NEXT:    v_lshl_or_b32 v6, v33, 16, v6
; GFX9-NEXT:    v_lshl_or_b32 v7, v32, 16, v7
; GFX9-NEXT:    v_lshl_or_b32 v8, v31, 16, v8
; GFX9-NEXT:    v_lshl_or_b32 v9, v30, 16, v9
; GFX9-NEXT:    v_lshl_or_b32 v10, v29, 16, v10
; GFX9-NEXT:    v_lshl_or_b32 v11, v28, 16, v11
; GFX9-NEXT:    v_lshl_or_b32 v12, v27, 16, v12
; GFX9-NEXT:    v_lshl_or_b32 v13, v26, 16, v13
; GFX9-NEXT:    v_lshl_or_b32 v17, v22, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, v20
; GFX9-NEXT:    v_mov_b32_e32 v1, v21
; GFX9-NEXT:    v_mov_b32_e32 v2, v18
; GFX9-NEXT:    v_mov_b32_e32 v3, v19
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB16_4:
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr35
; GFX9-NEXT:    ; implicit-def: $vgpr19
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr34
; GFX9-NEXT:    ; implicit-def: $vgpr33
; GFX9-NEXT:    ; implicit-def: $vgpr32
; GFX9-NEXT:    ; implicit-def: $vgpr31
; GFX9-NEXT:    ; implicit-def: $vgpr30
; GFX9-NEXT:    ; implicit-def: $vgpr29
; GFX9-NEXT:    ; implicit-def: $vgpr28
; GFX9-NEXT:    ; implicit-def: $vgpr27
; GFX9-NEXT:    ; implicit-def: $vgpr26
; GFX9-NEXT:    ; implicit-def: $vgpr25
; GFX9-NEXT:    ; implicit-def: $vgpr24
; GFX9-NEXT:    ; implicit-def: $vgpr23
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    s_branch .LBB16_2
;
; GFX11-LABEL: s_bitcast_v18f32_to_v36f16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB16_3
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s5, s29, 16
; GFX11-NEXT:    s_lshr_b32 s6, s28, 16
; GFX11-NEXT:    s_lshr_b32 s7, s27, 16
; GFX11-NEXT:    s_lshr_b32 s8, s26, 16
; GFX11-NEXT:    s_lshr_b32 s9, s25, 16
; GFX11-NEXT:    s_lshr_b32 s10, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s12, s22, 16
; GFX11-NEXT:    s_lshr_b32 s13, s21, 16
; GFX11-NEXT:    s_lshr_b32 s14, s20, 16
; GFX11-NEXT:    s_lshr_b32 s15, s19, 16
; GFX11-NEXT:    s_lshr_b32 s40, s18, 16
; GFX11-NEXT:    s_lshr_b32 s41, s17, 16
; GFX11-NEXT:    s_lshr_b32 s42, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB16_4
; GFX11-NEXT:  .LBB16_2: ; %cmp.true
; GFX11-NEXT:    v_add_f32_e64 v13, s29, 1.0
; GFX11-NEXT:    v_add_f32_e64 v14, s28, 1.0
; GFX11-NEXT:    v_add_f32_e64 v15, s27, 1.0
; GFX11-NEXT:    v_add_f32_e64 v16, s26, 1.0
; GFX11-NEXT:    v_add_f32_e64 v17, s25, 1.0
; GFX11-NEXT:    v_add_f32_e64 v8, s24, 1.0
; GFX11-NEXT:    v_add_f32_e64 v9, s23, 1.0
; GFX11-NEXT:    v_add_f32_e64 v10, s22, 1.0
; GFX11-NEXT:    v_add_f32_e64 v11, s21, 1.0
; GFX11-NEXT:    v_add_f32_e64 v12, s20, 1.0
; GFX11-NEXT:    v_add_f32_e64 v3, s19, 1.0
; GFX11-NEXT:    v_add_f32_e64 v4, s18, 1.0
; GFX11-NEXT:    v_add_f32_e64 v5, s17, 1.0
; GFX11-NEXT:    v_add_f32_e64 v6, s16, 1.0
; GFX11-NEXT:    v_add_f32_e64 v7, s3, 1.0
; GFX11-NEXT:    v_add_f32_e64 v0, s2, 1.0
; GFX11-NEXT:    v_add_f32_e64 v1, s1, 1.0
; GFX11-NEXT:    v_add_f32_e64 v2, s0, 1.0
; GFX11-NEXT:    v_lshrrev_b32_e32 v18, 16, v13
; GFX11-NEXT:    v_lshrrev_b32_e32 v19, 16, v14
; GFX11-NEXT:    v_lshrrev_b32_e32 v20, 16, v15
; GFX11-NEXT:    v_lshrrev_b32_e32 v21, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v22, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v23, 16, v8
; GFX11-NEXT:    v_lshrrev_b32_e32 v24, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; GFX11-NEXT:    v_lshrrev_b32_e32 v26, 16, v11
; GFX11-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX11-NEXT:    v_lshrrev_b32_e32 v28, 16, v3
; GFX11-NEXT:    v_lshrrev_b32_e32 v29, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX11-NEXT:    v_lshrrev_b32_e32 v31, 16, v6
; GFX11-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX11-NEXT:    v_lshrrev_b32_e32 v33, 16, v0
; GFX11-NEXT:    v_lshrrev_b32_e32 v34, 16, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v35, 16, v2
; GFX11-NEXT:    s_branch .LBB16_5
; GFX11-NEXT:  .LBB16_3:
; GFX11-NEXT:    ; implicit-def: $sgpr46
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    s_branch .LBB16_2
; GFX11-NEXT:  .LBB16_4:
; GFX11-NEXT:    v_dual_mov_b32 v2, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v0, s2 :: v_dual_mov_b32 v7, s3
; GFX11-NEXT:    v_dual_mov_b32 v6, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v4, s18 :: v_dual_mov_b32 v3, s19
; GFX11-NEXT:    v_dual_mov_b32 v12, s20 :: v_dual_mov_b32 v11, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v9, s23
; GFX11-NEXT:    v_dual_mov_b32 v8, s24 :: v_dual_mov_b32 v17, s25
; GFX11-NEXT:    v_dual_mov_b32 v16, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v14, s28 :: v_dual_mov_b32 v13, s29
; GFX11-NEXT:    v_dual_mov_b32 v35, s46 :: v_dual_mov_b32 v34, s45
; GFX11-NEXT:    v_dual_mov_b32 v33, s44 :: v_dual_mov_b32 v32, s43
; GFX11-NEXT:    v_dual_mov_b32 v31, s42 :: v_dual_mov_b32 v30, s41
; GFX11-NEXT:    v_dual_mov_b32 v29, s40 :: v_dual_mov_b32 v28, s15
; GFX11-NEXT:    v_dual_mov_b32 v27, s14 :: v_dual_mov_b32 v26, s13
; GFX11-NEXT:    v_dual_mov_b32 v25, s12 :: v_dual_mov_b32 v24, s11
; GFX11-NEXT:    v_dual_mov_b32 v23, s10 :: v_dual_mov_b32 v22, s9
; GFX11-NEXT:    v_dual_mov_b32 v21, s8 :: v_dual_mov_b32 v20, s7
; GFX11-NEXT:    v_dual_mov_b32 v19, s6 :: v_dual_mov_b32 v18, s5
; GFX11-NEXT:  .LBB16_5: ; %end
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX11-NEXT:    v_and_b32_e32 v36, 0xffff, v0
; GFX11-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshl_or_b32 v0, v35, 16, v2
; GFX11-NEXT:    v_lshl_or_b32 v1, v34, 16, v1
; GFX11-NEXT:    v_lshl_or_b32 v2, v33, 16, v36
; GFX11-NEXT:    v_and_b32_e32 v33, 0xffff, v4
; GFX11-NEXT:    v_and_b32_e32 v34, 0xffff, v3
; GFX11-NEXT:    v_lshl_or_b32 v3, v32, 16, v7
; GFX11-NEXT:    v_lshl_or_b32 v4, v31, 16, v6
; GFX11-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX11-NEXT:    v_lshl_or_b32 v6, v29, 16, v33
; GFX11-NEXT:    v_lshl_or_b32 v7, v28, 16, v34
; GFX11-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX11-NEXT:    v_and_b32_e32 v28, 0xffff, v9
; GFX11-NEXT:    v_and_b32_e32 v29, 0xffff, v8
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX11-NEXT:    v_lshl_or_b32 v8, v27, 16, v12
; GFX11-NEXT:    v_lshl_or_b32 v9, v26, 16, v11
; GFX11-NEXT:    v_lshl_or_b32 v11, v24, 16, v28
; GFX11-NEXT:    v_lshl_or_b32 v12, v23, 16, v29
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX11-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX11-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX11-NEXT:    v_and_b32_e32 v23, 0xffff, v14
; GFX11-NEXT:    v_and_b32_e32 v24, 0xffff, v13
; GFX11-NEXT:    v_lshl_or_b32 v5, v30, 16, v5
; GFX11-NEXT:    v_lshl_or_b32 v10, v25, 16, v10
; GFX11-NEXT:    v_lshl_or_b32 v13, v22, 16, v17
; GFX11-NEXT:    v_lshl_or_b32 v14, v21, 16, v16
; GFX11-NEXT:    v_lshl_or_b32 v15, v20, 16, v15
; GFX11-NEXT:    v_lshl_or_b32 v16, v19, 16, v23
; GFX11-NEXT:    v_lshl_or_b32 v17, v18, 16, v24
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <18 x float> %a, splat (float 1.000000e+00)
  %a2 = bitcast <18 x float> %a1 to <36 x half>
  br label %end

cmp.false:
  %a3 = bitcast <18 x float> %a to <36 x half>
  br label %end

end:
  %phi = phi <36 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x half> %phi
}

define inreg <18 x float> @s_bitcast_v36f16_to_v18f32_inreg(<36 x half> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36f16_to_v18f32_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v63, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(6)
; SI-NEXT:    v_cvt_f16_f32_e32 v57, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v56, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v47, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v51, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v50, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v49, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v48, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v39, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v38, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v37, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v35, s17
; SI-NEXT:    v_cvt_f16_f32_e32 v34, s16
; SI-NEXT:    s_waitcnt expcnt(1)
; SI-NEXT:    v_cvt_f16_f32_e32 v62, s19
; SI-NEXT:    v_cvt_f16_f32_e32 v33, s18
; SI-NEXT:    v_cvt_f16_f32_e32 v60, s21
; SI-NEXT:    v_cvt_f16_f32_e32 v61, s20
; SI-NEXT:    v_cvt_f16_f32_e32 v44, s23
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v63, s22
; SI-NEXT:    v_cvt_f16_f32_e32 v42, s25
; SI-NEXT:    v_cvt_f16_f32_e32 v41, s24
; SI-NEXT:    v_cvt_f16_f32_e32 v40, s27
; SI-NEXT:    v_cvt_f16_f32_e32 v55, s26
; SI-NEXT:    v_cvt_f16_f32_e32 v59, s29
; SI-NEXT:    v_cvt_f16_f32_e32 v58, s28
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_cbranch_scc0 .LBB17_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v35
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v62
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v60
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v44
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v42
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v40
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v59
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v57
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v47
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v50
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v48
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v38
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v36
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v30
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v26
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v0, v34, v0
; SI-NEXT:    v_or_b32_e32 v1, v33, v1
; SI-NEXT:    v_or_b32_e32 v2, v61, v2
; SI-NEXT:    v_or_b32_e32 v3, v63, v3
; SI-NEXT:    v_or_b32_e32 v4, v41, v4
; SI-NEXT:    v_or_b32_e32 v5, v55, v5
; SI-NEXT:    v_or_b32_e32 v6, v58, v6
; SI-NEXT:    v_or_b32_e32 v7, v56, v7
; SI-NEXT:    v_or_b32_e32 v8, v51, v8
; SI-NEXT:    v_or_b32_e32 v9, v49, v9
; SI-NEXT:    v_or_b32_e32 v10, v39, v10
; SI-NEXT:    v_or_b32_e32 v11, v37, v11
; SI-NEXT:    v_or_b32_e32 v12, v31, v12
; SI-NEXT:    v_or_b32_e32 v13, v29, v13
; SI-NEXT:    v_or_b32_e32 v14, v27, v14
; SI-NEXT:    v_or_b32_e32 v15, v25, v15
; SI-NEXT:    v_or_b32_e32 v16, v23, v16
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:    s_cbranch_execnz .LBB17_3
; SI-NEXT:  .LBB17_2: ; %cmp.true
; SI-NEXT:    v_cvt_f32_f16_e32 v0, v35
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v62
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v33
; SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v0, v1, v0
; SI-NEXT:    v_or_b32_e32 v1, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v60
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v61
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v63
; SI-NEXT:    s_waitcnt vmcnt(2)
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v41
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_or_b32_e32 v2, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v44
; SI-NEXT:    s_waitcnt vmcnt(1)
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v40
; SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v55
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; SI-NEXT:    v_or_b32_e32 v3, v4, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v42
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v58
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v47
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v5, v4
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v59
; SI-NEXT:    v_or_b32_e32 v5, v7, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v57
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v56
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v51
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v49
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_or_b32_e32 v7, v8, v7
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v50
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v48
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v38
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v9, v11, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v39
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v37
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v31
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v28
; SI-NEXT:    v_or_b32_e32 v10, v11, v10
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v36
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_or_b32_e32 v11, v13, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v30
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v29
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v27
; SI-NEXT:    v_or_b32_e32 v13, v14, v13
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v26
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v25
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_or_b32_e32 v14, v16, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    v_or_b32_e32 v15, v17, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_add_f32_e32 v18, 0x38000000, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_add_f32_e32 v19, 0x38000000, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v16
; SI-NEXT:    v_or_b32_e32 v16, v17, v16
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:  .LBB17_3: ; %end
; SI-NEXT:    buffer_load_dword v63, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB17_4:
; SI-NEXT:    buffer_store_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v55, v36
; SI-NEXT:    v_mov_b32_e32 v36, v19
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v40, v37
; SI-NEXT:    v_mov_b32_e32 v37, v18
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v41, v38
; SI-NEXT:    v_mov_b32_e32 v38, v23
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v42, v39
; SI-NEXT:    v_mov_b32_e32 v39, v24
; SI-NEXT:    v_mov_b32_e32 v43, v48
; SI-NEXT:    v_mov_b32_e32 v48, v25
; SI-NEXT:    v_mov_b32_e32 v32, v44
; SI-NEXT:    v_mov_b32_e32 v44, v49
; SI-NEXT:    v_mov_b32_e32 v49, v26
; SI-NEXT:    v_mov_b32_e32 v45, v50
; SI-NEXT:    v_mov_b32_e32 v50, v27
; SI-NEXT:    v_mov_b32_e32 v46, v51
; SI-NEXT:    v_mov_b32_e32 v51, v28
; SI-NEXT:    v_mov_b32_e32 v52, v29
; SI-NEXT:    v_mov_b32_e32 v53, v30
; SI-NEXT:    v_mov_b32_e32 v54, v31
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    v_mov_b32_e32 v24, v39
; SI-NEXT:    v_mov_b32_e32 v39, v42
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v23, v38
; SI-NEXT:    v_mov_b32_e32 v38, v41
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v18, v37
; SI-NEXT:    v_mov_b32_e32 v37, v40
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v19, v36
; SI-NEXT:    v_mov_b32_e32 v36, v55
; SI-NEXT:    buffer_load_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v31, v54
; SI-NEXT:    v_mov_b32_e32 v30, v53
; SI-NEXT:    v_mov_b32_e32 v29, v52
; SI-NEXT:    v_mov_b32_e32 v28, v51
; SI-NEXT:    v_mov_b32_e32 v51, v46
; SI-NEXT:    v_mov_b32_e32 v27, v50
; SI-NEXT:    v_mov_b32_e32 v50, v45
; SI-NEXT:    v_mov_b32_e32 v26, v49
; SI-NEXT:    v_mov_b32_e32 v49, v44
; SI-NEXT:    v_mov_b32_e32 v44, v32
; SI-NEXT:    v_mov_b32_e32 v25, v48
; SI-NEXT:    v_mov_b32_e32 v48, v43
; SI-NEXT:    s_branch .LBB17_2
;
; VI-LABEL: s_bitcast_v36f16_to_v18f32_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s6, s29, 16
; VI-NEXT:    s_lshr_b32 s7, s28, 16
; VI-NEXT:    s_lshr_b32 s8, s27, 16
; VI-NEXT:    s_lshr_b32 s9, s26, 16
; VI-NEXT:    s_lshr_b32 s10, s25, 16
; VI-NEXT:    s_lshr_b32 s11, s24, 16
; VI-NEXT:    s_lshr_b32 s12, s23, 16
; VI-NEXT:    s_lshr_b32 s13, s22, 16
; VI-NEXT:    s_lshr_b32 s14, s21, 16
; VI-NEXT:    s_lshr_b32 s15, s20, 16
; VI-NEXT:    s_lshr_b32 s40, s19, 16
; VI-NEXT:    s_lshr_b32 s41, s18, 16
; VI-NEXT:    s_lshr_b32 s42, s17, 16
; VI-NEXT:    s_lshr_b32 s43, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v34, v1
; VI-NEXT:    v_mov_b32_e32 v35, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB17_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s43, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s42, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s41, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s40, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s15, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s14, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s13, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s12, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s11, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s10, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s9, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s8, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s7, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s6, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v35, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v34, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB17_3
; VI-NEXT:  .LBB17_2: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v13, 0x200
; VI-NEXT:    v_mov_b32_e32 v0, s43
; VI-NEXT:    v_mov_b32_e32 v2, s42
; VI-NEXT:    v_add_f16_sdwa v0, v0, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, s16, v13
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s17, v13
; VI-NEXT:    v_or_b32_e32 v0, v1, v0
; VI-NEXT:    v_or_b32_e32 v1, v3, v2
; VI-NEXT:    v_mov_b32_e32 v2, s41
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s18, v13
; VI-NEXT:    v_or_b32_e32 v2, v3, v2
; VI-NEXT:    v_mov_b32_e32 v3, s40
; VI-NEXT:    v_add_f16_sdwa v3, v3, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v4, s19, v13
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_mov_b32_e32 v4, s15
; VI-NEXT:    v_add_f16_sdwa v4, v4, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v5, s20, v13
; VI-NEXT:    v_or_b32_e32 v4, v5, v4
; VI-NEXT:    v_mov_b32_e32 v5, s14
; VI-NEXT:    v_add_f16_sdwa v5, v5, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v6, s21, v13
; VI-NEXT:    v_or_b32_e32 v5, v6, v5
; VI-NEXT:    v_mov_b32_e32 v6, s13
; VI-NEXT:    v_add_f16_sdwa v6, v6, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v7, s22, v13
; VI-NEXT:    v_or_b32_e32 v6, v7, v6
; VI-NEXT:    v_mov_b32_e32 v7, s12
; VI-NEXT:    v_add_f16_sdwa v7, v7, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v8, s23, v13
; VI-NEXT:    v_or_b32_e32 v7, v8, v7
; VI-NEXT:    v_mov_b32_e32 v8, s11
; VI-NEXT:    v_add_f16_sdwa v8, v8, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v9, s24, v13
; VI-NEXT:    v_or_b32_e32 v8, v9, v8
; VI-NEXT:    v_mov_b32_e32 v9, s10
; VI-NEXT:    v_add_f16_sdwa v9, v9, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v10, s25, v13
; VI-NEXT:    v_or_b32_e32 v9, v10, v9
; VI-NEXT:    v_mov_b32_e32 v10, s9
; VI-NEXT:    v_add_f16_sdwa v10, v10, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v11, s26, v13
; VI-NEXT:    v_or_b32_e32 v10, v11, v10
; VI-NEXT:    v_mov_b32_e32 v11, s8
; VI-NEXT:    v_add_f16_sdwa v11, v11, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v12, s27, v13
; VI-NEXT:    v_or_b32_e32 v11, v12, v11
; VI-NEXT:    v_mov_b32_e32 v12, s7
; VI-NEXT:    v_add_f16_sdwa v12, v12, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v14, s28, v13
; VI-NEXT:    v_or_b32_e32 v12, v14, v12
; VI-NEXT:    v_mov_b32_e32 v14, s6
; VI-NEXT:    v_add_f16_sdwa v14, v14, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v13, s29, v13
; VI-NEXT:    v_mov_b32_e32 v17, 0x200
; VI-NEXT:    v_or_b32_e32 v13, v13, v14
; VI-NEXT:    v_add_f16_sdwa v14, v35, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v15, 0x200, v35
; VI-NEXT:    v_or_b32_e32 v14, v15, v14
; VI-NEXT:    v_add_f16_sdwa v15, v34, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v16, 0x200, v34
; VI-NEXT:    v_or_b32_e32 v15, v16, v15
; VI-NEXT:    v_add_f16_sdwa v16, v33, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v33
; VI-NEXT:    v_or_b32_e32 v16, v18, v16
; VI-NEXT:    v_add_f16_sdwa v17, v32, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v32
; VI-NEXT:    v_or_b32_e32 v17, v18, v17
; VI-NEXT:  .LBB17_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB17_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB17_2
;
; GFX9-LABEL: s_bitcast_v36f16_to_v18f32_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB17_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB17_3
; GFX9-NEXT:  .LBB17_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v15, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_mov_b32_e32 v13, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v14
; GFX9-NEXT:    s_movk_i32 s4, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v15
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_f16 v0, s6, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, s7, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, s8, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v3, s9, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v4, s10, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v5, s11, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v6, s12, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v7, s13, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v8, s14, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v9, s15, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v10, s16, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v11, s17, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v12, s18, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v13, s19, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v14, v14, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v15, v15, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v16, v16, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v17, v17, s4 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB17_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB17_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB17_2
;
; GFX11-LABEL: s_bitcast_v36f16_to_v18f32_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB17_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB17_4
; GFX11-NEXT:  .LBB17_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s0 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s4 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s5 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s6 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s7 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s8 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s9 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s10 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s11 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v12, 0x200, s12 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v13, 0x200, s13 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v14, 0x200, s14 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v15, 0x200, s15 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v16, 0x200, s16 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v17, 0x200, s17 op_sel_hi:[0,1]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB17_3:
; GFX11-NEXT:    s_branch .LBB17_2
; GFX11-NEXT:  .LBB17_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <36 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <36 x half> %a1 to <18 x float>
  br label %end

cmp.false:
  %a3 = bitcast <36 x half> %a to <18 x float>
  br label %end

end:
  %phi = phi <18 x float> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <18 x float> %phi
}

define inreg <9 x double> @s_bitcast_v9i64_to_v9f64_inreg(<9 x i64> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9i64_to_v9f64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB18_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB18_3
; SI-NEXT:  .LBB18_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v0
; SI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_addc_u32_e32 v5, vcc, 0, v5, vcc
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_addc_u32_e32 v7, vcc, 0, v7, vcc
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_addc_u32_e32 v9, vcc, 0, v9, vcc
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_addc_u32_e32 v11, vcc, 0, v11, vcc
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_addc_u32_e32 v13, vcc, 0, v13, vcc
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_addc_u32_e32 v15, vcc, 0, v15, vcc
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; SI-NEXT:  .LBB18_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB18_4:
; SI-NEXT:    s_branch .LBB18_2
;
; VI-LABEL: s_bitcast_v9i64_to_v9f64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB18_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB18_3
; VI-NEXT:  .LBB18_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v3, vcc
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_addc_u32_e32 v5, vcc, 0, v5, vcc
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_addc_u32_e32 v7, vcc, 0, v7, vcc
; VI-NEXT:    v_add_u32_e32 v8, vcc, 3, v8
; VI-NEXT:    v_addc_u32_e32 v9, vcc, 0, v9, vcc
; VI-NEXT:    v_add_u32_e32 v10, vcc, 3, v10
; VI-NEXT:    v_addc_u32_e32 v11, vcc, 0, v11, vcc
; VI-NEXT:    v_add_u32_e32 v12, vcc, 3, v12
; VI-NEXT:    v_addc_u32_e32 v13, vcc, 0, v13, vcc
; VI-NEXT:    v_add_u32_e32 v14, vcc, 3, v14
; VI-NEXT:    v_addc_u32_e32 v15, vcc, 0, v15, vcc
; VI-NEXT:    v_add_u32_e32 v16, vcc, 3, v16
; VI-NEXT:    v_addc_u32_e32 v17, vcc, 0, v17, vcc
; VI-NEXT:  .LBB18_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB18_4:
; VI-NEXT:    s_branch .LBB18_2
;
; GFX9-LABEL: s_bitcast_v9i64_to_v9f64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB18_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB18_3
; GFX9-NEXT:  .LBB18_2: ; %cmp.true
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, 3, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, 0, v1, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, 3, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, 0, v3, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v4, vcc, 3, v4
; GFX9-NEXT:    v_addc_co_u32_e32 v5, vcc, 0, v5, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v6, vcc, 3, v6
; GFX9-NEXT:    v_addc_co_u32_e32 v7, vcc, 0, v7, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v8, vcc, 3, v8
; GFX9-NEXT:    v_addc_co_u32_e32 v9, vcc, 0, v9, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v10, vcc, 3, v10
; GFX9-NEXT:    v_addc_co_u32_e32 v11, vcc, 0, v11, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v12, vcc, 3, v12
; GFX9-NEXT:    v_addc_co_u32_e32 v13, vcc, 0, v13, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v14, vcc, 3, v14
; GFX9-NEXT:    v_addc_co_u32_e32 v15, vcc, 0, v15, vcc
; GFX9-NEXT:    v_add_co_u32_e32 v16, vcc, 3, v16
; GFX9-NEXT:    v_addc_co_u32_e32 v17, vcc, 0, v17, vcc
; GFX9-NEXT:  .LBB18_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB18_4:
; GFX9-NEXT:    s_branch .LBB18_2
;
; GFX11-LABEL: s_bitcast_v9i64_to_v9f64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB18_4
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB18_3
; GFX11-NEXT:  .LBB18_2: ; %cmp.true
; GFX11-NEXT:    s_add_u32 s0, s0, 3
; GFX11-NEXT:    s_addc_u32 s1, s1, 0
; GFX11-NEXT:    s_add_u32 s2, s2, 3
; GFX11-NEXT:    s_addc_u32 s3, s3, 0
; GFX11-NEXT:    s_add_u32 s16, s16, 3
; GFX11-NEXT:    s_addc_u32 s17, s17, 0
; GFX11-NEXT:    s_add_u32 s18, s18, 3
; GFX11-NEXT:    s_addc_u32 s19, s19, 0
; GFX11-NEXT:    s_add_u32 s20, s20, 3
; GFX11-NEXT:    s_addc_u32 s21, s21, 0
; GFX11-NEXT:    s_add_u32 s22, s22, 3
; GFX11-NEXT:    s_addc_u32 s23, s23, 0
; GFX11-NEXT:    s_add_u32 s24, s24, 3
; GFX11-NEXT:    s_addc_u32 s25, s25, 0
; GFX11-NEXT:    s_add_u32 s26, s26, 3
; GFX11-NEXT:    s_addc_u32 s27, s27, 0
; GFX11-NEXT:    s_add_u32 s28, s28, 3
; GFX11-NEXT:    s_addc_u32 s29, s29, 0
; GFX11-NEXT:  .LBB18_3: ; %end
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s18 :: v_dual_mov_b32 v7, s19
; GFX11-NEXT:    v_dual_mov_b32 v8, s20 :: v_dual_mov_b32 v9, s21
; GFX11-NEXT:    v_dual_mov_b32 v10, s22 :: v_dual_mov_b32 v11, s23
; GFX11-NEXT:    v_dual_mov_b32 v12, s24 :: v_dual_mov_b32 v13, s25
; GFX11-NEXT:    v_dual_mov_b32 v14, s26 :: v_dual_mov_b32 v15, s27
; GFX11-NEXT:    v_dual_mov_b32 v16, s28 :: v_dual_mov_b32 v17, s29
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB18_4:
; GFX11-NEXT:    s_branch .LBB18_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <9 x i64> %a, splat (i64 3)
  %a2 = bitcast <9 x i64> %a1 to <9 x double>
  br label %end

cmp.false:
  %a3 = bitcast <9 x i64> %a to <9 x double>
  br label %end

end:
  %phi = phi <9 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x double> %phi
}

define inreg <9 x i64> @s_bitcast_v9f64_to_v9i64_inreg(<9 x double> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9f64_to_v9i64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_mov_b32_e32 v13, v4
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; SI-NEXT:    v_mov_b32_e32 v17, v3
; SI-NEXT:    v_mov_b32_e32 v16, v2
; SI-NEXT:    v_mov_b32_e32 v15, v1
; SI-NEXT:    v_mov_b32_e32 v14, v0
; SI-NEXT:    v_mov_b32_e32 v0, s16
; SI-NEXT:    v_mov_b32_e32 v1, s17
; SI-NEXT:    v_mov_b32_e32 v2, s18
; SI-NEXT:    v_mov_b32_e32 v3, s19
; SI-NEXT:    v_mov_b32_e32 v4, s20
; SI-NEXT:    v_mov_b32_e32 v5, s21
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s23
; SI-NEXT:    v_mov_b32_e32 v8, s24
; SI-NEXT:    v_mov_b32_e32 v9, s25
; SI-NEXT:    v_mov_b32_e32 v10, s26
; SI-NEXT:    v_mov_b32_e32 v11, s27
; SI-NEXT:    v_mov_b32_e32 v12, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v13, s29
; SI-NEXT:    s_cbranch_scc0 .LBB19_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB19_3
; SI-NEXT:  .LBB19_2: ; %cmp.true
; SI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; SI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; SI-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; SI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; SI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; SI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; SI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; SI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; SI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; SI-NEXT:  .LBB19_3: ; %end
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB19_4:
; SI-NEXT:    s_branch .LBB19_2
;
; VI-LABEL: s_bitcast_v9f64_to_v9i64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v13, v4
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; VI-NEXT:    v_mov_b32_e32 v17, v3
; VI-NEXT:    v_mov_b32_e32 v16, v2
; VI-NEXT:    v_mov_b32_e32 v15, v1
; VI-NEXT:    v_mov_b32_e32 v14, v0
; VI-NEXT:    v_mov_b32_e32 v0, s16
; VI-NEXT:    v_mov_b32_e32 v1, s17
; VI-NEXT:    v_mov_b32_e32 v2, s18
; VI-NEXT:    v_mov_b32_e32 v3, s19
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB19_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB19_3
; VI-NEXT:  .LBB19_2: ; %cmp.true
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; VI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; VI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; VI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; VI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; VI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; VI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; VI-NEXT:  .LBB19_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB19_4:
; VI-NEXT:    s_branch .LBB19_2
;
; GFX9-LABEL: s_bitcast_v9f64_to_v9i64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v13, v4
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v13
; GFX9-NEXT:    v_mov_b32_e32 v17, v3
; GFX9-NEXT:    v_mov_b32_e32 v16, v2
; GFX9-NEXT:    v_mov_b32_e32 v15, v1
; GFX9-NEXT:    v_mov_b32_e32 v14, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s16
; GFX9-NEXT:    v_mov_b32_e32 v1, s17
; GFX9-NEXT:    v_mov_b32_e32 v2, s18
; GFX9-NEXT:    v_mov_b32_e32 v3, s19
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB19_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB19_3
; GFX9-NEXT:  .LBB19_2: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[4:5], v[4:5], 1.0
; GFX9-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; GFX9-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; GFX9-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; GFX9-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; GFX9-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; GFX9-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX9-NEXT:  .LBB19_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB19_4:
; GFX9-NEXT:    s_branch .LBB19_2
;
; GFX11-LABEL: s_bitcast_v9f64_to_v9i64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    s_xor_saveexec_b32 s4, -1
; GFX11-NEXT:    scratch_store_b32 off, v32, s32 ; 4-byte Folded Spill
; GFX11-NEXT:    s_mov_b32 exec_lo, s4
; GFX11-NEXT:    v_writelane_b32 v32, s36, 0
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s47, s23
; GFX11-NEXT:    s_mov_b32 s46, s22
; GFX11-NEXT:    s_mov_b32 s45, s21
; GFX11-NEXT:    v_writelane_b32 v32, s37, 1
; GFX11-NEXT:    s_mov_b32 s44, s20
; GFX11-NEXT:    s_mov_b32 s43, s19
; GFX11-NEXT:    s_mov_b32 s42, s18
; GFX11-NEXT:    s_mov_b32 s41, s17
; GFX11-NEXT:    v_writelane_b32 v32, s38, 2
; GFX11-NEXT:    s_mov_b32 s40, s16
; GFX11-NEXT:    s_mov_b32 s38, s2
; GFX11-NEXT:    s_mov_b32 s37, s1
; GFX11-NEXT:    s_mov_b32 s36, s0
; GFX11-NEXT:    v_writelane_b32 v32, s39, 3
; GFX11-NEXT:    s_mov_b32 s39, s3
; GFX11-NEXT:    s_mov_b32 s0, 0
; GFX11-NEXT:    s_and_b32 s1, vcc_lo, exec_lo
; GFX11-NEXT:    v_writelane_b32 v32, s48, 4
; GFX11-NEXT:    s_mov_b32 s48, s24
; GFX11-NEXT:    v_writelane_b32 v32, s49, 5
; GFX11-NEXT:    s_mov_b32 s49, s25
; GFX11-NEXT:    v_writelane_b32 v32, s50, 6
; GFX11-NEXT:    s_mov_b32 s50, s26
; GFX11-NEXT:    v_writelane_b32 v32, s51, 7
; GFX11-NEXT:    s_mov_b32 s51, s27
; GFX11-NEXT:    v_writelane_b32 v32, s52, 8
; GFX11-NEXT:    s_mov_b32 s52, s28
; GFX11-NEXT:    v_writelane_b32 v32, s53, 9
; GFX11-NEXT:    s_mov_b32 s53, s29
; GFX11-NEXT:    s_cbranch_scc0 .LBB19_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s0
; GFX11-NEXT:    s_cbranch_vccnz .LBB19_4
; GFX11-NEXT:  .LBB19_2: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[0:1], s[36:37], 1.0
; GFX11-NEXT:    v_add_f64 v[2:3], s[38:39], 1.0
; GFX11-NEXT:    v_add_f64 v[4:5], s[40:41], 1.0
; GFX11-NEXT:    v_add_f64 v[6:7], s[42:43], 1.0
; GFX11-NEXT:    v_add_f64 v[8:9], s[44:45], 1.0
; GFX11-NEXT:    v_add_f64 v[10:11], s[46:47], 1.0
; GFX11-NEXT:    v_add_f64 v[12:13], s[48:49], 1.0
; GFX11-NEXT:    v_add_f64 v[14:15], s[50:51], 1.0
; GFX11-NEXT:    v_add_f64 v[16:17], s[52:53], 1.0
; GFX11-NEXT:    s_branch .LBB19_5
; GFX11-NEXT:  .LBB19_3:
; GFX11-NEXT:    s_branch .LBB19_2
; GFX11-NEXT:  .LBB19_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s36 :: v_dual_mov_b32 v1, s37
; GFX11-NEXT:    v_dual_mov_b32 v2, s38 :: v_dual_mov_b32 v3, s39
; GFX11-NEXT:    v_dual_mov_b32 v4, s40 :: v_dual_mov_b32 v5, s41
; GFX11-NEXT:    v_dual_mov_b32 v6, s42 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v8, s44 :: v_dual_mov_b32 v9, s45
; GFX11-NEXT:    v_dual_mov_b32 v10, s46 :: v_dual_mov_b32 v11, s47
; GFX11-NEXT:    v_dual_mov_b32 v12, s48 :: v_dual_mov_b32 v13, s49
; GFX11-NEXT:    v_dual_mov_b32 v14, s50 :: v_dual_mov_b32 v15, s51
; GFX11-NEXT:    v_dual_mov_b32 v16, s52 :: v_dual_mov_b32 v17, s53
; GFX11-NEXT:    v_dual_mov_b32 v18, s54 :: v_dual_mov_b32 v19, s55
; GFX11-NEXT:    v_dual_mov_b32 v20, s56 :: v_dual_mov_b32 v21, s57
; GFX11-NEXT:    v_dual_mov_b32 v22, s58 :: v_dual_mov_b32 v23, s59
; GFX11-NEXT:    v_dual_mov_b32 v24, s60 :: v_dual_mov_b32 v25, s61
; GFX11-NEXT:    v_dual_mov_b32 v26, s62 :: v_dual_mov_b32 v27, s63
; GFX11-NEXT:    v_dual_mov_b32 v28, s64 :: v_dual_mov_b32 v29, s65
; GFX11-NEXT:    v_dual_mov_b32 v30, s66 :: v_dual_mov_b32 v31, s67
; GFX11-NEXT:  .LBB19_5: ; %end
; GFX11-NEXT:    v_readlane_b32 s53, v32, 9
; GFX11-NEXT:    v_readlane_b32 s52, v32, 8
; GFX11-NEXT:    v_readlane_b32 s51, v32, 7
; GFX11-NEXT:    v_readlane_b32 s50, v32, 6
; GFX11-NEXT:    v_readlane_b32 s49, v32, 5
; GFX11-NEXT:    v_readlane_b32 s48, v32, 4
; GFX11-NEXT:    v_readlane_b32 s39, v32, 3
; GFX11-NEXT:    v_readlane_b32 s38, v32, 2
; GFX11-NEXT:    v_readlane_b32 s37, v32, 1
; GFX11-NEXT:    v_readlane_b32 s36, v32, 0
; GFX11-NEXT:    s_xor_saveexec_b32 s0, -1
; GFX11-NEXT:    scratch_load_b32 v32, off, s32 ; 4-byte Folded Reload
; GFX11-NEXT:    s_mov_b32 exec_lo, s0
; GFX11-NEXT:    s_waitcnt vmcnt(0)
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <9 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <9 x double> %a1 to <9 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <9 x double> %a to <9 x i64>
  br label %end

end:
  %phi = phi <9 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x i64> %phi
}

define inreg <36 x i16> @s_bitcast_v9i64_to_v36i16_inreg(<9 x i64> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9i64_to_v36i16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_readfirstlane_b32 s9, v1
; SI-NEXT:    v_readfirstlane_b32 s8, v2
; SI-NEXT:    v_readfirstlane_b32 s7, v3
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_readfirstlane_b32 s6, v4
; SI-NEXT:    s_cbranch_scc0 .LBB20_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_mov_b32_e32 v1, s7
; SI-NEXT:    v_mov_b32_e32 v2, s9
; SI-NEXT:    v_mov_b32_e32 v3, s28
; SI-NEXT:    v_mov_b32_e32 v4, s26
; SI-NEXT:    v_mov_b32_e32 v5, s24
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s20
; SI-NEXT:    v_mov_b32_e32 v8, s18
; SI-NEXT:    v_mov_b32_e32 v9, s16
; SI-NEXT:    v_alignbit_b32 v1, s6, v1, 16
; SI-NEXT:    v_alignbit_b32 v2, s8, v2, 16
; SI-NEXT:    v_alignbit_b32 v3, s29, v3, 16
; SI-NEXT:    v_alignbit_b32 v4, s27, v4, 16
; SI-NEXT:    v_alignbit_b32 v5, s25, v5, 16
; SI-NEXT:    v_alignbit_b32 v6, s23, v6, 16
; SI-NEXT:    v_alignbit_b32 v7, s21, v7, 16
; SI-NEXT:    v_alignbit_b32 v8, s19, v8, 16
; SI-NEXT:    v_alignbit_b32 v9, s17, v9, 16
; SI-NEXT:    s_lshr_b32 s10, s6, 16
; SI-NEXT:    s_lshr_b32 s11, s8, 16
; SI-NEXT:    s_lshr_b32 s12, s29, 16
; SI-NEXT:    s_lshr_b32 s13, s27, 16
; SI-NEXT:    s_lshr_b32 s14, s25, 16
; SI-NEXT:    s_lshr_b32 s15, s23, 16
; SI-NEXT:    s_lshr_b32 s40, s21, 16
; SI-NEXT:    s_lshr_b32 s41, s19, 16
; SI-NEXT:    s_lshr_b32 s42, s17, 16
; SI-NEXT:    s_cbranch_execnz .LBB20_3
; SI-NEXT:  .LBB20_2: ; %cmp.true
; SI-NEXT:    s_add_u32 s16, s16, 3
; SI-NEXT:    s_addc_u32 s17, s17, 0
; SI-NEXT:    s_add_u32 s18, s18, 3
; SI-NEXT:    s_addc_u32 s19, s19, 0
; SI-NEXT:    s_add_u32 s20, s20, 3
; SI-NEXT:    s_addc_u32 s21, s21, 0
; SI-NEXT:    s_add_u32 s22, s22, 3
; SI-NEXT:    s_addc_u32 s23, s23, 0
; SI-NEXT:    s_add_u32 s24, s24, 3
; SI-NEXT:    s_addc_u32 s25, s25, 0
; SI-NEXT:    s_add_u32 s26, s26, 3
; SI-NEXT:    s_addc_u32 s27, s27, 0
; SI-NEXT:    s_add_u32 s28, s28, 3
; SI-NEXT:    s_addc_u32 s29, s29, 0
; SI-NEXT:    s_add_u32 s9, s9, 3
; SI-NEXT:    s_addc_u32 s8, s8, 0
; SI-NEXT:    s_add_u32 s7, s7, 3
; SI-NEXT:    s_addc_u32 s6, s6, 0
; SI-NEXT:    v_mov_b32_e32 v1, s7
; SI-NEXT:    v_mov_b32_e32 v2, s9
; SI-NEXT:    v_mov_b32_e32 v3, s28
; SI-NEXT:    v_mov_b32_e32 v4, s26
; SI-NEXT:    v_mov_b32_e32 v5, s24
; SI-NEXT:    v_mov_b32_e32 v6, s22
; SI-NEXT:    v_mov_b32_e32 v7, s20
; SI-NEXT:    v_mov_b32_e32 v8, s18
; SI-NEXT:    v_mov_b32_e32 v9, s16
; SI-NEXT:    v_alignbit_b32 v1, s6, v1, 16
; SI-NEXT:    v_alignbit_b32 v2, s8, v2, 16
; SI-NEXT:    v_alignbit_b32 v3, s29, v3, 16
; SI-NEXT:    v_alignbit_b32 v4, s27, v4, 16
; SI-NEXT:    v_alignbit_b32 v5, s25, v5, 16
; SI-NEXT:    v_alignbit_b32 v6, s23, v6, 16
; SI-NEXT:    v_alignbit_b32 v7, s21, v7, 16
; SI-NEXT:    v_alignbit_b32 v8, s19, v8, 16
; SI-NEXT:    v_alignbit_b32 v9, s17, v9, 16
; SI-NEXT:    s_lshr_b32 s10, s6, 16
; SI-NEXT:    s_lshr_b32 s11, s8, 16
; SI-NEXT:    s_lshr_b32 s12, s29, 16
; SI-NEXT:    s_lshr_b32 s13, s27, 16
; SI-NEXT:    s_lshr_b32 s14, s25, 16
; SI-NEXT:    s_lshr_b32 s15, s23, 16
; SI-NEXT:    s_lshr_b32 s40, s21, 16
; SI-NEXT:    s_lshr_b32 s41, s19, 16
; SI-NEXT:    s_lshr_b32 s42, s17, 16
; SI-NEXT:  .LBB20_3: ; %end
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v9, s4, v9
; SI-NEXT:    s_and_b32 s4, s17, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s42, 16
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    v_mov_b32_e32 v10, s4
; SI-NEXT:    s_and_b32 s4, s18, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v8
; SI-NEXT:    buffer_store_dword v9, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v9, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v8, s4, v8
; SI-NEXT:    s_and_b32 s4, s19, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s41, 16
; SI-NEXT:    buffer_store_dword v10, v9, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v9, vcc, 8, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v8, v9, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v9, s4
; SI-NEXT:    s_and_b32 s4, s20, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v8, vcc, 12, v0
; SI-NEXT:    v_or_b32_e32 v7, s4, v7
; SI-NEXT:    s_and_b32 s4, s21, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s40, 16
; SI-NEXT:    buffer_store_dword v9, v8, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v8, vcc, 16, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v7, v8, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v8, s4
; SI-NEXT:    s_and_b32 s4, s22, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v7, vcc, 20, v0
; SI-NEXT:    v_or_b32_e32 v6, s4, v6
; SI-NEXT:    s_and_b32 s4, s23, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s15, 16
; SI-NEXT:    buffer_store_dword v8, v7, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v7, vcc, 24, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v6, v7, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v7, s4
; SI-NEXT:    s_and_b32 s4, s24, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v6, vcc, 28, v0
; SI-NEXT:    v_or_b32_e32 v5, s4, v5
; SI-NEXT:    s_and_b32 s4, s25, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s14, 16
; SI-NEXT:    buffer_store_dword v7, v6, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v6, vcc, 32, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v5, v6, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v6, s4
; SI-NEXT:    s_and_b32 s4, s26, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v5, vcc, 36, v0
; SI-NEXT:    v_or_b32_e32 v4, s4, v4
; SI-NEXT:    s_and_b32 s4, s27, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s13, 16
; SI-NEXT:    buffer_store_dword v6, v5, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v5, vcc, 40, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v4, v5, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v5, s4
; SI-NEXT:    s_and_b32 s4, s28, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v4, vcc, 44, v0
; SI-NEXT:    v_or_b32_e32 v3, s4, v3
; SI-NEXT:    s_and_b32 s4, s29, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s12, 16
; SI-NEXT:    buffer_store_dword v5, v4, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v4, vcc, 48, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v3, v4, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v4, s4
; SI-NEXT:    s_and_b32 s4, s9, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v3, vcc, 52, v0
; SI-NEXT:    v_or_b32_e32 v2, s4, v2
; SI-NEXT:    s_and_b32 s4, s8, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s11, 16
; SI-NEXT:    buffer_store_dword v4, v3, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v3, vcc, 56, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v2, v3, s[0:3], 0 offen
; SI-NEXT:    v_mov_b32_e32 v3, s4
; SI-NEXT:    s_and_b32 s4, s7, 0xffff
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v2, vcc, 60, v0
; SI-NEXT:    v_or_b32_e32 v1, s4, v1
; SI-NEXT:    s_and_b32 s4, s6, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s10, 16
; SI-NEXT:    buffer_store_dword v3, v2, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v2, vcc, 64, v0
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v1, s4
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB20_4:
; SI-NEXT:    ; implicit-def: $vgpr9
; SI-NEXT:    ; implicit-def: $sgpr42
; SI-NEXT:    ; implicit-def: $vgpr8
; SI-NEXT:    ; implicit-def: $sgpr41
; SI-NEXT:    ; implicit-def: $vgpr7
; SI-NEXT:    ; implicit-def: $sgpr40
; SI-NEXT:    ; implicit-def: $vgpr6
; SI-NEXT:    ; implicit-def: $sgpr15
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $sgpr14
; SI-NEXT:    ; implicit-def: $vgpr4
; SI-NEXT:    ; implicit-def: $sgpr13
; SI-NEXT:    ; implicit-def: $vgpr3
; SI-NEXT:    ; implicit-def: $sgpr12
; SI-NEXT:    ; implicit-def: $vgpr2
; SI-NEXT:    ; implicit-def: $sgpr11
; SI-NEXT:    ; implicit-def: $vgpr1
; SI-NEXT:    ; implicit-def: $sgpr10
; SI-NEXT:    s_branch .LBB20_2
;
; VI-LABEL: s_bitcast_v9i64_to_v36i16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_readfirstlane_b32 s9, v0
; VI-NEXT:    v_readfirstlane_b32 s8, v1
; VI-NEXT:    v_readfirstlane_b32 s6, v2
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_readfirstlane_b32 s7, v3
; VI-NEXT:    s_cbranch_scc0 .LBB20_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:    s_cbranch_execnz .LBB20_3
; VI-NEXT:  .LBB20_2: ; %cmp.true
; VI-NEXT:    s_add_u32 s6, s6, 3
; VI-NEXT:    s_addc_u32 s7, s7, 0
; VI-NEXT:    s_add_u32 s9, s9, 3
; VI-NEXT:    s_addc_u32 s8, s8, 0
; VI-NEXT:    s_add_u32 s28, s28, 3
; VI-NEXT:    s_addc_u32 s29, s29, 0
; VI-NEXT:    s_add_u32 s26, s26, 3
; VI-NEXT:    s_addc_u32 s27, s27, 0
; VI-NEXT:    s_add_u32 s24, s24, 3
; VI-NEXT:    s_addc_u32 s25, s25, 0
; VI-NEXT:    s_add_u32 s22, s22, 3
; VI-NEXT:    s_addc_u32 s23, s23, 0
; VI-NEXT:    s_add_u32 s20, s20, 3
; VI-NEXT:    s_addc_u32 s21, s21, 0
; VI-NEXT:    s_add_u32 s18, s18, 3
; VI-NEXT:    s_addc_u32 s19, s19, 0
; VI-NEXT:    s_add_u32 s16, s16, 3
; VI-NEXT:    s_addc_u32 s17, s17, 0
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:  .LBB20_3: ; %end
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s59, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s16, s58, 16
; VI-NEXT:    s_or_b32 s5, s5, s16
; VI-NEXT:    s_and_b32 s16, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s17, s57, 16
; VI-NEXT:    s_or_b32 s16, s16, s17
; VI-NEXT:    s_and_b32 s17, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s18, s56, 16
; VI-NEXT:    s_or_b32 s17, s17, s18
; VI-NEXT:    s_and_b32 s18, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s19, s47, 16
; VI-NEXT:    s_or_b32 s18, s18, s19
; VI-NEXT:    s_and_b32 s19, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s20, s46, 16
; VI-NEXT:    s_or_b32 s19, s19, s20
; VI-NEXT:    s_and_b32 s20, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s21, s45, 16
; VI-NEXT:    s_or_b32 s20, s20, s21
; VI-NEXT:    s_and_b32 s21, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s22, s44, 16
; VI-NEXT:    s_or_b32 s21, s21, s22
; VI-NEXT:    s_and_b32 s22, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s23, s43, 16
; VI-NEXT:    s_or_b32 s22, s22, s23
; VI-NEXT:    s_and_b32 s23, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s24, s42, 16
; VI-NEXT:    s_or_b32 s23, s23, s24
; VI-NEXT:    s_and_b32 s24, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s25, s41, 16
; VI-NEXT:    s_or_b32 s24, s24, s25
; VI-NEXT:    s_and_b32 s25, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s26, s40, 16
; VI-NEXT:    s_or_b32 s25, s25, s26
; VI-NEXT:    s_and_b32 s26, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s15, s26, s15
; VI-NEXT:    s_and_b32 s26, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_and_b32 s9, 0xffff, s9
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_and_b32 s8, 0xffff, s8
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_and_b32 s6, 0xffff, s6
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_and_b32 s7, 0xffff, s7
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s14, s26, s14
; VI-NEXT:    s_or_b32 s9, s9, s13
; VI-NEXT:    s_or_b32 s8, s8, s12
; VI-NEXT:    s_or_b32 s6, s6, s11
; VI-NEXT:    s_or_b32 s7, s7, s10
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s16
; VI-NEXT:    v_mov_b32_e32 v3, s17
; VI-NEXT:    v_mov_b32_e32 v4, s18
; VI-NEXT:    v_mov_b32_e32 v5, s19
; VI-NEXT:    v_mov_b32_e32 v6, s20
; VI-NEXT:    v_mov_b32_e32 v7, s21
; VI-NEXT:    v_mov_b32_e32 v8, s22
; VI-NEXT:    v_mov_b32_e32 v9, s23
; VI-NEXT:    v_mov_b32_e32 v10, s24
; VI-NEXT:    v_mov_b32_e32 v11, s25
; VI-NEXT:    v_mov_b32_e32 v12, s15
; VI-NEXT:    v_mov_b32_e32 v13, s14
; VI-NEXT:    v_mov_b32_e32 v14, s9
; VI-NEXT:    v_mov_b32_e32 v15, s8
; VI-NEXT:    v_mov_b32_e32 v16, s6
; VI-NEXT:    v_mov_b32_e32 v17, s7
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB20_4:
; VI-NEXT:    ; implicit-def: $sgpr59
; VI-NEXT:    ; implicit-def: $sgpr58
; VI-NEXT:    ; implicit-def: $sgpr57
; VI-NEXT:    ; implicit-def: $sgpr56
; VI-NEXT:    ; implicit-def: $sgpr47
; VI-NEXT:    ; implicit-def: $sgpr46
; VI-NEXT:    ; implicit-def: $sgpr45
; VI-NEXT:    ; implicit-def: $sgpr44
; VI-NEXT:    ; implicit-def: $sgpr43
; VI-NEXT:    ; implicit-def: $sgpr42
; VI-NEXT:    ; implicit-def: $sgpr41
; VI-NEXT:    ; implicit-def: $sgpr40
; VI-NEXT:    ; implicit-def: $sgpr15
; VI-NEXT:    ; implicit-def: $sgpr14
; VI-NEXT:    ; implicit-def: $sgpr13
; VI-NEXT:    ; implicit-def: $sgpr12
; VI-NEXT:    ; implicit-def: $sgpr11
; VI-NEXT:    ; implicit-def: $sgpr10
; VI-NEXT:    s_branch .LBB20_2
;
; GFX9-LABEL: s_bitcast_v9i64_to_v36i16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_readfirstlane_b32 s6, v0
; GFX9-NEXT:    v_readfirstlane_b32 s7, v1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v2
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_readfirstlane_b32 s9, v3
; GFX9-NEXT:    s_cbranch_scc0 .LBB20_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:    s_cbranch_execnz .LBB20_3
; GFX9-NEXT:  .LBB20_2: ; %cmp.true
; GFX9-NEXT:    s_add_u32 s8, s8, 3
; GFX9-NEXT:    s_addc_u32 s9, s9, 0
; GFX9-NEXT:    s_add_u32 s6, s6, 3
; GFX9-NEXT:    s_addc_u32 s7, s7, 0
; GFX9-NEXT:    s_add_u32 s28, s28, 3
; GFX9-NEXT:    s_addc_u32 s29, s29, 0
; GFX9-NEXT:    s_add_u32 s26, s26, 3
; GFX9-NEXT:    s_addc_u32 s27, s27, 0
; GFX9-NEXT:    s_add_u32 s24, s24, 3
; GFX9-NEXT:    s_addc_u32 s25, s25, 0
; GFX9-NEXT:    s_add_u32 s22, s22, 3
; GFX9-NEXT:    s_addc_u32 s23, s23, 0
; GFX9-NEXT:    s_add_u32 s20, s20, 3
; GFX9-NEXT:    s_addc_u32 s21, s21, 0
; GFX9-NEXT:    s_add_u32 s18, s18, 3
; GFX9-NEXT:    s_addc_u32 s19, s19, 0
; GFX9-NEXT:    s_add_u32 s16, s16, 3
; GFX9-NEXT:    s_addc_u32 s17, s17, 0
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:  .LBB20_3: ; %end
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s16, s59
; GFX9-NEXT:    s_pack_ll_b32_b16 s5, s17, s58
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s18, s57
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s19, s56
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s20, s47
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s21, s46
; GFX9-NEXT:    s_pack_ll_b32_b16 s20, s22, s45
; GFX9-NEXT:    s_pack_ll_b32_b16 s21, s23, s44
; GFX9-NEXT:    s_pack_ll_b32_b16 s22, s24, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s23, s25, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s24, s26, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s25, s27, s40
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s28, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s29, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s6, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s7, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s8, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s9, s10
; GFX9-NEXT:    v_mov_b32_e32 v0, s4
; GFX9-NEXT:    v_mov_b32_e32 v1, s5
; GFX9-NEXT:    v_mov_b32_e32 v2, s16
; GFX9-NEXT:    v_mov_b32_e32 v3, s17
; GFX9-NEXT:    v_mov_b32_e32 v4, s18
; GFX9-NEXT:    v_mov_b32_e32 v5, s19
; GFX9-NEXT:    v_mov_b32_e32 v6, s20
; GFX9-NEXT:    v_mov_b32_e32 v7, s21
; GFX9-NEXT:    v_mov_b32_e32 v8, s22
; GFX9-NEXT:    v_mov_b32_e32 v9, s23
; GFX9-NEXT:    v_mov_b32_e32 v10, s24
; GFX9-NEXT:    v_mov_b32_e32 v11, s25
; GFX9-NEXT:    v_mov_b32_e32 v12, s15
; GFX9-NEXT:    v_mov_b32_e32 v13, s14
; GFX9-NEXT:    v_mov_b32_e32 v14, s6
; GFX9-NEXT:    v_mov_b32_e32 v15, s7
; GFX9-NEXT:    v_mov_b32_e32 v16, s8
; GFX9-NEXT:    v_mov_b32_e32 v17, s9
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB20_4:
; GFX9-NEXT:    ; implicit-def: $sgpr59
; GFX9-NEXT:    ; implicit-def: $sgpr58
; GFX9-NEXT:    ; implicit-def: $sgpr57
; GFX9-NEXT:    ; implicit-def: $sgpr56
; GFX9-NEXT:    ; implicit-def: $sgpr47
; GFX9-NEXT:    ; implicit-def: $sgpr46
; GFX9-NEXT:    ; implicit-def: $sgpr45
; GFX9-NEXT:    ; implicit-def: $sgpr44
; GFX9-NEXT:    ; implicit-def: $sgpr43
; GFX9-NEXT:    ; implicit-def: $sgpr42
; GFX9-NEXT:    ; implicit-def: $sgpr41
; GFX9-NEXT:    ; implicit-def: $sgpr40
; GFX9-NEXT:    ; implicit-def: $sgpr15
; GFX9-NEXT:    ; implicit-def: $sgpr14
; GFX9-NEXT:    ; implicit-def: $sgpr13
; GFX9-NEXT:    ; implicit-def: $sgpr12
; GFX9-NEXT:    ; implicit-def: $sgpr11
; GFX9-NEXT:    ; implicit-def: $sgpr10
; GFX9-NEXT:    s_branch .LBB20_2
;
; GFX11-LABEL: s_bitcast_v9i64_to_v36i16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s46, 0
; GFX11-NEXT:    s_and_b32 s4, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB20_4
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s46
; GFX11-NEXT:    s_cbranch_vccnz .LBB20_3
; GFX11-NEXT:  .LBB20_2: ; %cmp.true
; GFX11-NEXT:    s_add_u32 s28, s28, 3
; GFX11-NEXT:    s_addc_u32 s29, s29, 0
; GFX11-NEXT:    s_add_u32 s26, s26, 3
; GFX11-NEXT:    s_addc_u32 s27, s27, 0
; GFX11-NEXT:    s_add_u32 s24, s24, 3
; GFX11-NEXT:    s_addc_u32 s25, s25, 0
; GFX11-NEXT:    s_add_u32 s22, s22, 3
; GFX11-NEXT:    s_addc_u32 s23, s23, 0
; GFX11-NEXT:    s_add_u32 s20, s20, 3
; GFX11-NEXT:    s_addc_u32 s21, s21, 0
; GFX11-NEXT:    s_add_u32 s18, s18, 3
; GFX11-NEXT:    s_addc_u32 s19, s19, 0
; GFX11-NEXT:    s_add_u32 s16, s16, 3
; GFX11-NEXT:    s_addc_u32 s17, s17, 0
; GFX11-NEXT:    s_add_u32 s2, s2, 3
; GFX11-NEXT:    s_addc_u32 s3, s3, 0
; GFX11-NEXT:    s_add_u32 s0, s0, 3
; GFX11-NEXT:    s_addc_u32 s1, s1, 0
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:  .LBB20_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s16, s41
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s17, s40
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s18, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s19, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s20, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s21, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s22, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s23, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s24, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s25, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s26, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s27, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s28, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s29, s4
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s15 :: v_dual_mov_b32 v7, s14
; GFX11-NEXT:    v_dual_mov_b32 v8, s13 :: v_dual_mov_b32 v9, s12
; GFX11-NEXT:    v_dual_mov_b32 v10, s11 :: v_dual_mov_b32 v11, s10
; GFX11-NEXT:    v_dual_mov_b32 v12, s9 :: v_dual_mov_b32 v13, s8
; GFX11-NEXT:    v_dual_mov_b32 v14, s7 :: v_dual_mov_b32 v15, s6
; GFX11-NEXT:    v_dual_mov_b32 v16, s5 :: v_dual_mov_b32 v17, s4
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB20_4:
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    ; implicit-def: $sgpr4
; GFX11-NEXT:    s_branch .LBB20_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <9 x i64> %a, splat (i64 3)
  %a2 = bitcast <9 x i64> %a1 to <36 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <9 x i64> %a to <36 x i16>
  br label %end

end:
  %phi = phi <36 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x i16> %phi
}

define inreg <9 x i64> @s_bitcast_v36i16_to_v9i64_inreg(<36 x i16> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36i16_to_v9i64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    v_mov_b32_e32 v32, v20
; SI-NEXT:    v_mov_b32_e32 v33, v18
; SI-NEXT:    v_mov_b32_e32 v34, v16
; SI-NEXT:    v_mov_b32_e32 v35, v14
; SI-NEXT:    v_mov_b32_e32 v36, v12
; SI-NEXT:    v_mov_b32_e32 v37, v10
; SI-NEXT:    v_mov_b32_e32 v38, v8
; SI-NEXT:    v_mov_b32_e32 v39, v6
; SI-NEXT:    v_mov_b32_e32 v48, v4
; SI-NEXT:    v_mov_b32_e32 v49, v2
; SI-NEXT:    v_mov_b32_e32 v50, v0
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v45, 16, v1
; SI-NEXT:    v_lshlrev_b32_e32 v44, 16, v3
; SI-NEXT:    v_lshlrev_b32_e32 v43, 16, v5
; SI-NEXT:    v_lshlrev_b32_e32 v42, 16, v7
; SI-NEXT:    v_lshlrev_b32_e32 v41, 16, v9
; SI-NEXT:    v_lshlrev_b32_e32 v40, 16, v11
; SI-NEXT:    v_lshlrev_b32_e32 v55, 16, v13
; SI-NEXT:    v_lshlrev_b32_e32 v54, 16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v53, 16, v17
; SI-NEXT:    v_lshlrev_b32_e32 v52, 16, v19
; SI-NEXT:    v_lshlrev_b32_e32 v51, 16, v21
; SI-NEXT:    s_cbranch_scc0 .LBB21_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v50
; SI-NEXT:    v_or_b32_e32 v7, v0, v45
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v49
; SI-NEXT:    v_or_b32_e32 v8, v0, v44
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v48
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    v_or_b32_e32 v9, v0, v43
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v39
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    v_or_b32_e32 v10, v0, v42
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v38
; SI-NEXT:    s_or_b32 s5, s5, s6
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    v_or_b32_e32 v11, v0, v41
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v37
; SI-NEXT:    s_or_b32 s6, s6, s7
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    v_or_b32_e32 v12, v0, v40
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v36
; SI-NEXT:    s_or_b32 s7, s7, s8
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    v_or_b32_e32 v13, v0, v55
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; SI-NEXT:    s_or_b32 s8, s8, s9
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    v_or_b32_e32 v14, v0, v54
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v34
; SI-NEXT:    s_or_b32 s9, s9, s10
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_or_b32_e32 v15, v0, v53
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; SI-NEXT:    s_or_b32 s10, s10, s11
; SI-NEXT:    v_or_b32_e32 v16, v0, v52
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; SI-NEXT:    v_or_b32_e32 v17, v0, v51
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:    s_cbranch_execnz .LBB21_3
; SI-NEXT:  .LBB21_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v50
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v45, v0
; SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v49
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v44, v0
; SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v48
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v43, v0
; SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v39
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v42, v0
; SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v38
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v41, v0
; SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v37
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v40, v0
; SI-NEXT:    v_add_i32_e32 v12, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v36
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v55, v0
; SI-NEXT:    v_add_i32_e32 v13, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v35
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    v_or_b32_e32 v0, v54, v0
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    v_add_i32_e32 v14, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v34
; SI-NEXT:    s_or_b32 s4, s5, s4
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s5, s6, s5
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    v_or_b32_e32 v0, v53, v0
; SI-NEXT:    s_or_b32 s6, s7, s6
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    v_add_i32_e32 v15, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v33
; SI-NEXT:    s_or_b32 s7, s8, s7
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s8, s9, s8
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    v_or_b32_e32 v0, v52, v0
; SI-NEXT:    s_or_b32 s9, s10, s9
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_add_i32_e32 v16, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v32
; SI-NEXT:    s_or_b32 s10, s11, s10
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s4, s4, 0x30000
; SI-NEXT:    s_add_i32 s5, s5, 0x30000
; SI-NEXT:    s_add_i32 s6, s6, 0x30000
; SI-NEXT:    s_add_i32 s7, s7, 0x30000
; SI-NEXT:    s_add_i32 s8, s8, 0x30000
; SI-NEXT:    s_add_i32 s9, s9, 0x30000
; SI-NEXT:    s_add_i32 s10, s10, 0x30000
; SI-NEXT:    v_or_b32_e32 v0, v51, v0
; SI-NEXT:    v_add_i32_e32 v17, vcc, 0x30000, v0
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:  .LBB21_3: ; %end
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB21_4:
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    s_branch .LBB21_2
;
; VI-LABEL: s_bitcast_v36i16_to_v9i64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s43, s29, 16
; VI-NEXT:    s_lshr_b32 s42, s28, 16
; VI-NEXT:    s_lshr_b32 s41, s27, 16
; VI-NEXT:    s_lshr_b32 s40, s26, 16
; VI-NEXT:    s_lshr_b32 s15, s25, 16
; VI-NEXT:    s_lshr_b32 s14, s24, 16
; VI-NEXT:    s_lshr_b32 s13, s23, 16
; VI-NEXT:    s_lshr_b32 s12, s22, 16
; VI-NEXT:    s_lshr_b32 s11, s21, 16
; VI-NEXT:    s_lshr_b32 s10, s20, 16
; VI-NEXT:    s_lshr_b32 s9, s19, 16
; VI-NEXT:    s_lshr_b32 s8, s18, 16
; VI-NEXT:    s_lshr_b32 s7, s17, 16
; VI-NEXT:    s_lshr_b32 s6, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v35, v1
; VI-NEXT:    v_mov_b32_e32 v34, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB21_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s6, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s7, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s8, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s9, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s10, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s11, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s12, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s13, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s14, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s15, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s40, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s41, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s42, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s43, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v34, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v35, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB21_3
; VI-NEXT:  .LBB21_2: ; %cmp.true
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_lshl_b32 s6, s6, 16
; VI-NEXT:    s_and_b32 s16, s16, 0xffff
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_lshl_b32 s7, s7, 16
; VI-NEXT:    s_or_b32 s6, s6, s16
; VI-NEXT:    s_and_b32 s16, s17, 0xffff
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_lshl_b32 s8, s8, 16
; VI-NEXT:    s_or_b32 s7, s7, s16
; VI-NEXT:    s_and_b32 s16, s18, 0xffff
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_lshl_b32 s9, s9, 16
; VI-NEXT:    s_or_b32 s8, s8, s16
; VI-NEXT:    s_and_b32 s16, s19, 0xffff
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s9, s9, s16
; VI-NEXT:    s_and_b32 s16, s20, 0xffff
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_or_b32 s10, s10, s16
; VI-NEXT:    s_and_b32 s16, s21, 0xffff
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_or_b32 s11, s11, s16
; VI-NEXT:    s_and_b32 s16, s22, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v35
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_or_b32 s12, s12, s16
; VI-NEXT:    s_and_b32 s16, s23, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_or_b32 s13, s13, s16
; VI-NEXT:    s_and_b32 s16, s24, 0xffff
; VI-NEXT:    v_add_u32_e32 v15, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v33
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_lshl_b32 s5, s42, 16
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s14, s14, s16
; VI-NEXT:    s_and_b32 s16, s25, 0xffff
; VI-NEXT:    s_and_b32 s18, s28, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_lshl_b32 s4, s43, 16
; VI-NEXT:    s_lshl_b32 s41, s41, 16
; VI-NEXT:    s_lshl_b32 s40, s40, 16
; VI-NEXT:    s_or_b32 s15, s15, s16
; VI-NEXT:    s_and_b32 s16, s26, 0xffff
; VI-NEXT:    s_and_b32 s17, s27, 0xffff
; VI-NEXT:    s_or_b32 s5, s5, s18
; VI-NEXT:    s_and_b32 s18, s29, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v3, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v34
; VI-NEXT:    v_add_u32_e32 v16, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v32
; VI-NEXT:    s_or_b32 s16, s40, s16
; VI-NEXT:    s_or_b32 s17, s41, s17
; VI-NEXT:    s_or_b32 s4, s4, s18
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s6, s6, 0x30000
; VI-NEXT:    s_add_i32 s7, s7, 0x30000
; VI-NEXT:    s_add_i32 s8, s8, 0x30000
; VI-NEXT:    s_add_i32 s9, s9, 0x30000
; VI-NEXT:    s_add_i32 s10, s10, 0x30000
; VI-NEXT:    s_add_i32 s11, s11, 0x30000
; VI-NEXT:    s_add_i32 s12, s12, 0x30000
; VI-NEXT:    s_add_i32 s13, s13, 0x30000
; VI-NEXT:    s_add_i32 s14, s14, 0x30000
; VI-NEXT:    s_add_i32 s15, s15, 0x30000
; VI-NEXT:    s_add_i32 s16, s16, 0x30000
; VI-NEXT:    s_add_i32 s17, s17, 0x30000
; VI-NEXT:    s_add_i32 s5, s5, 0x30000
; VI-NEXT:    s_add_i32 s4, s4, 0x30000
; VI-NEXT:    v_add_u32_e32 v14, vcc, 0x30000, v3
; VI-NEXT:    v_add_u32_e32 v17, vcc, 0x30000, v0
; VI-NEXT:    v_mov_b32_e32 v0, s6
; VI-NEXT:    v_mov_b32_e32 v1, s7
; VI-NEXT:    v_mov_b32_e32 v2, s8
; VI-NEXT:    v_mov_b32_e32 v3, s9
; VI-NEXT:    v_mov_b32_e32 v4, s10
; VI-NEXT:    v_mov_b32_e32 v5, s11
; VI-NEXT:    v_mov_b32_e32 v6, s12
; VI-NEXT:    v_mov_b32_e32 v7, s13
; VI-NEXT:    v_mov_b32_e32 v8, s14
; VI-NEXT:    v_mov_b32_e32 v9, s15
; VI-NEXT:    v_mov_b32_e32 v10, s16
; VI-NEXT:    v_mov_b32_e32 v11, s17
; VI-NEXT:    v_mov_b32_e32 v12, s5
; VI-NEXT:    v_mov_b32_e32 v13, s4
; VI-NEXT:  .LBB21_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB21_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB21_2
;
; GFX9-LABEL: s_bitcast_v36i16_to_v9i64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB21_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB21_3
; GFX9-NEXT:  .LBB21_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v0, v39, 16, v0
; GFX9-NEXT:    v_lshl_or_b32 v1, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_u16 v14, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v15, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, s6, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, s7, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, s8, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v3, s9, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v4, s10, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v5, s11, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v6, s12, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v7, s13, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v8, s14, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v9, s15, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v10, s16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v11, s17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v12, s18, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v13, s19, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v16, v16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v17, v17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB21_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB21_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB21_2
;
; GFX11-LABEL: s_bitcast_v36i16_to_v9i64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB21_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB21_4
; GFX11-NEXT:  .LBB21_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v0, s0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, s1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, s2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v3, s3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v4, s4, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v5, s5, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v6, s6, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v7, s7, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v8, s8, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v9, s9, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v10, s10, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v11, s11, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v12, s12, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v13, s13, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v14, s14, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v15, s15, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v16, s16, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v17, s17, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB21_3:
; GFX11-NEXT:    s_branch .LBB21_2
; GFX11-NEXT:  .LBB21_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <36 x i16> %a, splat (i16 3)
  %a2 = bitcast <36 x i16> %a1 to <9 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <36 x i16> %a to <9 x i64>
  br label %end

end:
  %phi = phi <9 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x i64> %phi
}

define inreg <36 x half> @s_bitcast_v9i64_to_v36f16_inreg(<9 x i64> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9i64_to_v36f16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_readfirstlane_b32 s7, v1
; SI-NEXT:    v_readfirstlane_b32 s8, v2
; SI-NEXT:    v_readfirstlane_b32 s6, v3
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_readfirstlane_b32 s9, v4
; SI-NEXT:    s_cbranch_scc0 .LBB22_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_lshr_b32 s4, s9, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v1, s4
; SI-NEXT:    s_lshr_b32 s4, s6, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v2, s4
; SI-NEXT:    s_lshr_b32 s4, s8, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v4, s4
; SI-NEXT:    s_lshr_b32 s4, s7, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v6, s4
; SI-NEXT:    s_lshr_b32 s4, s29, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v8, s4
; SI-NEXT:    s_lshr_b32 s4, s28, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v10, s4
; SI-NEXT:    s_lshr_b32 s4, s27, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v12, s4
; SI-NEXT:    s_lshr_b32 s4, s26, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v15, s4
; SI-NEXT:    s_lshr_b32 s4, s25, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v17, s4
; SI-NEXT:    s_lshr_b32 s4, s24, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v19, s4
; SI-NEXT:    s_lshr_b32 s4, s23, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v21, s4
; SI-NEXT:    s_lshr_b32 s4, s22, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v23, s4
; SI-NEXT:    s_lshr_b32 s4, s21, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v25, s4
; SI-NEXT:    s_lshr_b32 s4, s20, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v27, s4
; SI-NEXT:    s_lshr_b32 s4, s19, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v30, s4
; SI-NEXT:    s_lshr_b32 s4, s18, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v32, s4
; SI-NEXT:    s_lshr_b32 s4, s17, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v34, s4
; SI-NEXT:    s_lshr_b32 s4, s16, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v36, s4
; SI-NEXT:    v_cvt_f32_f16_e32 v3, s9
; SI-NEXT:    v_cvt_f32_f16_e32 v5, s6
; SI-NEXT:    v_cvt_f32_f16_e32 v7, s8
; SI-NEXT:    v_cvt_f32_f16_e32 v9, s7
; SI-NEXT:    v_cvt_f32_f16_e32 v11, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v13, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v14, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v16, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v22, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v24, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v26, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v28, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v29, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v31, s18
; SI-NEXT:    v_cvt_f32_f16_e32 v33, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v35, s16
; SI-NEXT:    s_cbranch_execnz .LBB22_3
; SI-NEXT:  .LBB22_2: ; %cmp.true
; SI-NEXT:    s_add_u32 s4, s16, 3
; SI-NEXT:    s_addc_u32 s5, s17, 0
; SI-NEXT:    s_lshr_b32 s10, s4, 16
; SI-NEXT:    s_lshr_b32 s11, s5, 16
; SI-NEXT:    s_add_u32 s12, s18, 3
; SI-NEXT:    s_addc_u32 s13, s19, 0
; SI-NEXT:    s_lshr_b32 s14, s12, 16
; SI-NEXT:    s_lshr_b32 s15, s13, 16
; SI-NEXT:    s_add_u32 s16, s20, 3
; SI-NEXT:    s_addc_u32 s17, s21, 0
; SI-NEXT:    s_lshr_b32 s18, s16, 16
; SI-NEXT:    s_lshr_b32 s19, s17, 16
; SI-NEXT:    s_add_u32 s20, s22, 3
; SI-NEXT:    s_addc_u32 s21, s23, 0
; SI-NEXT:    s_lshr_b32 s22, s20, 16
; SI-NEXT:    s_lshr_b32 s23, s21, 16
; SI-NEXT:    s_add_u32 s24, s24, 3
; SI-NEXT:    s_addc_u32 s25, s25, 0
; SI-NEXT:    s_lshr_b32 s40, s24, 16
; SI-NEXT:    s_lshr_b32 s41, s25, 16
; SI-NEXT:    s_add_u32 s26, s26, 3
; SI-NEXT:    s_addc_u32 s27, s27, 0
; SI-NEXT:    s_lshr_b32 s42, s26, 16
; SI-NEXT:    s_lshr_b32 s43, s27, 16
; SI-NEXT:    s_add_u32 s28, s28, 3
; SI-NEXT:    s_addc_u32 s29, s29, 0
; SI-NEXT:    s_lshr_b32 s44, s28, 16
; SI-NEXT:    s_lshr_b32 s45, s29, 16
; SI-NEXT:    s_add_u32 s7, s7, 3
; SI-NEXT:    s_addc_u32 s8, s8, 0
; SI-NEXT:    s_lshr_b32 s46, s7, 16
; SI-NEXT:    s_lshr_b32 s47, s8, 16
; SI-NEXT:    s_add_u32 s6, s6, 3
; SI-NEXT:    s_addc_u32 s9, s9, 0
; SI-NEXT:    s_lshr_b32 s56, s6, 16
; SI-NEXT:    s_lshr_b32 s57, s9, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v3, s9
; SI-NEXT:    v_cvt_f32_f16_e32 v5, s6
; SI-NEXT:    v_cvt_f32_f16_e32 v7, s8
; SI-NEXT:    v_cvt_f32_f16_e32 v9, s7
; SI-NEXT:    v_cvt_f32_f16_e32 v11, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v13, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v14, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v16, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v22, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v24, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v26, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v28, s16
; SI-NEXT:    v_cvt_f32_f16_e32 v29, s13
; SI-NEXT:    v_cvt_f32_f16_e32 v31, s12
; SI-NEXT:    v_cvt_f32_f16_e32 v33, s5
; SI-NEXT:    v_cvt_f32_f16_e32 v35, s4
; SI-NEXT:    v_cvt_f32_f16_e32 v1, s57
; SI-NEXT:    v_cvt_f32_f16_e32 v2, s56
; SI-NEXT:    v_cvt_f32_f16_e32 v4, s47
; SI-NEXT:    v_cvt_f32_f16_e32 v6, s46
; SI-NEXT:    v_cvt_f32_f16_e32 v8, s45
; SI-NEXT:    v_cvt_f32_f16_e32 v10, s44
; SI-NEXT:    v_cvt_f32_f16_e32 v12, s43
; SI-NEXT:    v_cvt_f32_f16_e32 v15, s42
; SI-NEXT:    v_cvt_f32_f16_e32 v17, s41
; SI-NEXT:    v_cvt_f32_f16_e32 v19, s40
; SI-NEXT:    v_cvt_f32_f16_e32 v21, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v23, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v25, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v27, s18
; SI-NEXT:    v_cvt_f32_f16_e32 v30, s15
; SI-NEXT:    v_cvt_f32_f16_e32 v32, s14
; SI-NEXT:    v_cvt_f32_f16_e32 v34, s11
; SI-NEXT:    v_cvt_f32_f16_e32 v36, s10
; SI-NEXT:  .LBB22_3: ; %end
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v35, v35
; SI-NEXT:    v_cvt_f16_f32_e32 v34, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v33, v33
; SI-NEXT:    v_cvt_f16_f32_e32 v32, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v31
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v30
; SI-NEXT:    v_lshlrev_b32_e32 v36, 16, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v29
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v27
; SI-NEXT:    v_or_b32_e32 v35, v35, v36
; SI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v25
; SI-NEXT:    buffer_store_dword v35, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v35, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v33, v33, v34
; SI-NEXT:    v_lshlrev_b32_e32 v32, 16, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v23
; SI-NEXT:    buffer_store_dword v33, v35, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v33, vcc, 8, v0
; SI-NEXT:    v_or_b32_e32 v31, v31, v32
; SI-NEXT:    v_lshlrev_b32_e32 v30, 16, v30
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v24
; SI-NEXT:    v_cvt_f16_f32_e32 v21, v21
; SI-NEXT:    buffer_store_dword v31, v33, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v31, vcc, 12, v0
; SI-NEXT:    v_or_b32_e32 v29, v29, v30
; SI-NEXT:    v_lshlrev_b32_e32 v27, 16, v27
; SI-NEXT:    v_cvt_f16_f32_e32 v22, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    buffer_store_dword v29, v31, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v29, vcc, 16, v0
; SI-NEXT:    v_or_b32_e32 v27, v28, v27
; SI-NEXT:    v_lshlrev_b32_e32 v25, 16, v25
; SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    buffer_store_dword v27, v29, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v27, vcc, 20, v0
; SI-NEXT:    v_or_b32_e32 v25, v26, v25
; SI-NEXT:    v_lshlrev_b32_e32 v23, 16, v23
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    buffer_store_dword v25, v27, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v25, vcc, 24, v0
; SI-NEXT:    v_or_b32_e32 v23, v24, v23
; SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    buffer_store_dword v23, v25, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v23, vcc, 28, v0
; SI-NEXT:    v_or_b32_e32 v21, v22, v21
; SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    buffer_store_dword v21, v23, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v21, vcc, 32, v0
; SI-NEXT:    v_or_b32_e32 v19, v20, v19
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v17
; SI-NEXT:    buffer_store_dword v19, v21, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v19, vcc, 36, v0
; SI-NEXT:    v_or_b32_e32 v17, v18, v17
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    buffer_store_dword v17, v19, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v17, vcc, 40, v0
; SI-NEXT:    v_or_b32_e32 v15, v16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    buffer_store_dword v15, v17, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v15, vcc, 44, v0
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    buffer_store_dword v12, v15, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v13
; SI-NEXT:    v_add_i32_e32 v13, vcc, 48, v0
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_or_b32_e32 v10, v12, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    buffer_store_dword v10, v13, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 52, v0
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v8
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    buffer_store_dword v8, v11, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v9
; SI-NEXT:    v_add_i32_e32 v9, vcc, 56, v0
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    buffer_store_dword v6, v9, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 60, v0
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v6, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    buffer_store_dword v4, v7, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v5
; SI-NEXT:    v_add_i32_e32 v5, vcc, 64, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v2, v4, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    buffer_store_dword v2, v5, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v3
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB22_4:
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    ; implicit-def: $vgpr22
; SI-NEXT:    ; implicit-def: $vgpr21
; SI-NEXT:    ; implicit-def: $vgpr20
; SI-NEXT:    ; implicit-def: $vgpr19
; SI-NEXT:    ; implicit-def: $vgpr18
; SI-NEXT:    ; implicit-def: $vgpr17
; SI-NEXT:    ; implicit-def: $vgpr16
; SI-NEXT:    ; implicit-def: $vgpr15
; SI-NEXT:    ; implicit-def: $vgpr14
; SI-NEXT:    ; implicit-def: $vgpr12
; SI-NEXT:    ; implicit-def: $vgpr13
; SI-NEXT:    ; implicit-def: $vgpr10
; SI-NEXT:    ; implicit-def: $vgpr11
; SI-NEXT:    ; implicit-def: $vgpr8
; SI-NEXT:    ; implicit-def: $vgpr9
; SI-NEXT:    ; implicit-def: $vgpr6
; SI-NEXT:    ; implicit-def: $vgpr7
; SI-NEXT:    ; implicit-def: $vgpr4
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $vgpr2
; SI-NEXT:    ; implicit-def: $vgpr3
; SI-NEXT:    ; implicit-def: $vgpr1
; SI-NEXT:    s_branch .LBB22_2
;
; VI-LABEL: s_bitcast_v9i64_to_v36f16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_readfirstlane_b32 s9, v0
; VI-NEXT:    v_readfirstlane_b32 s8, v1
; VI-NEXT:    v_readfirstlane_b32 s6, v2
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_readfirstlane_b32 s7, v3
; VI-NEXT:    s_cbranch_scc0 .LBB22_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:    s_cbranch_execnz .LBB22_3
; VI-NEXT:  .LBB22_2: ; %cmp.true
; VI-NEXT:    s_add_u32 s6, s6, 3
; VI-NEXT:    s_addc_u32 s7, s7, 0
; VI-NEXT:    s_add_u32 s9, s9, 3
; VI-NEXT:    s_addc_u32 s8, s8, 0
; VI-NEXT:    s_add_u32 s28, s28, 3
; VI-NEXT:    s_addc_u32 s29, s29, 0
; VI-NEXT:    s_add_u32 s26, s26, 3
; VI-NEXT:    s_addc_u32 s27, s27, 0
; VI-NEXT:    s_add_u32 s24, s24, 3
; VI-NEXT:    s_addc_u32 s25, s25, 0
; VI-NEXT:    s_add_u32 s22, s22, 3
; VI-NEXT:    s_addc_u32 s23, s23, 0
; VI-NEXT:    s_add_u32 s20, s20, 3
; VI-NEXT:    s_addc_u32 s21, s21, 0
; VI-NEXT:    s_add_u32 s18, s18, 3
; VI-NEXT:    s_addc_u32 s19, s19, 0
; VI-NEXT:    s_add_u32 s16, s16, 3
; VI-NEXT:    s_addc_u32 s17, s17, 0
; VI-NEXT:    s_lshr_b32 s10, s7, 16
; VI-NEXT:    s_lshr_b32 s11, s6, 16
; VI-NEXT:    s_lshr_b32 s12, s8, 16
; VI-NEXT:    s_lshr_b32 s13, s9, 16
; VI-NEXT:    s_lshr_b32 s14, s29, 16
; VI-NEXT:    s_lshr_b32 s15, s28, 16
; VI-NEXT:    s_lshr_b32 s40, s27, 16
; VI-NEXT:    s_lshr_b32 s41, s26, 16
; VI-NEXT:    s_lshr_b32 s42, s25, 16
; VI-NEXT:    s_lshr_b32 s43, s24, 16
; VI-NEXT:    s_lshr_b32 s44, s23, 16
; VI-NEXT:    s_lshr_b32 s45, s22, 16
; VI-NEXT:    s_lshr_b32 s46, s21, 16
; VI-NEXT:    s_lshr_b32 s47, s20, 16
; VI-NEXT:    s_lshr_b32 s56, s19, 16
; VI-NEXT:    s_lshr_b32 s57, s18, 16
; VI-NEXT:    s_lshr_b32 s58, s17, 16
; VI-NEXT:    s_lshr_b32 s59, s16, 16
; VI-NEXT:  .LBB22_3: ; %end
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s59, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s16, s58, 16
; VI-NEXT:    s_or_b32 s5, s5, s16
; VI-NEXT:    s_and_b32 s16, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s17, s57, 16
; VI-NEXT:    s_or_b32 s16, s16, s17
; VI-NEXT:    s_and_b32 s17, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s18, s56, 16
; VI-NEXT:    s_or_b32 s17, s17, s18
; VI-NEXT:    s_and_b32 s18, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s19, s47, 16
; VI-NEXT:    s_or_b32 s18, s18, s19
; VI-NEXT:    s_and_b32 s19, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s20, s46, 16
; VI-NEXT:    s_or_b32 s19, s19, s20
; VI-NEXT:    s_and_b32 s20, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s21, s45, 16
; VI-NEXT:    s_or_b32 s20, s20, s21
; VI-NEXT:    s_and_b32 s21, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s22, s44, 16
; VI-NEXT:    s_or_b32 s21, s21, s22
; VI-NEXT:    s_and_b32 s22, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s23, s43, 16
; VI-NEXT:    s_or_b32 s22, s22, s23
; VI-NEXT:    s_and_b32 s23, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s24, s42, 16
; VI-NEXT:    s_or_b32 s23, s23, s24
; VI-NEXT:    s_and_b32 s24, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s25, s41, 16
; VI-NEXT:    s_or_b32 s24, s24, s25
; VI-NEXT:    s_and_b32 s25, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s26, s40, 16
; VI-NEXT:    s_or_b32 s25, s25, s26
; VI-NEXT:    s_and_b32 s26, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s15, s26, s15
; VI-NEXT:    s_and_b32 s26, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_and_b32 s9, 0xffff, s9
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_and_b32 s8, 0xffff, s8
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_and_b32 s6, 0xffff, s6
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_and_b32 s7, 0xffff, s7
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s14, s26, s14
; VI-NEXT:    s_or_b32 s9, s9, s13
; VI-NEXT:    s_or_b32 s8, s8, s12
; VI-NEXT:    s_or_b32 s6, s6, s11
; VI-NEXT:    s_or_b32 s7, s7, s10
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s16
; VI-NEXT:    v_mov_b32_e32 v3, s17
; VI-NEXT:    v_mov_b32_e32 v4, s18
; VI-NEXT:    v_mov_b32_e32 v5, s19
; VI-NEXT:    v_mov_b32_e32 v6, s20
; VI-NEXT:    v_mov_b32_e32 v7, s21
; VI-NEXT:    v_mov_b32_e32 v8, s22
; VI-NEXT:    v_mov_b32_e32 v9, s23
; VI-NEXT:    v_mov_b32_e32 v10, s24
; VI-NEXT:    v_mov_b32_e32 v11, s25
; VI-NEXT:    v_mov_b32_e32 v12, s15
; VI-NEXT:    v_mov_b32_e32 v13, s14
; VI-NEXT:    v_mov_b32_e32 v14, s9
; VI-NEXT:    v_mov_b32_e32 v15, s8
; VI-NEXT:    v_mov_b32_e32 v16, s6
; VI-NEXT:    v_mov_b32_e32 v17, s7
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB22_4:
; VI-NEXT:    ; implicit-def: $sgpr59
; VI-NEXT:    ; implicit-def: $sgpr58
; VI-NEXT:    ; implicit-def: $sgpr57
; VI-NEXT:    ; implicit-def: $sgpr56
; VI-NEXT:    ; implicit-def: $sgpr47
; VI-NEXT:    ; implicit-def: $sgpr46
; VI-NEXT:    ; implicit-def: $sgpr45
; VI-NEXT:    ; implicit-def: $sgpr44
; VI-NEXT:    ; implicit-def: $sgpr43
; VI-NEXT:    ; implicit-def: $sgpr42
; VI-NEXT:    ; implicit-def: $sgpr41
; VI-NEXT:    ; implicit-def: $sgpr40
; VI-NEXT:    ; implicit-def: $sgpr15
; VI-NEXT:    ; implicit-def: $sgpr14
; VI-NEXT:    ; implicit-def: $sgpr13
; VI-NEXT:    ; implicit-def: $sgpr12
; VI-NEXT:    ; implicit-def: $sgpr11
; VI-NEXT:    ; implicit-def: $sgpr10
; VI-NEXT:    s_branch .LBB22_2
;
; GFX9-LABEL: s_bitcast_v9i64_to_v36f16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_readfirstlane_b32 s6, v0
; GFX9-NEXT:    v_readfirstlane_b32 s7, v1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v2
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_readfirstlane_b32 s9, v3
; GFX9-NEXT:    s_cbranch_scc0 .LBB22_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:    s_cbranch_execnz .LBB22_3
; GFX9-NEXT:  .LBB22_2: ; %cmp.true
; GFX9-NEXT:    s_add_u32 s8, s8, 3
; GFX9-NEXT:    s_addc_u32 s9, s9, 0
; GFX9-NEXT:    s_add_u32 s6, s6, 3
; GFX9-NEXT:    s_addc_u32 s7, s7, 0
; GFX9-NEXT:    s_add_u32 s28, s28, 3
; GFX9-NEXT:    s_addc_u32 s29, s29, 0
; GFX9-NEXT:    s_add_u32 s26, s26, 3
; GFX9-NEXT:    s_addc_u32 s27, s27, 0
; GFX9-NEXT:    s_add_u32 s24, s24, 3
; GFX9-NEXT:    s_addc_u32 s25, s25, 0
; GFX9-NEXT:    s_add_u32 s22, s22, 3
; GFX9-NEXT:    s_addc_u32 s23, s23, 0
; GFX9-NEXT:    s_add_u32 s20, s20, 3
; GFX9-NEXT:    s_addc_u32 s21, s21, 0
; GFX9-NEXT:    s_add_u32 s18, s18, 3
; GFX9-NEXT:    s_addc_u32 s19, s19, 0
; GFX9-NEXT:    s_add_u32 s16, s16, 3
; GFX9-NEXT:    s_addc_u32 s17, s17, 0
; GFX9-NEXT:    s_lshr_b32 s10, s9, 16
; GFX9-NEXT:    s_lshr_b32 s11, s8, 16
; GFX9-NEXT:    s_lshr_b32 s12, s7, 16
; GFX9-NEXT:    s_lshr_b32 s13, s6, 16
; GFX9-NEXT:    s_lshr_b32 s14, s29, 16
; GFX9-NEXT:    s_lshr_b32 s15, s28, 16
; GFX9-NEXT:    s_lshr_b32 s40, s27, 16
; GFX9-NEXT:    s_lshr_b32 s41, s26, 16
; GFX9-NEXT:    s_lshr_b32 s42, s25, 16
; GFX9-NEXT:    s_lshr_b32 s43, s24, 16
; GFX9-NEXT:    s_lshr_b32 s44, s23, 16
; GFX9-NEXT:    s_lshr_b32 s45, s22, 16
; GFX9-NEXT:    s_lshr_b32 s46, s21, 16
; GFX9-NEXT:    s_lshr_b32 s47, s20, 16
; GFX9-NEXT:    s_lshr_b32 s56, s19, 16
; GFX9-NEXT:    s_lshr_b32 s57, s18, 16
; GFX9-NEXT:    s_lshr_b32 s58, s17, 16
; GFX9-NEXT:    s_lshr_b32 s59, s16, 16
; GFX9-NEXT:  .LBB22_3: ; %end
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s16, s59
; GFX9-NEXT:    s_pack_ll_b32_b16 s5, s17, s58
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s18, s57
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s19, s56
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s20, s47
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s21, s46
; GFX9-NEXT:    s_pack_ll_b32_b16 s20, s22, s45
; GFX9-NEXT:    s_pack_ll_b32_b16 s21, s23, s44
; GFX9-NEXT:    s_pack_ll_b32_b16 s22, s24, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s23, s25, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s24, s26, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s25, s27, s40
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s28, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s29, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s6, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s7, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s8, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s9, s10
; GFX9-NEXT:    v_mov_b32_e32 v0, s4
; GFX9-NEXT:    v_mov_b32_e32 v1, s5
; GFX9-NEXT:    v_mov_b32_e32 v2, s16
; GFX9-NEXT:    v_mov_b32_e32 v3, s17
; GFX9-NEXT:    v_mov_b32_e32 v4, s18
; GFX9-NEXT:    v_mov_b32_e32 v5, s19
; GFX9-NEXT:    v_mov_b32_e32 v6, s20
; GFX9-NEXT:    v_mov_b32_e32 v7, s21
; GFX9-NEXT:    v_mov_b32_e32 v8, s22
; GFX9-NEXT:    v_mov_b32_e32 v9, s23
; GFX9-NEXT:    v_mov_b32_e32 v10, s24
; GFX9-NEXT:    v_mov_b32_e32 v11, s25
; GFX9-NEXT:    v_mov_b32_e32 v12, s15
; GFX9-NEXT:    v_mov_b32_e32 v13, s14
; GFX9-NEXT:    v_mov_b32_e32 v14, s6
; GFX9-NEXT:    v_mov_b32_e32 v15, s7
; GFX9-NEXT:    v_mov_b32_e32 v16, s8
; GFX9-NEXT:    v_mov_b32_e32 v17, s9
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB22_4:
; GFX9-NEXT:    ; implicit-def: $sgpr59
; GFX9-NEXT:    ; implicit-def: $sgpr58
; GFX9-NEXT:    ; implicit-def: $sgpr57
; GFX9-NEXT:    ; implicit-def: $sgpr56
; GFX9-NEXT:    ; implicit-def: $sgpr47
; GFX9-NEXT:    ; implicit-def: $sgpr46
; GFX9-NEXT:    ; implicit-def: $sgpr45
; GFX9-NEXT:    ; implicit-def: $sgpr44
; GFX9-NEXT:    ; implicit-def: $sgpr43
; GFX9-NEXT:    ; implicit-def: $sgpr42
; GFX9-NEXT:    ; implicit-def: $sgpr41
; GFX9-NEXT:    ; implicit-def: $sgpr40
; GFX9-NEXT:    ; implicit-def: $sgpr15
; GFX9-NEXT:    ; implicit-def: $sgpr14
; GFX9-NEXT:    ; implicit-def: $sgpr13
; GFX9-NEXT:    ; implicit-def: $sgpr12
; GFX9-NEXT:    ; implicit-def: $sgpr11
; GFX9-NEXT:    ; implicit-def: $sgpr10
; GFX9-NEXT:    s_branch .LBB22_2
;
; GFX11-LABEL: s_bitcast_v9i64_to_v36f16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s46, 0
; GFX11-NEXT:    s_and_b32 s4, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB22_4
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s46
; GFX11-NEXT:    s_cbranch_vccnz .LBB22_3
; GFX11-NEXT:  .LBB22_2: ; %cmp.true
; GFX11-NEXT:    s_add_u32 s28, s28, 3
; GFX11-NEXT:    s_addc_u32 s29, s29, 0
; GFX11-NEXT:    s_add_u32 s26, s26, 3
; GFX11-NEXT:    s_addc_u32 s27, s27, 0
; GFX11-NEXT:    s_add_u32 s24, s24, 3
; GFX11-NEXT:    s_addc_u32 s25, s25, 0
; GFX11-NEXT:    s_add_u32 s22, s22, 3
; GFX11-NEXT:    s_addc_u32 s23, s23, 0
; GFX11-NEXT:    s_add_u32 s20, s20, 3
; GFX11-NEXT:    s_addc_u32 s21, s21, 0
; GFX11-NEXT:    s_add_u32 s18, s18, 3
; GFX11-NEXT:    s_addc_u32 s19, s19, 0
; GFX11-NEXT:    s_add_u32 s16, s16, 3
; GFX11-NEXT:    s_addc_u32 s17, s17, 0
; GFX11-NEXT:    s_add_u32 s2, s2, 3
; GFX11-NEXT:    s_addc_u32 s3, s3, 0
; GFX11-NEXT:    s_add_u32 s0, s0, 3
; GFX11-NEXT:    s_addc_u32 s1, s1, 0
; GFX11-NEXT:    s_lshr_b32 s4, s29, 16
; GFX11-NEXT:    s_lshr_b32 s5, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s7, s26, 16
; GFX11-NEXT:    s_lshr_b32 s8, s25, 16
; GFX11-NEXT:    s_lshr_b32 s9, s24, 16
; GFX11-NEXT:    s_lshr_b32 s10, s23, 16
; GFX11-NEXT:    s_lshr_b32 s11, s22, 16
; GFX11-NEXT:    s_lshr_b32 s12, s21, 16
; GFX11-NEXT:    s_lshr_b32 s13, s20, 16
; GFX11-NEXT:    s_lshr_b32 s14, s19, 16
; GFX11-NEXT:    s_lshr_b32 s15, s18, 16
; GFX11-NEXT:    s_lshr_b32 s40, s17, 16
; GFX11-NEXT:    s_lshr_b32 s41, s16, 16
; GFX11-NEXT:    s_lshr_b32 s42, s3, 16
; GFX11-NEXT:    s_lshr_b32 s43, s2, 16
; GFX11-NEXT:    s_lshr_b32 s44, s1, 16
; GFX11-NEXT:    s_lshr_b32 s45, s0, 16
; GFX11-NEXT:  .LBB22_3: ; %end
; GFX11-NEXT:    s_delay_alu instid0(SALU_CYCLE_1)
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s16, s41
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s17, s40
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s18, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s19, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s20, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s21, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s22, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s23, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s24, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s25, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s26, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s27, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s28, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s29, s4
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s16 :: v_dual_mov_b32 v5, s17
; GFX11-NEXT:    v_dual_mov_b32 v6, s15 :: v_dual_mov_b32 v7, s14
; GFX11-NEXT:    v_dual_mov_b32 v8, s13 :: v_dual_mov_b32 v9, s12
; GFX11-NEXT:    v_dual_mov_b32 v10, s11 :: v_dual_mov_b32 v11, s10
; GFX11-NEXT:    v_dual_mov_b32 v12, s9 :: v_dual_mov_b32 v13, s8
; GFX11-NEXT:    v_dual_mov_b32 v14, s7 :: v_dual_mov_b32 v15, s6
; GFX11-NEXT:    v_dual_mov_b32 v16, s5 :: v_dual_mov_b32 v17, s4
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB22_4:
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    ; implicit-def: $sgpr4
; GFX11-NEXT:    s_branch .LBB22_2
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <9 x i64> %a, splat (i64 3)
  %a2 = bitcast <9 x i64> %a1 to <36 x half>
  br label %end

cmp.false:
  %a3 = bitcast <9 x i64> %a to <36 x half>
  br label %end

end:
  %phi = phi <36 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x half> %phi
}

define inreg <9 x i64> @s_bitcast_v36f16_to_v9i64_inreg(<36 x half> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36f16_to_v9i64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v63, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(6)
; SI-NEXT:    v_cvt_f16_f32_e32 v57, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v56, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v47, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v51, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v50, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v49, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v48, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v39, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v38, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v37, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v35, s17
; SI-NEXT:    v_cvt_f16_f32_e32 v34, s16
; SI-NEXT:    s_waitcnt expcnt(1)
; SI-NEXT:    v_cvt_f16_f32_e32 v62, s19
; SI-NEXT:    v_cvt_f16_f32_e32 v33, s18
; SI-NEXT:    v_cvt_f16_f32_e32 v60, s21
; SI-NEXT:    v_cvt_f16_f32_e32 v61, s20
; SI-NEXT:    v_cvt_f16_f32_e32 v44, s23
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v63, s22
; SI-NEXT:    v_cvt_f16_f32_e32 v42, s25
; SI-NEXT:    v_cvt_f16_f32_e32 v41, s24
; SI-NEXT:    v_cvt_f16_f32_e32 v40, s27
; SI-NEXT:    v_cvt_f16_f32_e32 v55, s26
; SI-NEXT:    v_cvt_f16_f32_e32 v59, s29
; SI-NEXT:    v_cvt_f16_f32_e32 v58, s28
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_cbranch_scc0 .LBB23_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v35
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v62
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v60
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v44
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v42
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v40
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v59
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v57
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v47
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v50
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v48
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v38
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v36
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v30
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v26
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v0, v34, v0
; SI-NEXT:    v_or_b32_e32 v1, v33, v1
; SI-NEXT:    v_or_b32_e32 v2, v61, v2
; SI-NEXT:    v_or_b32_e32 v3, v63, v3
; SI-NEXT:    v_or_b32_e32 v4, v41, v4
; SI-NEXT:    v_or_b32_e32 v5, v55, v5
; SI-NEXT:    v_or_b32_e32 v6, v58, v6
; SI-NEXT:    v_or_b32_e32 v7, v56, v7
; SI-NEXT:    v_or_b32_e32 v8, v51, v8
; SI-NEXT:    v_or_b32_e32 v9, v49, v9
; SI-NEXT:    v_or_b32_e32 v10, v39, v10
; SI-NEXT:    v_or_b32_e32 v11, v37, v11
; SI-NEXT:    v_or_b32_e32 v12, v31, v12
; SI-NEXT:    v_or_b32_e32 v13, v29, v13
; SI-NEXT:    v_or_b32_e32 v14, v27, v14
; SI-NEXT:    v_or_b32_e32 v15, v25, v15
; SI-NEXT:    v_or_b32_e32 v16, v23, v16
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:    s_cbranch_execnz .LBB23_3
; SI-NEXT:  .LBB23_2: ; %cmp.true
; SI-NEXT:    v_cvt_f32_f16_e32 v0, v35
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v62
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v33
; SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v0, v1, v0
; SI-NEXT:    v_or_b32_e32 v1, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v60
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v61
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v63
; SI-NEXT:    s_waitcnt vmcnt(2)
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v41
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_or_b32_e32 v2, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v44
; SI-NEXT:    s_waitcnt vmcnt(1)
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v40
; SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v55
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; SI-NEXT:    v_or_b32_e32 v3, v4, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v42
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v58
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v47
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v5, v4
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v59
; SI-NEXT:    v_or_b32_e32 v5, v7, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v57
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v56
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v51
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v49
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_or_b32_e32 v7, v8, v7
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v50
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v48
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v38
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v9, v11, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v39
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v37
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v31
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v28
; SI-NEXT:    v_or_b32_e32 v10, v11, v10
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v36
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_or_b32_e32 v11, v13, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v30
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v29
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v27
; SI-NEXT:    v_or_b32_e32 v13, v14, v13
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v26
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v25
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_or_b32_e32 v14, v16, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    v_or_b32_e32 v15, v17, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_add_f32_e32 v18, 0x38000000, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_add_f32_e32 v19, 0x38000000, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v16
; SI-NEXT:    v_or_b32_e32 v16, v17, v16
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:  .LBB23_3: ; %end
; SI-NEXT:    buffer_load_dword v63, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB23_4:
; SI-NEXT:    buffer_store_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v55, v36
; SI-NEXT:    v_mov_b32_e32 v36, v19
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v40, v37
; SI-NEXT:    v_mov_b32_e32 v37, v18
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v41, v38
; SI-NEXT:    v_mov_b32_e32 v38, v23
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v42, v39
; SI-NEXT:    v_mov_b32_e32 v39, v24
; SI-NEXT:    v_mov_b32_e32 v43, v48
; SI-NEXT:    v_mov_b32_e32 v48, v25
; SI-NEXT:    v_mov_b32_e32 v32, v44
; SI-NEXT:    v_mov_b32_e32 v44, v49
; SI-NEXT:    v_mov_b32_e32 v49, v26
; SI-NEXT:    v_mov_b32_e32 v45, v50
; SI-NEXT:    v_mov_b32_e32 v50, v27
; SI-NEXT:    v_mov_b32_e32 v46, v51
; SI-NEXT:    v_mov_b32_e32 v51, v28
; SI-NEXT:    v_mov_b32_e32 v52, v29
; SI-NEXT:    v_mov_b32_e32 v53, v30
; SI-NEXT:    v_mov_b32_e32 v54, v31
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    v_mov_b32_e32 v24, v39
; SI-NEXT:    v_mov_b32_e32 v39, v42
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v23, v38
; SI-NEXT:    v_mov_b32_e32 v38, v41
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v18, v37
; SI-NEXT:    v_mov_b32_e32 v37, v40
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v19, v36
; SI-NEXT:    v_mov_b32_e32 v36, v55
; SI-NEXT:    buffer_load_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v31, v54
; SI-NEXT:    v_mov_b32_e32 v30, v53
; SI-NEXT:    v_mov_b32_e32 v29, v52
; SI-NEXT:    v_mov_b32_e32 v28, v51
; SI-NEXT:    v_mov_b32_e32 v51, v46
; SI-NEXT:    v_mov_b32_e32 v27, v50
; SI-NEXT:    v_mov_b32_e32 v50, v45
; SI-NEXT:    v_mov_b32_e32 v26, v49
; SI-NEXT:    v_mov_b32_e32 v49, v44
; SI-NEXT:    v_mov_b32_e32 v44, v32
; SI-NEXT:    v_mov_b32_e32 v25, v48
; SI-NEXT:    v_mov_b32_e32 v48, v43
; SI-NEXT:    s_branch .LBB23_2
;
; VI-LABEL: s_bitcast_v36f16_to_v9i64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s6, s29, 16
; VI-NEXT:    s_lshr_b32 s7, s28, 16
; VI-NEXT:    s_lshr_b32 s8, s27, 16
; VI-NEXT:    s_lshr_b32 s9, s26, 16
; VI-NEXT:    s_lshr_b32 s10, s25, 16
; VI-NEXT:    s_lshr_b32 s11, s24, 16
; VI-NEXT:    s_lshr_b32 s12, s23, 16
; VI-NEXT:    s_lshr_b32 s13, s22, 16
; VI-NEXT:    s_lshr_b32 s14, s21, 16
; VI-NEXT:    s_lshr_b32 s15, s20, 16
; VI-NEXT:    s_lshr_b32 s40, s19, 16
; VI-NEXT:    s_lshr_b32 s41, s18, 16
; VI-NEXT:    s_lshr_b32 s42, s17, 16
; VI-NEXT:    s_lshr_b32 s43, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v34, v1
; VI-NEXT:    v_mov_b32_e32 v35, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB23_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s43, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s42, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s41, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s40, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s15, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s14, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s13, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s12, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s11, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s10, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s9, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s8, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s7, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s6, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v35, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v34, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB23_3
; VI-NEXT:  .LBB23_2: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v13, 0x200
; VI-NEXT:    v_mov_b32_e32 v0, s43
; VI-NEXT:    v_mov_b32_e32 v2, s42
; VI-NEXT:    v_add_f16_sdwa v0, v0, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, s16, v13
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s17, v13
; VI-NEXT:    v_or_b32_e32 v0, v1, v0
; VI-NEXT:    v_or_b32_e32 v1, v3, v2
; VI-NEXT:    v_mov_b32_e32 v2, s41
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s18, v13
; VI-NEXT:    v_or_b32_e32 v2, v3, v2
; VI-NEXT:    v_mov_b32_e32 v3, s40
; VI-NEXT:    v_add_f16_sdwa v3, v3, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v4, s19, v13
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_mov_b32_e32 v4, s15
; VI-NEXT:    v_add_f16_sdwa v4, v4, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v5, s20, v13
; VI-NEXT:    v_or_b32_e32 v4, v5, v4
; VI-NEXT:    v_mov_b32_e32 v5, s14
; VI-NEXT:    v_add_f16_sdwa v5, v5, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v6, s21, v13
; VI-NEXT:    v_or_b32_e32 v5, v6, v5
; VI-NEXT:    v_mov_b32_e32 v6, s13
; VI-NEXT:    v_add_f16_sdwa v6, v6, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v7, s22, v13
; VI-NEXT:    v_or_b32_e32 v6, v7, v6
; VI-NEXT:    v_mov_b32_e32 v7, s12
; VI-NEXT:    v_add_f16_sdwa v7, v7, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v8, s23, v13
; VI-NEXT:    v_or_b32_e32 v7, v8, v7
; VI-NEXT:    v_mov_b32_e32 v8, s11
; VI-NEXT:    v_add_f16_sdwa v8, v8, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v9, s24, v13
; VI-NEXT:    v_or_b32_e32 v8, v9, v8
; VI-NEXT:    v_mov_b32_e32 v9, s10
; VI-NEXT:    v_add_f16_sdwa v9, v9, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v10, s25, v13
; VI-NEXT:    v_or_b32_e32 v9, v10, v9
; VI-NEXT:    v_mov_b32_e32 v10, s9
; VI-NEXT:    v_add_f16_sdwa v10, v10, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v11, s26, v13
; VI-NEXT:    v_or_b32_e32 v10, v11, v10
; VI-NEXT:    v_mov_b32_e32 v11, s8
; VI-NEXT:    v_add_f16_sdwa v11, v11, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v12, s27, v13
; VI-NEXT:    v_or_b32_e32 v11, v12, v11
; VI-NEXT:    v_mov_b32_e32 v12, s7
; VI-NEXT:    v_add_f16_sdwa v12, v12, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v14, s28, v13
; VI-NEXT:    v_or_b32_e32 v12, v14, v12
; VI-NEXT:    v_mov_b32_e32 v14, s6
; VI-NEXT:    v_add_f16_sdwa v14, v14, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v13, s29, v13
; VI-NEXT:    v_mov_b32_e32 v17, 0x200
; VI-NEXT:    v_or_b32_e32 v13, v13, v14
; VI-NEXT:    v_add_f16_sdwa v14, v35, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v15, 0x200, v35
; VI-NEXT:    v_or_b32_e32 v14, v15, v14
; VI-NEXT:    v_add_f16_sdwa v15, v34, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v16, 0x200, v34
; VI-NEXT:    v_or_b32_e32 v15, v16, v15
; VI-NEXT:    v_add_f16_sdwa v16, v33, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v33
; VI-NEXT:    v_or_b32_e32 v16, v18, v16
; VI-NEXT:    v_add_f16_sdwa v17, v32, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v32
; VI-NEXT:    v_or_b32_e32 v17, v18, v17
; VI-NEXT:  .LBB23_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB23_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB23_2
;
; GFX9-LABEL: s_bitcast_v36f16_to_v9i64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB23_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB23_3
; GFX9-NEXT:  .LBB23_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v15, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_mov_b32_e32 v13, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v14
; GFX9-NEXT:    s_movk_i32 s4, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v15
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_f16 v0, s6, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, s7, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, s8, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v3, s9, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v4, s10, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v5, s11, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v6, s12, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v7, s13, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v8, s14, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v9, s15, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v10, s16, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v11, s17, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v12, s18, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v13, s19, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v14, v14, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v15, v15, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v16, v16, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v17, v17, s4 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB23_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB23_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB23_2
;
; GFX11-LABEL: s_bitcast_v36f16_to_v9i64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB23_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB23_4
; GFX11-NEXT:  .LBB23_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s0 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s4 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s5 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s6 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s7 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s8 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s9 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s10 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s11 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v12, 0x200, s12 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v13, 0x200, s13 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v14, 0x200, s14 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v15, 0x200, s15 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v16, 0x200, s16 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v17, 0x200, s17 op_sel_hi:[0,1]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB23_3:
; GFX11-NEXT:    s_branch .LBB23_2
; GFX11-NEXT:  .LBB23_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <36 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <36 x half> %a1 to <9 x i64>
  br label %end

cmp.false:
  %a3 = bitcast <36 x half> %a to <9 x i64>
  br label %end

end:
  %phi = phi <9 x i64> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x i64> %phi
}

define inreg <36 x i16> @s_bitcast_v9f64_to_v36i16_inreg(<9 x double> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9f64_to_v36i16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_mov_b32_e32 v18, s16
; SI-NEXT:    v_mov_b32_e32 v19, s17
; SI-NEXT:    v_mov_b32_e32 v16, s18
; SI-NEXT:    v_mov_b32_e32 v17, s19
; SI-NEXT:    v_mov_b32_e32 v14, s20
; SI-NEXT:    v_mov_b32_e32 v15, s21
; SI-NEXT:    v_mov_b32_e32 v12, s22
; SI-NEXT:    v_mov_b32_e32 v13, s23
; SI-NEXT:    v_mov_b32_e32 v10, s24
; SI-NEXT:    v_mov_b32_e32 v11, s25
; SI-NEXT:    v_mov_b32_e32 v8, s26
; SI-NEXT:    v_mov_b32_e32 v9, s27
; SI-NEXT:    v_mov_b32_e32 v6, s28
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    v_mov_b32_e32 v7, s29
; SI-NEXT:    s_cbranch_scc0 .LBB24_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_alignbit_b32 v5, v4, v3, 16
; SI-NEXT:    v_alignbit_b32 v20, v2, v1, 16
; SI-NEXT:    v_alignbit_b32 v21, v7, v6, 16
; SI-NEXT:    v_alignbit_b32 v22, v9, v8, 16
; SI-NEXT:    v_alignbit_b32 v24, v11, v10, 16
; SI-NEXT:    v_alignbit_b32 v26, v13, v12, 16
; SI-NEXT:    v_alignbit_b32 v29, v15, v14, 16
; SI-NEXT:    v_alignbit_b32 v31, v17, v16, 16
; SI-NEXT:    v_alignbit_b32 v34, v19, v18, 16
; SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v4
; SI-NEXT:    v_lshrrev_b32_e32 v25, 16, v2
; SI-NEXT:    v_lshrrev_b32_e32 v27, 16, v7
; SI-NEXT:    v_lshrrev_b32_e32 v28, 16, v9
; SI-NEXT:    v_lshrrev_b32_e32 v30, 16, v11
; SI-NEXT:    v_lshrrev_b32_e32 v32, 16, v13
; SI-NEXT:    v_lshrrev_b32_e32 v33, 16, v15
; SI-NEXT:    v_lshrrev_b32_e32 v35, 16, v17
; SI-NEXT:    v_lshrrev_b32_e32 v36, 16, v19
; SI-NEXT:    s_cbranch_execnz .LBB24_3
; SI-NEXT:  .LBB24_2: ; %cmp.true
; SI-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; SI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; SI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; SI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; SI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; SI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; SI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; SI-NEXT:    v_add_f64 v[3:4], v[3:4], 1.0
; SI-NEXT:    v_add_f64 v[1:2], v[1:2], 1.0
; SI-NEXT:    v_alignbit_b32 v5, v4, v3, 16
; SI-NEXT:    v_alignbit_b32 v20, v2, v1, 16
; SI-NEXT:    v_alignbit_b32 v21, v7, v6, 16
; SI-NEXT:    v_alignbit_b32 v22, v9, v8, 16
; SI-NEXT:    v_alignbit_b32 v24, v11, v10, 16
; SI-NEXT:    v_alignbit_b32 v26, v13, v12, 16
; SI-NEXT:    v_alignbit_b32 v29, v15, v14, 16
; SI-NEXT:    v_alignbit_b32 v31, v17, v16, 16
; SI-NEXT:    v_alignbit_b32 v34, v19, v18, 16
; SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v4
; SI-NEXT:    v_lshrrev_b32_e32 v25, 16, v2
; SI-NEXT:    v_lshrrev_b32_e32 v27, 16, v7
; SI-NEXT:    v_lshrrev_b32_e32 v28, 16, v9
; SI-NEXT:    v_lshrrev_b32_e32 v30, 16, v11
; SI-NEXT:    v_lshrrev_b32_e32 v32, 16, v13
; SI-NEXT:    v_lshrrev_b32_e32 v33, 16, v15
; SI-NEXT:    v_lshrrev_b32_e32 v35, 16, v17
; SI-NEXT:    v_lshrrev_b32_e32 v36, 16, v19
; SI-NEXT:  .LBB24_3: ; %end
; SI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; SI-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; SI-NEXT:    v_or_b32_e32 v18, v18, v34
; SI-NEXT:    buffer_store_dword v18, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v18, 0xffff, v19
; SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v36
; SI-NEXT:    v_or_b32_e32 v18, v18, v19
; SI-NEXT:    v_add_i32_e32 v19, vcc, 4, v0
; SI-NEXT:    buffer_store_dword v18, v19, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v18, 16, v31
; SI-NEXT:    v_or_b32_e32 v16, v16, v18
; SI-NEXT:    v_add_i32_e32 v18, vcc, 8, v0
; SI-NEXT:    buffer_store_dword v16, v18, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v16, 0xffff, v17
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v35
; SI-NEXT:    v_or_b32_e32 v16, v16, v17
; SI-NEXT:    v_add_i32_e32 v17, vcc, 12, v0
; SI-NEXT:    buffer_store_dword v16, v17, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v14, 0xffff, v14
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v29
; SI-NEXT:    v_or_b32_e32 v14, v14, v16
; SI-NEXT:    v_add_i32_e32 v16, vcc, 16, v0
; SI-NEXT:    buffer_store_dword v14, v16, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v14, 0xffff, v15
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v33
; SI-NEXT:    v_or_b32_e32 v14, v14, v15
; SI-NEXT:    v_add_i32_e32 v15, vcc, 20, v0
; SI-NEXT:    buffer_store_dword v14, v15, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v26
; SI-NEXT:    v_or_b32_e32 v12, v12, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 24, v0
; SI-NEXT:    buffer_store_dword v12, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v12, 0xffff, v13
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v32
; SI-NEXT:    v_or_b32_e32 v12, v12, v13
; SI-NEXT:    v_add_i32_e32 v13, vcc, 28, v0
; SI-NEXT:    buffer_store_dword v12, v13, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v24
; SI-NEXT:    v_or_b32_e32 v10, v10, v12
; SI-NEXT:    v_add_i32_e32 v12, vcc, 32, v0
; SI-NEXT:    buffer_store_dword v10, v12, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v10, 0xffff, v11
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v30
; SI-NEXT:    v_or_b32_e32 v10, v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 36, v0
; SI-NEXT:    buffer_store_dword v10, v11, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v22
; SI-NEXT:    v_or_b32_e32 v8, v8, v10
; SI-NEXT:    v_add_i32_e32 v10, vcc, 40, v0
; SI-NEXT:    buffer_store_dword v8, v10, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v8, 0xffff, v9
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v28
; SI-NEXT:    v_or_b32_e32 v8, v8, v9
; SI-NEXT:    v_add_i32_e32 v9, vcc, 44, v0
; SI-NEXT:    buffer_store_dword v8, v9, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v21
; SI-NEXT:    v_or_b32_e32 v6, v6, v8
; SI-NEXT:    v_add_i32_e32 v8, vcc, 48, v0
; SI-NEXT:    buffer_store_dword v6, v8, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v6, 0xffff, v7
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v27
; SI-NEXT:    v_or_b32_e32 v6, v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 52, v0
; SI-NEXT:    buffer_store_dword v6, v7, s[0:3], 0 offen
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v20
; SI-NEXT:    v_or_b32_e32 v1, v1, v6
; SI-NEXT:    v_add_i32_e32 v6, vcc, 56, v0
; SI-NEXT:    buffer_store_dword v1, v6, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v2
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v25
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v2, vcc, 60, v0
; SI-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v3
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v5
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v2, vcc, 64, v0
; SI-NEXT:    buffer_store_dword v1, v2, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v4
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v23
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB24_4:
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr22
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr21
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr20
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    s_branch .LBB24_2
;
; VI-LABEL: s_bitcast_v9f64_to_v36i16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v18, s16
; VI-NEXT:    v_mov_b32_e32 v19, s17
; VI-NEXT:    v_mov_b32_e32 v16, s18
; VI-NEXT:    v_mov_b32_e32 v17, s19
; VI-NEXT:    v_mov_b32_e32 v14, s20
; VI-NEXT:    v_mov_b32_e32 v15, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB24_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:    s_cbranch_execnz .LBB24_3
; VI-NEXT:  .LBB24_2: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; VI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; VI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; VI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; VI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; VI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; VI-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:  .LBB24_3: ; %end
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; VI-NEXT:    v_or_b32_sdwa v4, v14, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v33
; VI-NEXT:    v_or_b32_sdwa v6, v6, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v32
; VI-NEXT:    v_or_b32_sdwa v7, v7, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v31
; VI-NEXT:    v_or_b32_sdwa v8, v8, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v30
; VI-NEXT:    v_or_b32_sdwa v9, v9, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v29
; VI-NEXT:    v_or_b32_sdwa v10, v10, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; VI-NEXT:    v_or_b32_sdwa v11, v11, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v27
; VI-NEXT:    v_lshlrev_b32_e32 v20, 16, v20
; VI-NEXT:    v_or_b32_sdwa v12, v12, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v26
; VI-NEXT:    v_or_b32_sdwa v20, v18, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v18, 16, v21
; VI-NEXT:    v_or_b32_sdwa v13, v13, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v25
; VI-NEXT:    v_or_b32_sdwa v21, v19, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v18, 16, v35
; VI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; VI-NEXT:    v_or_b32_sdwa v14, v0, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v24
; VI-NEXT:    v_or_b32_sdwa v18, v16, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v16, 16, v34
; VI-NEXT:    v_or_b32_sdwa v5, v15, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v15, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v23
; VI-NEXT:    v_or_b32_sdwa v19, v17, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v2, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v22
; VI-NEXT:    v_or_b32_sdwa v17, v3, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, v20
; VI-NEXT:    v_mov_b32_e32 v1, v21
; VI-NEXT:    v_mov_b32_e32 v2, v18
; VI-NEXT:    v_mov_b32_e32 v3, v19
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB24_4:
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr35
; VI-NEXT:    ; implicit-def: $vgpr34
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr33
; VI-NEXT:    ; implicit-def: $vgpr32
; VI-NEXT:    ; implicit-def: $vgpr31
; VI-NEXT:    ; implicit-def: $vgpr30
; VI-NEXT:    ; implicit-def: $vgpr29
; VI-NEXT:    ; implicit-def: $vgpr28
; VI-NEXT:    ; implicit-def: $vgpr27
; VI-NEXT:    ; implicit-def: $vgpr26
; VI-NEXT:    ; implicit-def: $vgpr25
; VI-NEXT:    ; implicit-def: $vgpr24
; VI-NEXT:    ; implicit-def: $vgpr23
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    s_branch .LBB24_2
;
; GFX9-LABEL: s_bitcast_v9f64_to_v36i16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_mov_b32_e32 v18, s16
; GFX9-NEXT:    v_mov_b32_e32 v19, s17
; GFX9-NEXT:    v_mov_b32_e32 v16, s18
; GFX9-NEXT:    v_mov_b32_e32 v17, s19
; GFX9-NEXT:    v_mov_b32_e32 v14, s20
; GFX9-NEXT:    v_mov_b32_e32 v15, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB24_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:    s_cbranch_execnz .LBB24_3
; GFX9-NEXT:  .LBB24_2: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; GFX9-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; GFX9-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; GFX9-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; GFX9-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; GFX9-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX9-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:  .LBB24_3: ; %end
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v14
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; GFX9-NEXT:    v_lshl_or_b32 v4, v4, 16, v14
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v15
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_lshl_or_b32 v20, v20, 16, v18
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v19
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX9-NEXT:    v_lshl_or_b32 v5, v5, 16, v14
; GFX9-NEXT:    v_lshl_or_b32 v14, v25, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v1
; GFX9-NEXT:    v_lshl_or_b32 v21, v21, 16, v18
; GFX9-NEXT:    v_lshl_or_b32 v18, v35, 16, v16
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v17
; GFX9-NEXT:    v_lshl_or_b32 v15, v24, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v2
; GFX9-NEXT:    v_lshl_or_b32 v19, v34, 16, v16
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX9-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; GFX9-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; GFX9-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX9-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX9-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX9-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; GFX9-NEXT:    v_lshl_or_b32 v16, v23, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v3
; GFX9-NEXT:    v_lshl_or_b32 v6, v33, 16, v6
; GFX9-NEXT:    v_lshl_or_b32 v7, v32, 16, v7
; GFX9-NEXT:    v_lshl_or_b32 v8, v31, 16, v8
; GFX9-NEXT:    v_lshl_or_b32 v9, v30, 16, v9
; GFX9-NEXT:    v_lshl_or_b32 v10, v29, 16, v10
; GFX9-NEXT:    v_lshl_or_b32 v11, v28, 16, v11
; GFX9-NEXT:    v_lshl_or_b32 v12, v27, 16, v12
; GFX9-NEXT:    v_lshl_or_b32 v13, v26, 16, v13
; GFX9-NEXT:    v_lshl_or_b32 v17, v22, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, v20
; GFX9-NEXT:    v_mov_b32_e32 v1, v21
; GFX9-NEXT:    v_mov_b32_e32 v2, v18
; GFX9-NEXT:    v_mov_b32_e32 v3, v19
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB24_4:
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr35
; GFX9-NEXT:    ; implicit-def: $vgpr34
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr33
; GFX9-NEXT:    ; implicit-def: $vgpr32
; GFX9-NEXT:    ; implicit-def: $vgpr31
; GFX9-NEXT:    ; implicit-def: $vgpr30
; GFX9-NEXT:    ; implicit-def: $vgpr29
; GFX9-NEXT:    ; implicit-def: $vgpr28
; GFX9-NEXT:    ; implicit-def: $vgpr27
; GFX9-NEXT:    ; implicit-def: $vgpr26
; GFX9-NEXT:    ; implicit-def: $vgpr25
; GFX9-NEXT:    ; implicit-def: $vgpr24
; GFX9-NEXT:    ; implicit-def: $vgpr23
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    s_branch .LBB24_2
;
; GFX11-LABEL: s_bitcast_v9f64_to_v36i16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB24_3
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s5, s29, 16
; GFX11-NEXT:    s_lshr_b32 s14, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s15, s26, 16
; GFX11-NEXT:    s_lshr_b32 s7, s25, 16
; GFX11-NEXT:    s_lshr_b32 s40, s24, 16
; GFX11-NEXT:    s_lshr_b32 s8, s23, 16
; GFX11-NEXT:    s_lshr_b32 s41, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s42, s20, 16
; GFX11-NEXT:    s_lshr_b32 s10, s19, 16
; GFX11-NEXT:    s_lshr_b32 s43, s18, 16
; GFX11-NEXT:    s_lshr_b32 s11, s17, 16
; GFX11-NEXT:    s_lshr_b32 s44, s16, 16
; GFX11-NEXT:    s_lshr_b32 s12, s3, 16
; GFX11-NEXT:    s_lshr_b32 s45, s2, 16
; GFX11-NEXT:    s_lshr_b32 s13, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB24_4
; GFX11-NEXT:  .LBB24_2: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[13:14], s[28:29], 1.0
; GFX11-NEXT:    v_add_f64 v[15:16], s[26:27], 1.0
; GFX11-NEXT:    v_add_f64 v[17:18], s[24:25], 1.0
; GFX11-NEXT:    v_add_f64 v[8:9], s[22:23], 1.0
; GFX11-NEXT:    v_add_f64 v[10:11], s[20:21], 1.0
; GFX11-NEXT:    v_add_f64 v[3:4], s[18:19], 1.0
; GFX11-NEXT:    v_add_f64 v[5:6], s[16:17], 1.0
; GFX11-NEXT:    v_add_f64 v[19:20], s[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], s[0:1], 1.0
; GFX11-NEXT:    v_lshrrev_b32_e32 v23, 16, v14
; GFX11-NEXT:    v_lshrrev_b32_e32 v21, 16, v13
; GFX11-NEXT:    v_lshrrev_b32_e32 v24, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v22, 16, v15
; GFX11-NEXT:    v_lshrrev_b32_e32 v25, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v12, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v28, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v26, 16, v8
; GFX11-NEXT:    v_lshrrev_b32_e32 v29, 16, v11
; GFX11-NEXT:    v_lshrrev_b32_e32 v27, 16, v10
; GFX11-NEXT:    v_lshrrev_b32_e32 v31, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 16, v3
; GFX11-NEXT:    v_lshrrev_b32_e32 v32, 16, v6
; GFX11-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX11-NEXT:    v_lshrrev_b32_e32 v33, 16, v20
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v35, 16, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v34, 16, v0
; GFX11-NEXT:    s_branch .LBB24_5
; GFX11-NEXT:  .LBB24_3:
; GFX11-NEXT:    ; implicit-def: $sgpr46
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    s_branch .LBB24_2
; GFX11-NEXT:  .LBB24_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v19, s2
; GFX11-NEXT:    v_dual_mov_b32 v5, s16 :: v_dual_mov_b32 v10, s20
; GFX11-NEXT:    v_dual_mov_b32 v3, s18 :: v_dual_mov_b32 v8, s22
; GFX11-NEXT:    v_dual_mov_b32 v17, s24 :: v_dual_mov_b32 v20, s3
; GFX11-NEXT:    v_dual_mov_b32 v15, s26 :: v_dual_mov_b32 v6, s17
; GFX11-NEXT:    v_dual_mov_b32 v13, s28 :: v_dual_mov_b32 v4, s19
; GFX11-NEXT:    v_dual_mov_b32 v1, s1 :: v_dual_mov_b32 v18, s25
; GFX11-NEXT:    v_dual_mov_b32 v11, s21 :: v_dual_mov_b32 v16, s27
; GFX11-NEXT:    v_dual_mov_b32 v9, s23 :: v_dual_mov_b32 v14, s29
; GFX11-NEXT:    v_dual_mov_b32 v34, s46 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v2, s45 :: v_dual_mov_b32 v27, s42
; GFX11-NEXT:    v_dual_mov_b32 v30, s44 :: v_dual_mov_b32 v21, s14
; GFX11-NEXT:    v_dual_mov_b32 v26, s41 :: v_dual_mov_b32 v35, s13
; GFX11-NEXT:    v_dual_mov_b32 v12, s40 :: v_dual_mov_b32 v33, s12
; GFX11-NEXT:    v_dual_mov_b32 v22, s15 :: v_dual_mov_b32 v31, s10
; GFX11-NEXT:    v_dual_mov_b32 v32, s11 :: v_dual_mov_b32 v29, s9
; GFX11-NEXT:    v_dual_mov_b32 v28, s8 :: v_dual_mov_b32 v25, s7
; GFX11-NEXT:    v_dual_mov_b32 v24, s6 :: v_dual_mov_b32 v23, s5
; GFX11-NEXT:  .LBB24_5: ; %end
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v19
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX11-NEXT:    v_lshl_or_b32 v2, v2, 16, v19
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v20
; GFX11-NEXT:    v_and_b32_e32 v20, 0xffff, v3
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX11-NEXT:    v_lshl_or_b32 v0, v34, 16, v0
; GFX11-NEXT:    v_lshl_or_b32 v3, v33, 16, v19
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v8
; GFX11-NEXT:    v_and_b32_e32 v34, 0xffff, v4
; GFX11-NEXT:    v_lshl_or_b32 v4, v30, 16, v5
; GFX11-NEXT:    v_lshl_or_b32 v5, v32, 16, v6
; GFX11-NEXT:    v_lshl_or_b32 v6, v7, 16, v20
; GFX11-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX11-NEXT:    v_and_b32_e32 v20, 0xffff, v9
; GFX11-NEXT:    v_lshl_or_b32 v8, v27, 16, v10
; GFX11-NEXT:    v_lshl_or_b32 v10, v26, 16, v19
; GFX11-NEXT:    v_lshl_or_b32 v12, v12, 16, v17
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v18
; GFX11-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX11-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX11-NEXT:    v_and_b32_e32 v18, 0xffff, v13
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v14
; GFX11-NEXT:    v_lshl_or_b32 v1, v35, 16, v1
; GFX11-NEXT:    v_lshl_or_b32 v7, v31, 16, v34
; GFX11-NEXT:    v_lshl_or_b32 v9, v29, 16, v11
; GFX11-NEXT:    v_lshl_or_b32 v11, v28, 16, v20
; GFX11-NEXT:    v_lshl_or_b32 v13, v25, 16, v17
; GFX11-NEXT:    v_lshl_or_b32 v14, v22, 16, v15
; GFX11-NEXT:    v_lshl_or_b32 v15, v24, 16, v16
; GFX11-NEXT:    v_lshl_or_b32 v16, v21, 16, v18
; GFX11-NEXT:    v_lshl_or_b32 v17, v23, 16, v19
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <9 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <9 x double> %a1 to <36 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <9 x double> %a to <36 x i16>
  br label %end

end:
  %phi = phi <36 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x i16> %phi
}

define inreg <9 x double> @s_bitcast_v36i16_to_v9f64_inreg(<36 x i16> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36i16_to_v9f64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    v_mov_b32_e32 v32, v20
; SI-NEXT:    v_mov_b32_e32 v33, v18
; SI-NEXT:    v_mov_b32_e32 v34, v16
; SI-NEXT:    v_mov_b32_e32 v35, v14
; SI-NEXT:    v_mov_b32_e32 v36, v12
; SI-NEXT:    v_mov_b32_e32 v37, v10
; SI-NEXT:    v_mov_b32_e32 v38, v8
; SI-NEXT:    v_mov_b32_e32 v39, v6
; SI-NEXT:    v_mov_b32_e32 v48, v4
; SI-NEXT:    v_mov_b32_e32 v49, v2
; SI-NEXT:    v_mov_b32_e32 v50, v0
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_lshlrev_b32_e32 v45, 16, v1
; SI-NEXT:    v_lshlrev_b32_e32 v44, 16, v3
; SI-NEXT:    v_lshlrev_b32_e32 v43, 16, v5
; SI-NEXT:    v_lshlrev_b32_e32 v42, 16, v7
; SI-NEXT:    v_lshlrev_b32_e32 v41, 16, v9
; SI-NEXT:    v_lshlrev_b32_e32 v40, 16, v11
; SI-NEXT:    v_lshlrev_b32_e32 v55, 16, v13
; SI-NEXT:    v_lshlrev_b32_e32 v54, 16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v53, 16, v17
; SI-NEXT:    v_lshlrev_b32_e32 v52, 16, v19
; SI-NEXT:    v_lshlrev_b32_e32 v51, 16, v21
; SI-NEXT:    s_cbranch_scc0 .LBB25_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v50
; SI-NEXT:    v_or_b32_e32 v7, v0, v45
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v49
; SI-NEXT:    v_or_b32_e32 v8, v0, v44
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v48
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    v_or_b32_e32 v9, v0, v43
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v39
; SI-NEXT:    s_or_b32 s4, s4, s5
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    v_or_b32_e32 v10, v0, v42
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v38
; SI-NEXT:    s_or_b32 s5, s5, s6
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    v_or_b32_e32 v11, v0, v41
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v37
; SI-NEXT:    s_or_b32 s6, s6, s7
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    v_or_b32_e32 v12, v0, v40
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v36
; SI-NEXT:    s_or_b32 s7, s7, s8
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    v_or_b32_e32 v13, v0, v55
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; SI-NEXT:    s_or_b32 s8, s8, s9
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    v_or_b32_e32 v14, v0, v54
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v34
; SI-NEXT:    s_or_b32 s9, s9, s10
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_or_b32_e32 v15, v0, v53
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; SI-NEXT:    s_or_b32 s10, s10, s11
; SI-NEXT:    v_or_b32_e32 v16, v0, v52
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; SI-NEXT:    v_or_b32_e32 v17, v0, v51
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:    s_cbranch_execnz .LBB25_3
; SI-NEXT:  .LBB25_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v50
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v45, v0
; SI-NEXT:    v_add_i32_e32 v7, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v49
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v44, v0
; SI-NEXT:    v_add_i32_e32 v8, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v48
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v43, v0
; SI-NEXT:    v_add_i32_e32 v9, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v39
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v42, v0
; SI-NEXT:    v_add_i32_e32 v10, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v38
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v41, v0
; SI-NEXT:    v_add_i32_e32 v11, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v37
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v40, v0
; SI-NEXT:    v_add_i32_e32 v12, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v36
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    v_or_b32_e32 v0, v55, v0
; SI-NEXT:    v_add_i32_e32 v13, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v35
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    v_or_b32_e32 v0, v54, v0
; SI-NEXT:    s_and_b32 s4, s16, 0xffff
; SI-NEXT:    s_lshl_b32 s5, s17, 16
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    v_add_i32_e32 v14, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v34
; SI-NEXT:    s_or_b32 s4, s5, s4
; SI-NEXT:    s_and_b32 s5, s18, 0xffff
; SI-NEXT:    s_lshl_b32 s6, s19, 16
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s5, s6, s5
; SI-NEXT:    s_and_b32 s6, s20, 0xffff
; SI-NEXT:    s_lshl_b32 s7, s21, 16
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    v_or_b32_e32 v0, v53, v0
; SI-NEXT:    s_or_b32 s6, s7, s6
; SI-NEXT:    s_and_b32 s7, s22, 0xffff
; SI-NEXT:    s_lshl_b32 s8, s23, 16
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    v_add_i32_e32 v15, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v33
; SI-NEXT:    s_or_b32 s7, s8, s7
; SI-NEXT:    s_and_b32 s8, s24, 0xffff
; SI-NEXT:    s_lshl_b32 s9, s25, 16
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_or_b32 s8, s9, s8
; SI-NEXT:    s_and_b32 s9, s26, 0xffff
; SI-NEXT:    s_lshl_b32 s10, s27, 16
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    v_or_b32_e32 v0, v52, v0
; SI-NEXT:    s_or_b32 s9, s10, s9
; SI-NEXT:    s_and_b32 s10, s28, 0xffff
; SI-NEXT:    s_lshl_b32 s11, s29, 16
; SI-NEXT:    v_add_i32_e32 v16, vcc, 0x30000, v0
; SI-NEXT:    v_add_i32_e32 v0, vcc, 3, v32
; SI-NEXT:    s_or_b32 s10, s11, s10
; SI-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; SI-NEXT:    s_add_i32 s4, s4, 0x30000
; SI-NEXT:    s_add_i32 s5, s5, 0x30000
; SI-NEXT:    s_add_i32 s6, s6, 0x30000
; SI-NEXT:    s_add_i32 s7, s7, 0x30000
; SI-NEXT:    s_add_i32 s8, s8, 0x30000
; SI-NEXT:    s_add_i32 s9, s9, 0x30000
; SI-NEXT:    s_add_i32 s10, s10, 0x30000
; SI-NEXT:    v_or_b32_e32 v0, v51, v0
; SI-NEXT:    v_add_i32_e32 v17, vcc, 0x30000, v0
; SI-NEXT:    v_mov_b32_e32 v0, s4
; SI-NEXT:    v_mov_b32_e32 v1, s5
; SI-NEXT:    v_mov_b32_e32 v2, s6
; SI-NEXT:    v_mov_b32_e32 v3, s7
; SI-NEXT:    v_mov_b32_e32 v4, s8
; SI-NEXT:    v_mov_b32_e32 v5, s9
; SI-NEXT:    v_mov_b32_e32 v6, s10
; SI-NEXT:  .LBB25_3: ; %end
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB25_4:
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    s_branch .LBB25_2
;
; VI-LABEL: s_bitcast_v36i16_to_v9f64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s43, s29, 16
; VI-NEXT:    s_lshr_b32 s42, s28, 16
; VI-NEXT:    s_lshr_b32 s41, s27, 16
; VI-NEXT:    s_lshr_b32 s40, s26, 16
; VI-NEXT:    s_lshr_b32 s15, s25, 16
; VI-NEXT:    s_lshr_b32 s14, s24, 16
; VI-NEXT:    s_lshr_b32 s13, s23, 16
; VI-NEXT:    s_lshr_b32 s12, s22, 16
; VI-NEXT:    s_lshr_b32 s11, s21, 16
; VI-NEXT:    s_lshr_b32 s10, s20, 16
; VI-NEXT:    s_lshr_b32 s9, s19, 16
; VI-NEXT:    s_lshr_b32 s8, s18, 16
; VI-NEXT:    s_lshr_b32 s7, s17, 16
; VI-NEXT:    s_lshr_b32 s6, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v35, v1
; VI-NEXT:    v_mov_b32_e32 v34, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB25_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s6, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s7, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s8, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s9, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s10, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s11, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s12, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s13, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s14, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s15, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s40, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s41, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s42, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s43, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v34, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v35, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB25_3
; VI-NEXT:  .LBB25_2: ; %cmp.true
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_lshl_b32 s6, s6, 16
; VI-NEXT:    s_and_b32 s16, s16, 0xffff
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_lshl_b32 s7, s7, 16
; VI-NEXT:    s_or_b32 s6, s6, s16
; VI-NEXT:    s_and_b32 s16, s17, 0xffff
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_lshl_b32 s8, s8, 16
; VI-NEXT:    s_or_b32 s7, s7, s16
; VI-NEXT:    s_and_b32 s16, s18, 0xffff
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_lshl_b32 s9, s9, 16
; VI-NEXT:    s_or_b32 s8, s8, s16
; VI-NEXT:    s_and_b32 s16, s19, 0xffff
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s9, s9, s16
; VI-NEXT:    s_and_b32 s16, s20, 0xffff
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_or_b32 s10, s10, s16
; VI-NEXT:    s_and_b32 s16, s21, 0xffff
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_or_b32 s11, s11, s16
; VI-NEXT:    s_and_b32 s16, s22, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v35
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_or_b32 s12, s12, s16
; VI-NEXT:    s_and_b32 s16, s23, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_or_b32 s13, s13, s16
; VI-NEXT:    s_and_b32 s16, s24, 0xffff
; VI-NEXT:    v_add_u32_e32 v15, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v33
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_lshl_b32 s5, s42, 16
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s14, s14, s16
; VI-NEXT:    s_and_b32 s16, s25, 0xffff
; VI-NEXT:    s_and_b32 s18, s28, 0xffff
; VI-NEXT:    v_or_b32_sdwa v1, v1, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_lshl_b32 s4, s43, 16
; VI-NEXT:    s_lshl_b32 s41, s41, 16
; VI-NEXT:    s_lshl_b32 s40, s40, 16
; VI-NEXT:    s_or_b32 s15, s15, s16
; VI-NEXT:    s_and_b32 s16, s26, 0xffff
; VI-NEXT:    s_and_b32 s17, s27, 0xffff
; VI-NEXT:    s_or_b32 s5, s5, s18
; VI-NEXT:    s_and_b32 s18, s29, 0xffff
; VI-NEXT:    v_lshlrev_b32_sdwa v3, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v34
; VI-NEXT:    v_add_u32_e32 v16, vcc, 0x30000, v1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v32
; VI-NEXT:    s_or_b32 s16, s40, s16
; VI-NEXT:    s_or_b32 s17, s41, s17
; VI-NEXT:    s_or_b32 s4, s4, s18
; VI-NEXT:    v_or_b32_sdwa v3, v3, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    v_or_b32_sdwa v0, v0, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
; VI-NEXT:    s_add_i32 s6, s6, 0x30000
; VI-NEXT:    s_add_i32 s7, s7, 0x30000
; VI-NEXT:    s_add_i32 s8, s8, 0x30000
; VI-NEXT:    s_add_i32 s9, s9, 0x30000
; VI-NEXT:    s_add_i32 s10, s10, 0x30000
; VI-NEXT:    s_add_i32 s11, s11, 0x30000
; VI-NEXT:    s_add_i32 s12, s12, 0x30000
; VI-NEXT:    s_add_i32 s13, s13, 0x30000
; VI-NEXT:    s_add_i32 s14, s14, 0x30000
; VI-NEXT:    s_add_i32 s15, s15, 0x30000
; VI-NEXT:    s_add_i32 s16, s16, 0x30000
; VI-NEXT:    s_add_i32 s17, s17, 0x30000
; VI-NEXT:    s_add_i32 s5, s5, 0x30000
; VI-NEXT:    s_add_i32 s4, s4, 0x30000
; VI-NEXT:    v_add_u32_e32 v14, vcc, 0x30000, v3
; VI-NEXT:    v_add_u32_e32 v17, vcc, 0x30000, v0
; VI-NEXT:    v_mov_b32_e32 v0, s6
; VI-NEXT:    v_mov_b32_e32 v1, s7
; VI-NEXT:    v_mov_b32_e32 v2, s8
; VI-NEXT:    v_mov_b32_e32 v3, s9
; VI-NEXT:    v_mov_b32_e32 v4, s10
; VI-NEXT:    v_mov_b32_e32 v5, s11
; VI-NEXT:    v_mov_b32_e32 v6, s12
; VI-NEXT:    v_mov_b32_e32 v7, s13
; VI-NEXT:    v_mov_b32_e32 v8, s14
; VI-NEXT:    v_mov_b32_e32 v9, s15
; VI-NEXT:    v_mov_b32_e32 v10, s16
; VI-NEXT:    v_mov_b32_e32 v11, s17
; VI-NEXT:    v_mov_b32_e32 v12, s5
; VI-NEXT:    v_mov_b32_e32 v13, s4
; VI-NEXT:  .LBB25_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB25_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB25_2
;
; GFX9-LABEL: s_bitcast_v36i16_to_v9f64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB25_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB25_3
; GFX9-NEXT:  .LBB25_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v0, v39, 16, v0
; GFX9-NEXT:    v_lshl_or_b32 v1, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_u16 v14, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v15, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, s6, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, s7, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, s8, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v3, s9, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v4, s10, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v5, s11, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v6, s12, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v7, s13, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v8, s14, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v9, s15, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v10, s16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v11, s17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v12, s18, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v13, s19, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v16, v16, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v17, v17, 3 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB25_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB25_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB25_2
;
; GFX11-LABEL: s_bitcast_v36i16_to_v9f64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB25_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB25_4
; GFX11-NEXT:  .LBB25_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_u16 v0, s0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, s1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, s2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v3, s3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v4, s4, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v5, s5, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v6, s6, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v7, s7, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v8, s8, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v9, s9, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v10, s10, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v11, s11, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v12, s12, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v13, s13, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v14, s14, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v15, s15, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v16, s16, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v17, s17, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB25_3:
; GFX11-NEXT:    s_branch .LBB25_2
; GFX11-NEXT:  .LBB25_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <36 x i16> %a, splat (i16 3)
  %a2 = bitcast <36 x i16> %a1 to <9 x double>
  br label %end

cmp.false:
  %a3 = bitcast <36 x i16> %a to <9 x double>
  br label %end

end:
  %phi = phi <9 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x double> %phi
}

define inreg <36 x half> @s_bitcast_v9f64_to_v36f16_inreg(<9 x double> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v9f64_to_v36f16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v5
; SI-NEXT:    v_readfirstlane_b32 s6, v1
; SI-NEXT:    v_readfirstlane_b32 s7, v2
; SI-NEXT:    v_readfirstlane_b32 s4, v3
; SI-NEXT:    s_and_b64 s[8:9], vcc, exec
; SI-NEXT:    v_readfirstlane_b32 s5, v4
; SI-NEXT:    s_cbranch_scc0 .LBB26_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_lshr_b32 s8, s5, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v1, s8
; SI-NEXT:    s_lshr_b32 s8, s4, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v2, s8
; SI-NEXT:    s_lshr_b32 s8, s7, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v4, s8
; SI-NEXT:    s_lshr_b32 s8, s6, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v6, s8
; SI-NEXT:    s_lshr_b32 s8, s29, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v8, s8
; SI-NEXT:    s_lshr_b32 s8, s28, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v10, s8
; SI-NEXT:    s_lshr_b32 s8, s27, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v13, s8
; SI-NEXT:    s_lshr_b32 s8, s26, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v15, s8
; SI-NEXT:    s_lshr_b32 s8, s25, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v17, s8
; SI-NEXT:    s_lshr_b32 s8, s24, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v19, s8
; SI-NEXT:    s_lshr_b32 s8, s23, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v21, s8
; SI-NEXT:    s_lshr_b32 s8, s22, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v23, s8
; SI-NEXT:    s_lshr_b32 s8, s21, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v25, s8
; SI-NEXT:    s_lshr_b32 s8, s20, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v28, s8
; SI-NEXT:    s_lshr_b32 s8, s19, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v30, s8
; SI-NEXT:    s_lshr_b32 s8, s18, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v32, s8
; SI-NEXT:    s_lshr_b32 s8, s17, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v34, s8
; SI-NEXT:    s_lshr_b32 s8, s16, 16
; SI-NEXT:    v_cvt_f32_f16_e32 v36, s8
; SI-NEXT:    v_cvt_f32_f16_e32 v3, s5
; SI-NEXT:    v_cvt_f32_f16_e32 v5, s4
; SI-NEXT:    v_cvt_f32_f16_e32 v7, s7
; SI-NEXT:    v_cvt_f32_f16_e32 v9, s6
; SI-NEXT:    v_cvt_f32_f16_e32 v11, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v12, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v14, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v16, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v18, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v20, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v22, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v24, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v26, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v27, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v29, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v31, s18
; SI-NEXT:    v_cvt_f32_f16_e32 v33, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v35, s16
; SI-NEXT:    s_cbranch_execnz .LBB26_3
; SI-NEXT:  .LBB26_2: ; %cmp.true
; SI-NEXT:    v_add_f64 v[1:2], s[16:17], 1.0
; SI-NEXT:    v_add_f64 v[28:29], s[18:19], 1.0
; SI-NEXT:    v_add_f64 v[25:26], s[20:21], 1.0
; SI-NEXT:    v_add_f64 v[21:22], s[22:23], 1.0
; SI-NEXT:    v_add_f64 v[17:18], s[24:25], 1.0
; SI-NEXT:    v_add_f64 v[13:14], s[26:27], 1.0
; SI-NEXT:    v_add_f64 v[10:11], s[28:29], 1.0
; SI-NEXT:    v_add_f64 v[6:7], s[6:7], 1.0
; SI-NEXT:    v_add_f64 v[4:5], s[4:5], 1.0
; SI-NEXT:    v_lshrrev_b32_e32 v36, 16, v1
; SI-NEXT:    v_lshrrev_b32_e32 v32, 16, v28
; SI-NEXT:    v_lshrrev_b32_e32 v30, 16, v29
; SI-NEXT:    v_lshrrev_b32_e32 v34, 16, v25
; SI-NEXT:    v_lshrrev_b32_e32 v37, 16, v26
; SI-NEXT:    v_lshrrev_b32_e32 v23, 16, v21
; SI-NEXT:    v_lshrrev_b32_e32 v38, 16, v22
; SI-NEXT:    v_lshrrev_b32_e32 v19, 16, v17
; SI-NEXT:    v_lshrrev_b32_e32 v39, 16, v18
; SI-NEXT:    v_lshrrev_b32_e32 v15, 16, v13
; SI-NEXT:    v_lshrrev_b32_e32 v48, 16, v14
; SI-NEXT:    v_lshrrev_b32_e32 v49, 16, v10
; SI-NEXT:    v_lshrrev_b32_e32 v8, 16, v11
; SI-NEXT:    v_lshrrev_b32_e32 v50, 16, v6
; SI-NEXT:    v_lshrrev_b32_e32 v51, 16, v7
; SI-NEXT:    v_lshrrev_b32_e32 v52, 16, v4
; SI-NEXT:    v_lshrrev_b32_e32 v53, 16, v5
; SI-NEXT:    v_lshrrev_b32_e32 v54, 16, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v4
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v10
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v20, v17
; SI-NEXT:    v_cvt_f32_f16_e32 v22, v22
; SI-NEXT:    v_cvt_f32_f16_e32 v24, v21
; SI-NEXT:    v_cvt_f32_f16_e32 v26, v26
; SI-NEXT:    v_cvt_f32_f16_e32 v27, v25
; SI-NEXT:    v_cvt_f32_f16_e32 v29, v29
; SI-NEXT:    v_cvt_f32_f16_e32 v31, v28
; SI-NEXT:    v_cvt_f32_f16_e32 v33, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v35, v1
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v53
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v52
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v51
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v50
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v49
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v48
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v39
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_cvt_f32_f16_e32 v21, v38
; SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v25, v37
; SI-NEXT:    v_cvt_f32_f16_e32 v28, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v30, v30
; SI-NEXT:    v_cvt_f32_f16_e32 v32, v32
; SI-NEXT:    v_cvt_f32_f16_e32 v34, v54
; SI-NEXT:    v_cvt_f32_f16_e32 v36, v36
; SI-NEXT:  .LBB26_3: ; %end
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v35, v35
; SI-NEXT:    v_cvt_f16_f32_e32 v34, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v33, v33
; SI-NEXT:    v_cvt_f16_f32_e32 v32, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v31
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v30
; SI-NEXT:    v_lshlrev_b32_e32 v36, 16, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v29
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v28
; SI-NEXT:    v_or_b32_e32 v35, v35, v36
; SI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v27
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v25
; SI-NEXT:    buffer_store_dword v35, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v35, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v33, v33, v34
; SI-NEXT:    v_lshlrev_b32_e32 v32, 16, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v23
; SI-NEXT:    buffer_store_dword v33, v35, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v33, vcc, 8, v0
; SI-NEXT:    v_or_b32_e32 v31, v31, v32
; SI-NEXT:    v_lshlrev_b32_e32 v30, 16, v30
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v24
; SI-NEXT:    v_cvt_f16_f32_e32 v21, v21
; SI-NEXT:    buffer_store_dword v31, v33, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v31, vcc, 12, v0
; SI-NEXT:    v_or_b32_e32 v29, v29, v30
; SI-NEXT:    v_lshlrev_b32_e32 v28, 16, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v22, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    buffer_store_dword v29, v31, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v29, vcc, 16, v0
; SI-NEXT:    v_or_b32_e32 v27, v27, v28
; SI-NEXT:    v_lshlrev_b32_e32 v25, 16, v25
; SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    buffer_store_dword v27, v29, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v27, vcc, 20, v0
; SI-NEXT:    v_or_b32_e32 v25, v26, v25
; SI-NEXT:    v_lshlrev_b32_e32 v23, 16, v23
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    buffer_store_dword v25, v27, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v25, vcc, 24, v0
; SI-NEXT:    v_or_b32_e32 v23, v24, v23
; SI-NEXT:    v_lshlrev_b32_e32 v21, 16, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    buffer_store_dword v23, v25, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v23, vcc, 28, v0
; SI-NEXT:    v_or_b32_e32 v21, v22, v21
; SI-NEXT:    v_lshlrev_b32_e32 v19, 16, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    buffer_store_dword v21, v23, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v21, vcc, 32, v0
; SI-NEXT:    v_or_b32_e32 v19, v20, v19
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    buffer_store_dword v19, v21, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v19, vcc, 36, v0
; SI-NEXT:    v_or_b32_e32 v17, v18, v17
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    buffer_store_dword v17, v19, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v17, vcc, 40, v0
; SI-NEXT:    v_or_b32_e32 v15, v16, v15
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v13
; SI-NEXT:    buffer_store_dword v15, v17, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v15, vcc, 44, v0
; SI-NEXT:    v_or_b32_e32 v13, v14, v13
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    buffer_store_dword v13, v15, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v13, vcc, 48, v0
; SI-NEXT:    v_or_b32_e32 v10, v12, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    buffer_store_dword v10, v13, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 52, v0
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v8
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    buffer_store_dword v8, v11, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v9
; SI-NEXT:    v_add_i32_e32 v9, vcc, 56, v0
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    buffer_store_dword v6, v9, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 60, v0
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v6, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    buffer_store_dword v4, v7, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v5
; SI-NEXT:    v_add_i32_e32 v5, vcc, 64, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v2, v4, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    buffer_store_dword v2, v5, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v3
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB26_4:
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    ; implicit-def: $vgpr22
; SI-NEXT:    ; implicit-def: $vgpr21
; SI-NEXT:    ; implicit-def: $vgpr20
; SI-NEXT:    ; implicit-def: $vgpr19
; SI-NEXT:    ; implicit-def: $vgpr18
; SI-NEXT:    ; implicit-def: $vgpr17
; SI-NEXT:    ; implicit-def: $vgpr16
; SI-NEXT:    ; implicit-def: $vgpr15
; SI-NEXT:    ; implicit-def: $vgpr14
; SI-NEXT:    ; implicit-def: $vgpr13
; SI-NEXT:    ; implicit-def: $vgpr12
; SI-NEXT:    ; implicit-def: $vgpr10
; SI-NEXT:    ; implicit-def: $vgpr11
; SI-NEXT:    ; implicit-def: $vgpr8
; SI-NEXT:    ; implicit-def: $vgpr9
; SI-NEXT:    ; implicit-def: $vgpr6
; SI-NEXT:    ; implicit-def: $vgpr7
; SI-NEXT:    ; implicit-def: $vgpr4
; SI-NEXT:    ; implicit-def: $vgpr5
; SI-NEXT:    ; implicit-def: $vgpr2
; SI-NEXT:    ; implicit-def: $vgpr3
; SI-NEXT:    ; implicit-def: $vgpr1
; SI-NEXT:    s_branch .LBB26_2
;
; VI-LABEL: s_bitcast_v9f64_to_v36f16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v18, s16
; VI-NEXT:    v_mov_b32_e32 v19, s17
; VI-NEXT:    v_mov_b32_e32 v16, s18
; VI-NEXT:    v_mov_b32_e32 v17, s19
; VI-NEXT:    v_mov_b32_e32 v14, s20
; VI-NEXT:    v_mov_b32_e32 v15, s21
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    s_cbranch_scc0 .LBB26_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:    s_cbranch_execnz .LBB26_3
; VI-NEXT:  .LBB26_2: ; %cmp.true
; VI-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; VI-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; VI-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; VI-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; VI-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; VI-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; VI-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; VI-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; VI-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; VI-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; VI-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; VI-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; VI-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; VI-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; VI-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; VI-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; VI-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; VI-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; VI-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; VI-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; VI-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; VI-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; VI-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; VI-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; VI-NEXT:  .LBB26_3: ; %end
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; VI-NEXT:    v_or_b32_sdwa v4, v14, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v33
; VI-NEXT:    v_or_b32_sdwa v6, v6, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v32
; VI-NEXT:    v_or_b32_sdwa v7, v7, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v31
; VI-NEXT:    v_or_b32_sdwa v8, v8, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v30
; VI-NEXT:    v_or_b32_sdwa v9, v9, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v29
; VI-NEXT:    v_or_b32_sdwa v10, v10, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; VI-NEXT:    v_or_b32_sdwa v11, v11, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v27
; VI-NEXT:    v_lshlrev_b32_e32 v20, 16, v20
; VI-NEXT:    v_or_b32_sdwa v12, v12, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v26
; VI-NEXT:    v_or_b32_sdwa v20, v18, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v18, 16, v21
; VI-NEXT:    v_or_b32_sdwa v13, v13, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v25
; VI-NEXT:    v_or_b32_sdwa v21, v19, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v18, 16, v35
; VI-NEXT:    v_lshlrev_b32_e32 v5, 16, v5
; VI-NEXT:    v_or_b32_sdwa v14, v0, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v24
; VI-NEXT:    v_or_b32_sdwa v18, v16, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v16, 16, v34
; VI-NEXT:    v_or_b32_sdwa v5, v15, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v15, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v23
; VI-NEXT:    v_or_b32_sdwa v19, v17, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v2, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v22
; VI-NEXT:    v_or_b32_sdwa v17, v3, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, v20
; VI-NEXT:    v_mov_b32_e32 v1, v21
; VI-NEXT:    v_mov_b32_e32 v2, v18
; VI-NEXT:    v_mov_b32_e32 v3, v19
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB26_4:
; VI-NEXT:    ; implicit-def: $vgpr20
; VI-NEXT:    ; implicit-def: $vgpr21
; VI-NEXT:    ; implicit-def: $vgpr35
; VI-NEXT:    ; implicit-def: $vgpr34
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr33
; VI-NEXT:    ; implicit-def: $vgpr32
; VI-NEXT:    ; implicit-def: $vgpr31
; VI-NEXT:    ; implicit-def: $vgpr30
; VI-NEXT:    ; implicit-def: $vgpr29
; VI-NEXT:    ; implicit-def: $vgpr28
; VI-NEXT:    ; implicit-def: $vgpr27
; VI-NEXT:    ; implicit-def: $vgpr26
; VI-NEXT:    ; implicit-def: $vgpr25
; VI-NEXT:    ; implicit-def: $vgpr24
; VI-NEXT:    ; implicit-def: $vgpr23
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    s_branch .LBB26_2
;
; GFX9-LABEL: s_bitcast_v9f64_to_v36f16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_mov_b32_e32 v18, s16
; GFX9-NEXT:    v_mov_b32_e32 v19, s17
; GFX9-NEXT:    v_mov_b32_e32 v16, s18
; GFX9-NEXT:    v_mov_b32_e32 v17, s19
; GFX9-NEXT:    v_mov_b32_e32 v14, s20
; GFX9-NEXT:    v_mov_b32_e32 v15, s21
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    s_cbranch_scc0 .LBB26_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:    s_cbranch_execnz .LBB26_3
; GFX9-NEXT:  .LBB26_2: ; %cmp.true
; GFX9-NEXT:    v_add_f64 v[2:3], v[2:3], 1.0
; GFX9-NEXT:    v_add_f64 v[0:1], v[0:1], 1.0
; GFX9-NEXT:    v_add_f64 v[12:13], v[12:13], 1.0
; GFX9-NEXT:    v_add_f64 v[10:11], v[10:11], 1.0
; GFX9-NEXT:    v_add_f64 v[8:9], v[8:9], 1.0
; GFX9-NEXT:    v_add_f64 v[6:7], v[6:7], 1.0
; GFX9-NEXT:    v_add_f64 v[14:15], v[14:15], 1.0
; GFX9-NEXT:    v_add_f64 v[16:17], v[16:17], 1.0
; GFX9-NEXT:    v_add_f64 v[18:19], v[18:19], 1.0
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v5, 16, v15
; GFX9-NEXT:    v_lshrrev_b32_e32 v4, 16, v14
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v17
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v16
; GFX9-NEXT:    v_lshrrev_b32_e32 v21, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v20, 16, v18
; GFX9-NEXT:  .LBB26_3: ; %end
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v14
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; GFX9-NEXT:    v_lshl_or_b32 v4, v4, 16, v14
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v15
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_lshl_or_b32 v20, v20, 16, v18
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v19
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX9-NEXT:    v_lshl_or_b32 v5, v5, 16, v14
; GFX9-NEXT:    v_lshl_or_b32 v14, v25, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v1
; GFX9-NEXT:    v_lshl_or_b32 v21, v21, 16, v18
; GFX9-NEXT:    v_lshl_or_b32 v18, v35, 16, v16
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v17
; GFX9-NEXT:    v_lshl_or_b32 v15, v24, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v2
; GFX9-NEXT:    v_lshl_or_b32 v19, v34, 16, v16
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX9-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; GFX9-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; GFX9-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX9-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX9-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX9-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; GFX9-NEXT:    v_lshl_or_b32 v16, v23, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v3
; GFX9-NEXT:    v_lshl_or_b32 v6, v33, 16, v6
; GFX9-NEXT:    v_lshl_or_b32 v7, v32, 16, v7
; GFX9-NEXT:    v_lshl_or_b32 v8, v31, 16, v8
; GFX9-NEXT:    v_lshl_or_b32 v9, v30, 16, v9
; GFX9-NEXT:    v_lshl_or_b32 v10, v29, 16, v10
; GFX9-NEXT:    v_lshl_or_b32 v11, v28, 16, v11
; GFX9-NEXT:    v_lshl_or_b32 v12, v27, 16, v12
; GFX9-NEXT:    v_lshl_or_b32 v13, v26, 16, v13
; GFX9-NEXT:    v_lshl_or_b32 v17, v22, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, v20
; GFX9-NEXT:    v_mov_b32_e32 v1, v21
; GFX9-NEXT:    v_mov_b32_e32 v2, v18
; GFX9-NEXT:    v_mov_b32_e32 v3, v19
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB26_4:
; GFX9-NEXT:    ; implicit-def: $vgpr20
; GFX9-NEXT:    ; implicit-def: $vgpr21
; GFX9-NEXT:    ; implicit-def: $vgpr35
; GFX9-NEXT:    ; implicit-def: $vgpr34
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr33
; GFX9-NEXT:    ; implicit-def: $vgpr32
; GFX9-NEXT:    ; implicit-def: $vgpr31
; GFX9-NEXT:    ; implicit-def: $vgpr30
; GFX9-NEXT:    ; implicit-def: $vgpr29
; GFX9-NEXT:    ; implicit-def: $vgpr28
; GFX9-NEXT:    ; implicit-def: $vgpr27
; GFX9-NEXT:    ; implicit-def: $vgpr26
; GFX9-NEXT:    ; implicit-def: $vgpr25
; GFX9-NEXT:    ; implicit-def: $vgpr24
; GFX9-NEXT:    ; implicit-def: $vgpr23
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    s_branch .LBB26_2
;
; GFX11-LABEL: s_bitcast_v9f64_to_v36f16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_mov_b32 s4, 0
; GFX11-NEXT:    s_and_b32 s5, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB26_3
; GFX11-NEXT:  ; %bb.1: ; %cmp.false
; GFX11-NEXT:    s_lshr_b32 s5, s29, 16
; GFX11-NEXT:    s_lshr_b32 s14, s28, 16
; GFX11-NEXT:    s_lshr_b32 s6, s27, 16
; GFX11-NEXT:    s_lshr_b32 s15, s26, 16
; GFX11-NEXT:    s_lshr_b32 s7, s25, 16
; GFX11-NEXT:    s_lshr_b32 s40, s24, 16
; GFX11-NEXT:    s_lshr_b32 s8, s23, 16
; GFX11-NEXT:    s_lshr_b32 s41, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s42, s20, 16
; GFX11-NEXT:    s_lshr_b32 s10, s19, 16
; GFX11-NEXT:    s_lshr_b32 s43, s18, 16
; GFX11-NEXT:    s_lshr_b32 s11, s17, 16
; GFX11-NEXT:    s_lshr_b32 s44, s16, 16
; GFX11-NEXT:    s_lshr_b32 s12, s3, 16
; GFX11-NEXT:    s_lshr_b32 s45, s2, 16
; GFX11-NEXT:    s_lshr_b32 s13, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s4
; GFX11-NEXT:    s_cbranch_vccnz .LBB26_4
; GFX11-NEXT:  .LBB26_2: ; %cmp.true
; GFX11-NEXT:    v_add_f64 v[13:14], s[28:29], 1.0
; GFX11-NEXT:    v_add_f64 v[15:16], s[26:27], 1.0
; GFX11-NEXT:    v_add_f64 v[17:18], s[24:25], 1.0
; GFX11-NEXT:    v_add_f64 v[8:9], s[22:23], 1.0
; GFX11-NEXT:    v_add_f64 v[10:11], s[20:21], 1.0
; GFX11-NEXT:    v_add_f64 v[3:4], s[18:19], 1.0
; GFX11-NEXT:    v_add_f64 v[5:6], s[16:17], 1.0
; GFX11-NEXT:    v_add_f64 v[19:20], s[2:3], 1.0
; GFX11-NEXT:    v_add_f64 v[0:1], s[0:1], 1.0
; GFX11-NEXT:    v_lshrrev_b32_e32 v23, 16, v14
; GFX11-NEXT:    v_lshrrev_b32_e32 v21, 16, v13
; GFX11-NEXT:    v_lshrrev_b32_e32 v24, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v22, 16, v15
; GFX11-NEXT:    v_lshrrev_b32_e32 v25, 16, v18
; GFX11-NEXT:    v_lshrrev_b32_e32 v12, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v28, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v26, 16, v8
; GFX11-NEXT:    v_lshrrev_b32_e32 v29, 16, v11
; GFX11-NEXT:    v_lshrrev_b32_e32 v27, 16, v10
; GFX11-NEXT:    v_lshrrev_b32_e32 v31, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v7, 16, v3
; GFX11-NEXT:    v_lshrrev_b32_e32 v32, 16, v6
; GFX11-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX11-NEXT:    v_lshrrev_b32_e32 v33, 16, v20
; GFX11-NEXT:    v_lshrrev_b32_e32 v2, 16, v19
; GFX11-NEXT:    v_lshrrev_b32_e32 v35, 16, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v34, 16, v0
; GFX11-NEXT:    s_branch .LBB26_5
; GFX11-NEXT:  .LBB26_3:
; GFX11-NEXT:    ; implicit-def: $sgpr46
; GFX11-NEXT:    ; implicit-def: $sgpr13
; GFX11-NEXT:    ; implicit-def: $sgpr45
; GFX11-NEXT:    ; implicit-def: $sgpr12
; GFX11-NEXT:    ; implicit-def: $sgpr44
; GFX11-NEXT:    ; implicit-def: $sgpr11
; GFX11-NEXT:    ; implicit-def: $sgpr43
; GFX11-NEXT:    ; implicit-def: $sgpr10
; GFX11-NEXT:    ; implicit-def: $sgpr42
; GFX11-NEXT:    ; implicit-def: $sgpr9
; GFX11-NEXT:    ; implicit-def: $sgpr41
; GFX11-NEXT:    ; implicit-def: $sgpr8
; GFX11-NEXT:    ; implicit-def: $sgpr40
; GFX11-NEXT:    ; implicit-def: $sgpr7
; GFX11-NEXT:    ; implicit-def: $sgpr15
; GFX11-NEXT:    ; implicit-def: $sgpr6
; GFX11-NEXT:    ; implicit-def: $sgpr14
; GFX11-NEXT:    ; implicit-def: $sgpr5
; GFX11-NEXT:    s_branch .LBB26_2
; GFX11-NEXT:  .LBB26_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v19, s2
; GFX11-NEXT:    v_dual_mov_b32 v5, s16 :: v_dual_mov_b32 v10, s20
; GFX11-NEXT:    v_dual_mov_b32 v3, s18 :: v_dual_mov_b32 v8, s22
; GFX11-NEXT:    v_dual_mov_b32 v17, s24 :: v_dual_mov_b32 v20, s3
; GFX11-NEXT:    v_dual_mov_b32 v15, s26 :: v_dual_mov_b32 v6, s17
; GFX11-NEXT:    v_dual_mov_b32 v13, s28 :: v_dual_mov_b32 v4, s19
; GFX11-NEXT:    v_dual_mov_b32 v1, s1 :: v_dual_mov_b32 v18, s25
; GFX11-NEXT:    v_dual_mov_b32 v11, s21 :: v_dual_mov_b32 v16, s27
; GFX11-NEXT:    v_dual_mov_b32 v9, s23 :: v_dual_mov_b32 v14, s29
; GFX11-NEXT:    v_dual_mov_b32 v34, s46 :: v_dual_mov_b32 v7, s43
; GFX11-NEXT:    v_dual_mov_b32 v2, s45 :: v_dual_mov_b32 v27, s42
; GFX11-NEXT:    v_dual_mov_b32 v30, s44 :: v_dual_mov_b32 v21, s14
; GFX11-NEXT:    v_dual_mov_b32 v26, s41 :: v_dual_mov_b32 v35, s13
; GFX11-NEXT:    v_dual_mov_b32 v12, s40 :: v_dual_mov_b32 v33, s12
; GFX11-NEXT:    v_dual_mov_b32 v22, s15 :: v_dual_mov_b32 v31, s10
; GFX11-NEXT:    v_dual_mov_b32 v32, s11 :: v_dual_mov_b32 v29, s9
; GFX11-NEXT:    v_dual_mov_b32 v28, s8 :: v_dual_mov_b32 v25, s7
; GFX11-NEXT:    v_dual_mov_b32 v24, s6 :: v_dual_mov_b32 v23, s5
; GFX11-NEXT:  .LBB26_5: ; %end
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v19
; GFX11-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX11-NEXT:    v_lshl_or_b32 v2, v2, 16, v19
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v20
; GFX11-NEXT:    v_and_b32_e32 v20, 0xffff, v3
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX11-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX11-NEXT:    v_lshl_or_b32 v0, v34, 16, v0
; GFX11-NEXT:    v_lshl_or_b32 v3, v33, 16, v19
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v8
; GFX11-NEXT:    v_and_b32_e32 v34, 0xffff, v4
; GFX11-NEXT:    v_lshl_or_b32 v4, v30, 16, v5
; GFX11-NEXT:    v_lshl_or_b32 v5, v32, 16, v6
; GFX11-NEXT:    v_lshl_or_b32 v6, v7, 16, v20
; GFX11-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX11-NEXT:    v_and_b32_e32 v20, 0xffff, v9
; GFX11-NEXT:    v_lshl_or_b32 v8, v27, 16, v10
; GFX11-NEXT:    v_lshl_or_b32 v10, v26, 16, v19
; GFX11-NEXT:    v_lshl_or_b32 v12, v12, 16, v17
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v18
; GFX11-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX11-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX11-NEXT:    v_and_b32_e32 v18, 0xffff, v13
; GFX11-NEXT:    v_and_b32_e32 v19, 0xffff, v14
; GFX11-NEXT:    v_lshl_or_b32 v1, v35, 16, v1
; GFX11-NEXT:    v_lshl_or_b32 v7, v31, 16, v34
; GFX11-NEXT:    v_lshl_or_b32 v9, v29, 16, v11
; GFX11-NEXT:    v_lshl_or_b32 v11, v28, 16, v20
; GFX11-NEXT:    v_lshl_or_b32 v13, v25, 16, v17
; GFX11-NEXT:    v_lshl_or_b32 v14, v22, 16, v15
; GFX11-NEXT:    v_lshl_or_b32 v15, v24, 16, v16
; GFX11-NEXT:    v_lshl_or_b32 v16, v21, 16, v18
; GFX11-NEXT:    v_lshl_or_b32 v17, v23, 16, v19
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <9 x double> %a, splat (double 1.000000e+00)
  %a2 = bitcast <9 x double> %a1 to <36 x half>
  br label %end

cmp.false:
  %a3 = bitcast <9 x double> %a to <36 x half>
  br label %end

end:
  %phi = phi <36 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x half> %phi
}

define inreg <9 x double> @s_bitcast_v36f16_to_v9f64_inreg(<36 x half> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36f16_to_v9f64_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v63, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(6)
; SI-NEXT:    v_cvt_f16_f32_e32 v57, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v56, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v47, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v51, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v50, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v49, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v48, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v39, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v38, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v37, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v35, s17
; SI-NEXT:    v_cvt_f16_f32_e32 v34, s16
; SI-NEXT:    s_waitcnt expcnt(1)
; SI-NEXT:    v_cvt_f16_f32_e32 v62, s19
; SI-NEXT:    v_cvt_f16_f32_e32 v33, s18
; SI-NEXT:    v_cvt_f16_f32_e32 v60, s21
; SI-NEXT:    v_cvt_f16_f32_e32 v61, s20
; SI-NEXT:    v_cvt_f16_f32_e32 v44, s23
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v63, s22
; SI-NEXT:    v_cvt_f16_f32_e32 v42, s25
; SI-NEXT:    v_cvt_f16_f32_e32 v41, s24
; SI-NEXT:    v_cvt_f16_f32_e32 v40, s27
; SI-NEXT:    v_cvt_f16_f32_e32 v55, s26
; SI-NEXT:    v_cvt_f16_f32_e32 v59, s29
; SI-NEXT:    v_cvt_f16_f32_e32 v58, s28
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v22
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_cbranch_scc0 .LBB27_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v35
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v62
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v60
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v44
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v42
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v40
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v59
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v57
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v47
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v50
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v48
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v38
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v36
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v30
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v26
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v0, v34, v0
; SI-NEXT:    v_or_b32_e32 v1, v33, v1
; SI-NEXT:    v_or_b32_e32 v2, v61, v2
; SI-NEXT:    v_or_b32_e32 v3, v63, v3
; SI-NEXT:    v_or_b32_e32 v4, v41, v4
; SI-NEXT:    v_or_b32_e32 v5, v55, v5
; SI-NEXT:    v_or_b32_e32 v6, v58, v6
; SI-NEXT:    v_or_b32_e32 v7, v56, v7
; SI-NEXT:    v_or_b32_e32 v8, v51, v8
; SI-NEXT:    v_or_b32_e32 v9, v49, v9
; SI-NEXT:    v_or_b32_e32 v10, v39, v10
; SI-NEXT:    v_or_b32_e32 v11, v37, v11
; SI-NEXT:    v_or_b32_e32 v12, v31, v12
; SI-NEXT:    v_or_b32_e32 v13, v29, v13
; SI-NEXT:    v_or_b32_e32 v14, v27, v14
; SI-NEXT:    v_or_b32_e32 v15, v25, v15
; SI-NEXT:    v_or_b32_e32 v16, v23, v16
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:    s_cbranch_execnz .LBB27_3
; SI-NEXT:  .LBB27_2: ; %cmp.true
; SI-NEXT:    v_cvt_f32_f16_e32 v0, v35
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v62
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v33
; SI-NEXT:    v_add_f32_e32 v0, 0x38000000, v0
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v0, v0
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_lshlrev_b32_e32 v0, 16, v0
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v0, v1, v0
; SI-NEXT:    v_or_b32_e32 v1, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v60
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v61
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v63
; SI-NEXT:    s_waitcnt vmcnt(2)
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v41
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_or_b32_e32 v2, v3, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v44
; SI-NEXT:    s_waitcnt vmcnt(1)
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v40
; SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v55
; SI-NEXT:    v_lshlrev_b32_e32 v3, 16, v3
; SI-NEXT:    v_or_b32_e32 v3, v4, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v42
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v58
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v47
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v4, v5, v4
; SI-NEXT:    v_lshlrev_b32_e32 v5, 16, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v59
; SI-NEXT:    v_or_b32_e32 v5, v7, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v57
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_lshlrev_b32_e32 v6, 16, v6
; SI-NEXT:    v_or_b32_e32 v6, v8, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v56
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v51
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v49
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_or_b32_e32 v7, v8, v7
; SI-NEXT:    v_lshlrev_b32_e32 v8, 16, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v50
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_or_b32_e32 v8, v10, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v48
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v38
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v9, v11, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v39
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v37
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v31
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v28
; SI-NEXT:    v_or_b32_e32 v10, v11, v10
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v36
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_or_b32_e32 v11, v13, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v30
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    v_or_b32_e32 v12, v14, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v29
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_lshlrev_b32_e32 v13, 16, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v27
; SI-NEXT:    v_or_b32_e32 v13, v14, v13
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v26
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v25
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_or_b32_e32 v14, v16, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v24
; SI-NEXT:    v_lshlrev_b32_e32 v15, 16, v15
; SI-NEXT:    v_or_b32_e32 v15, v17, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_add_f32_e32 v18, 0x38000000, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_add_f32_e32 v19, 0x38000000, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    v_lshlrev_b32_e32 v16, 16, v16
; SI-NEXT:    v_or_b32_e32 v16, v17, v16
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v18
; SI-NEXT:    v_or_b32_e32 v17, v19, v17
; SI-NEXT:  .LBB27_3: ; %end
; SI-NEXT:    buffer_load_dword v63, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v62, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v61, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v60, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v59, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v58, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v57, off, s[0:3], s32 offset:24 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v56, off, s[0:3], s32 offset:28 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v47, off, s[0:3], s32 offset:32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v46, off, s[0:3], s32 offset:36 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 offset:40 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:44 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:48 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:52 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:56 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:60 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB27_4:
; SI-NEXT:    buffer_store_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v55, v36
; SI-NEXT:    v_mov_b32_e32 v36, v19
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v40, v37
; SI-NEXT:    v_mov_b32_e32 v37, v18
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v41, v38
; SI-NEXT:    v_mov_b32_e32 v38, v23
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Spill
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_mov_b32_e32 v42, v39
; SI-NEXT:    v_mov_b32_e32 v39, v24
; SI-NEXT:    v_mov_b32_e32 v43, v48
; SI-NEXT:    v_mov_b32_e32 v48, v25
; SI-NEXT:    v_mov_b32_e32 v32, v44
; SI-NEXT:    v_mov_b32_e32 v44, v49
; SI-NEXT:    v_mov_b32_e32 v49, v26
; SI-NEXT:    v_mov_b32_e32 v45, v50
; SI-NEXT:    v_mov_b32_e32 v50, v27
; SI-NEXT:    v_mov_b32_e32 v46, v51
; SI-NEXT:    v_mov_b32_e32 v51, v28
; SI-NEXT:    v_mov_b32_e32 v52, v29
; SI-NEXT:    v_mov_b32_e32 v53, v30
; SI-NEXT:    v_mov_b32_e32 v54, v31
; SI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; SI-NEXT:    v_mov_b32_e32 v24, v39
; SI-NEXT:    v_mov_b32_e32 v39, v42
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:76 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v23, v38
; SI-NEXT:    v_mov_b32_e32 v38, v41
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:72 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v18, v37
; SI-NEXT:    v_mov_b32_e32 v37, v40
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:68 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v19, v36
; SI-NEXT:    v_mov_b32_e32 v36, v55
; SI-NEXT:    buffer_load_dword v55, off, s[0:3], s32 offset:64 ; 4-byte Folded Reload
; SI-NEXT:    v_mov_b32_e32 v31, v54
; SI-NEXT:    v_mov_b32_e32 v30, v53
; SI-NEXT:    v_mov_b32_e32 v29, v52
; SI-NEXT:    v_mov_b32_e32 v28, v51
; SI-NEXT:    v_mov_b32_e32 v51, v46
; SI-NEXT:    v_mov_b32_e32 v27, v50
; SI-NEXT:    v_mov_b32_e32 v50, v45
; SI-NEXT:    v_mov_b32_e32 v26, v49
; SI-NEXT:    v_mov_b32_e32 v49, v44
; SI-NEXT:    v_mov_b32_e32 v44, v32
; SI-NEXT:    v_mov_b32_e32 v25, v48
; SI-NEXT:    v_mov_b32_e32 v48, v43
; SI-NEXT:    s_branch .LBB27_2
;
; VI-LABEL: s_bitcast_v36f16_to_v9f64_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s6, s29, 16
; VI-NEXT:    s_lshr_b32 s7, s28, 16
; VI-NEXT:    s_lshr_b32 s8, s27, 16
; VI-NEXT:    s_lshr_b32 s9, s26, 16
; VI-NEXT:    s_lshr_b32 s10, s25, 16
; VI-NEXT:    s_lshr_b32 s11, s24, 16
; VI-NEXT:    s_lshr_b32 s12, s23, 16
; VI-NEXT:    s_lshr_b32 s13, s22, 16
; VI-NEXT:    s_lshr_b32 s14, s21, 16
; VI-NEXT:    s_lshr_b32 s15, s20, 16
; VI-NEXT:    s_lshr_b32 s40, s19, 16
; VI-NEXT:    s_lshr_b32 s41, s18, 16
; VI-NEXT:    s_lshr_b32 s42, s17, 16
; VI-NEXT:    s_lshr_b32 s43, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_mov_b32_e32 v32, v3
; VI-NEXT:    v_mov_b32_e32 v33, v2
; VI-NEXT:    v_mov_b32_e32 v34, v1
; VI-NEXT:    v_mov_b32_e32 v35, v0
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    s_cbranch_scc0 .LBB27_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s43, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s44, s42, 16
; VI-NEXT:    s_or_b32 s5, s5, s44
; VI-NEXT:    s_and_b32 s44, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s45, s41, 16
; VI-NEXT:    s_or_b32 s44, s44, s45
; VI-NEXT:    s_and_b32 s45, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s46, s40, 16
; VI-NEXT:    s_or_b32 s45, s45, s46
; VI-NEXT:    s_and_b32 s46, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s47, s15, 16
; VI-NEXT:    s_or_b32 s46, s46, s47
; VI-NEXT:    s_and_b32 s47, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s56, s14, 16
; VI-NEXT:    s_or_b32 s47, s47, s56
; VI-NEXT:    s_and_b32 s56, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s57, s13, 16
; VI-NEXT:    s_or_b32 s56, s56, s57
; VI-NEXT:    s_and_b32 s57, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s58, s12, 16
; VI-NEXT:    s_or_b32 s57, s57, s58
; VI-NEXT:    s_and_b32 s58, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s59, s11, 16
; VI-NEXT:    s_or_b32 s58, s58, s59
; VI-NEXT:    s_and_b32 s59, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s60, s10, 16
; VI-NEXT:    s_or_b32 s59, s59, s60
; VI-NEXT:    s_and_b32 s60, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s61, s9, 16
; VI-NEXT:    s_or_b32 s60, s60, s61
; VI-NEXT:    s_and_b32 s61, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s62, s8, 16
; VI-NEXT:    v_mov_b32_e32 v0, 16
; VI-NEXT:    s_or_b32 s61, s61, s62
; VI-NEXT:    s_and_b32 s62, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s63, s7, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s62, s62, s63
; VI-NEXT:    s_and_b32 s63, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s72, s6, 16
; VI-NEXT:    v_lshlrev_b32_sdwa v2, v0, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_or_b32_sdwa v14, v35, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_sdwa v1, v0, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    v_lshlrev_b32_sdwa v0, v0, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
; VI-NEXT:    s_or_b32 s63, s63, s72
; VI-NEXT:    v_or_b32_sdwa v15, v34, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v16, v33, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v32, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s44
; VI-NEXT:    v_mov_b32_e32 v3, s45
; VI-NEXT:    v_mov_b32_e32 v4, s46
; VI-NEXT:    v_mov_b32_e32 v5, s47
; VI-NEXT:    v_mov_b32_e32 v6, s56
; VI-NEXT:    v_mov_b32_e32 v7, s57
; VI-NEXT:    v_mov_b32_e32 v8, s58
; VI-NEXT:    v_mov_b32_e32 v9, s59
; VI-NEXT:    v_mov_b32_e32 v10, s60
; VI-NEXT:    v_mov_b32_e32 v11, s61
; VI-NEXT:    v_mov_b32_e32 v12, s62
; VI-NEXT:    v_mov_b32_e32 v13, s63
; VI-NEXT:    s_cbranch_execnz .LBB27_3
; VI-NEXT:  .LBB27_2: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v13, 0x200
; VI-NEXT:    v_mov_b32_e32 v0, s43
; VI-NEXT:    v_mov_b32_e32 v2, s42
; VI-NEXT:    v_add_f16_sdwa v0, v0, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v1, s16, v13
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s17, v13
; VI-NEXT:    v_or_b32_e32 v0, v1, v0
; VI-NEXT:    v_or_b32_e32 v1, v3, v2
; VI-NEXT:    v_mov_b32_e32 v2, s41
; VI-NEXT:    v_add_f16_sdwa v2, v2, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v3, s18, v13
; VI-NEXT:    v_or_b32_e32 v2, v3, v2
; VI-NEXT:    v_mov_b32_e32 v3, s40
; VI-NEXT:    v_add_f16_sdwa v3, v3, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v4, s19, v13
; VI-NEXT:    v_or_b32_e32 v3, v4, v3
; VI-NEXT:    v_mov_b32_e32 v4, s15
; VI-NEXT:    v_add_f16_sdwa v4, v4, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v5, s20, v13
; VI-NEXT:    v_or_b32_e32 v4, v5, v4
; VI-NEXT:    v_mov_b32_e32 v5, s14
; VI-NEXT:    v_add_f16_sdwa v5, v5, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v6, s21, v13
; VI-NEXT:    v_or_b32_e32 v5, v6, v5
; VI-NEXT:    v_mov_b32_e32 v6, s13
; VI-NEXT:    v_add_f16_sdwa v6, v6, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v7, s22, v13
; VI-NEXT:    v_or_b32_e32 v6, v7, v6
; VI-NEXT:    v_mov_b32_e32 v7, s12
; VI-NEXT:    v_add_f16_sdwa v7, v7, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v8, s23, v13
; VI-NEXT:    v_or_b32_e32 v7, v8, v7
; VI-NEXT:    v_mov_b32_e32 v8, s11
; VI-NEXT:    v_add_f16_sdwa v8, v8, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v9, s24, v13
; VI-NEXT:    v_or_b32_e32 v8, v9, v8
; VI-NEXT:    v_mov_b32_e32 v9, s10
; VI-NEXT:    v_add_f16_sdwa v9, v9, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v10, s25, v13
; VI-NEXT:    v_or_b32_e32 v9, v10, v9
; VI-NEXT:    v_mov_b32_e32 v10, s9
; VI-NEXT:    v_add_f16_sdwa v10, v10, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v11, s26, v13
; VI-NEXT:    v_or_b32_e32 v10, v11, v10
; VI-NEXT:    v_mov_b32_e32 v11, s8
; VI-NEXT:    v_add_f16_sdwa v11, v11, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v12, s27, v13
; VI-NEXT:    v_or_b32_e32 v11, v12, v11
; VI-NEXT:    v_mov_b32_e32 v12, s7
; VI-NEXT:    v_add_f16_sdwa v12, v12, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v14, s28, v13
; VI-NEXT:    v_or_b32_e32 v12, v14, v12
; VI-NEXT:    v_mov_b32_e32 v14, s6
; VI-NEXT:    v_add_f16_sdwa v14, v14, v13 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v13, s29, v13
; VI-NEXT:    v_mov_b32_e32 v17, 0x200
; VI-NEXT:    v_or_b32_e32 v13, v13, v14
; VI-NEXT:    v_add_f16_sdwa v14, v35, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v15, 0x200, v35
; VI-NEXT:    v_or_b32_e32 v14, v15, v14
; VI-NEXT:    v_add_f16_sdwa v15, v34, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v16, 0x200, v34
; VI-NEXT:    v_or_b32_e32 v15, v16, v15
; VI-NEXT:    v_add_f16_sdwa v16, v33, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v33
; VI-NEXT:    v_or_b32_e32 v16, v18, v16
; VI-NEXT:    v_add_f16_sdwa v17, v32, v17 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
; VI-NEXT:    v_add_f16_e32 v18, 0x200, v32
; VI-NEXT:    v_or_b32_e32 v17, v18, v17
; VI-NEXT:  .LBB27_3: ; %end
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB27_4:
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; VI-NEXT:    s_branch .LBB27_2
;
; GFX9-LABEL: s_bitcast_v36f16_to_v9f64_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v32, v3
; GFX9-NEXT:    v_mov_b32_e32 v33, v2
; GFX9-NEXT:    v_mov_b32_e32 v34, v1
; GFX9-NEXT:    v_mov_b32_e32 v35, v0
; GFX9-NEXT:    s_lshr_b32 s40, s29, 16
; GFX9-NEXT:    s_lshr_b32 s41, s28, 16
; GFX9-NEXT:    s_lshr_b32 s42, s27, 16
; GFX9-NEXT:    s_lshr_b32 s43, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v36, 16, v32
; GFX9-NEXT:    v_lshrrev_b32_e32 v37, 16, v33
; GFX9-NEXT:    v_lshrrev_b32_e32 v38, 16, v34
; GFX9-NEXT:    v_lshrrev_b32_e32 v39, 16, v35
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    s_pack_ll_b32_b16 s6, s16, s6
; GFX9-NEXT:    s_pack_ll_b32_b16 s7, s17, s7
; GFX9-NEXT:    s_pack_ll_b32_b16 s8, s18, s8
; GFX9-NEXT:    s_pack_ll_b32_b16 s9, s19, s9
; GFX9-NEXT:    s_pack_ll_b32_b16 s10, s20, s10
; GFX9-NEXT:    s_pack_ll_b32_b16 s11, s21, s11
; GFX9-NEXT:    s_pack_ll_b32_b16 s12, s22, s12
; GFX9-NEXT:    s_pack_ll_b32_b16 s13, s23, s13
; GFX9-NEXT:    s_pack_ll_b32_b16 s14, s24, s14
; GFX9-NEXT:    s_pack_ll_b32_b16 s15, s25, s15
; GFX9-NEXT:    s_pack_ll_b32_b16 s16, s26, s43
; GFX9-NEXT:    s_pack_ll_b32_b16 s17, s27, s42
; GFX9-NEXT:    s_pack_ll_b32_b16 s18, s28, s41
; GFX9-NEXT:    s_pack_ll_b32_b16 s19, s29, s40
; GFX9-NEXT:    s_cbranch_scc0 .LBB27_4
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v35
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v34
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v32
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v1, s7
; GFX9-NEXT:    v_mov_b32_e32 v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s9
; GFX9-NEXT:    v_mov_b32_e32 v4, s10
; GFX9-NEXT:    v_mov_b32_e32 v5, s11
; GFX9-NEXT:    v_mov_b32_e32 v6, s12
; GFX9-NEXT:    v_mov_b32_e32 v7, s13
; GFX9-NEXT:    v_mov_b32_e32 v8, s14
; GFX9-NEXT:    v_mov_b32_e32 v9, s15
; GFX9-NEXT:    v_mov_b32_e32 v10, s16
; GFX9-NEXT:    v_mov_b32_e32 v11, s17
; GFX9-NEXT:    v_mov_b32_e32 v12, s18
; GFX9-NEXT:    v_mov_b32_e32 v13, s19
; GFX9-NEXT:    s_cbranch_execnz .LBB27_3
; GFX9-NEXT:  .LBB27_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v14, 0xffff, v35
; GFX9-NEXT:    v_and_b32_e32 v15, 0xffff, v34
; GFX9-NEXT:    v_and_b32_e32 v16, 0xffff, v33
; GFX9-NEXT:    v_and_b32_e32 v17, 0xffff, v32
; GFX9-NEXT:    v_mov_b32_e32 v13, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v14, v39, 16, v14
; GFX9-NEXT:    s_movk_i32 s4, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v15, v38, 16, v15
; GFX9-NEXT:    v_lshl_or_b32 v16, v37, 16, v16
; GFX9-NEXT:    v_lshl_or_b32 v17, v36, 16, v17
; GFX9-NEXT:    v_pk_add_f16 v0, s6, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, s7, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, s8, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v3, s9, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v4, s10, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v5, s11, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v6, s12, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v7, s13, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v8, s14, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v9, s15, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v10, s16, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v11, s17, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v12, s18, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v13, s19, v13 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v14, v14, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v15, v15, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v16, v16, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v17, v17, s4 op_sel_hi:[1,0]
; GFX9-NEXT:  .LBB27_3: ; %end
; GFX9-NEXT:    s_setpc_b64 s[30:31]
; GFX9-NEXT:  .LBB27_4:
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
; GFX9-NEXT:    s_branch .LBB27_2
;
; GFX11-LABEL: s_bitcast_v36f16_to_v9f64_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s41, s29, 16
; GFX11-NEXT:    s_lshr_b32 s42, s28, 16
; GFX11-NEXT:    s_lshr_b32 s15, s27, 16
; GFX11-NEXT:    s_lshr_b32 s14, s26, 16
; GFX11-NEXT:    s_lshr_b32 s13, s25, 16
; GFX11-NEXT:    s_lshr_b32 s12, s24, 16
; GFX11-NEXT:    s_lshr_b32 s11, s23, 16
; GFX11-NEXT:    s_lshr_b32 s10, s22, 16
; GFX11-NEXT:    s_lshr_b32 s9, s21, 16
; GFX11-NEXT:    s_lshr_b32 s8, s20, 16
; GFX11-NEXT:    s_lshr_b32 s7, s19, 16
; GFX11-NEXT:    s_lshr_b32 s6, s18, 16
; GFX11-NEXT:    s_lshr_b32 s5, s17, 16
; GFX11-NEXT:    s_lshr_b32 s4, s16, 16
; GFX11-NEXT:    s_lshr_b32 s43, s3, 16
; GFX11-NEXT:    s_lshr_b32 s44, s2, 16
; GFX11-NEXT:    s_lshr_b32 s45, s1, 16
; GFX11-NEXT:    s_lshr_b32 s46, s0, 16
; GFX11-NEXT:    s_mov_b32 s40, 0
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s46
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s4, s16, s4
; GFX11-NEXT:    s_pack_ll_b32_b16 s5, s17, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s6, s18, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s19, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s8, s20, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s21, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s22, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s23, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s24, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s25, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s26, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s27, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s16, s28, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s17, s29, s41
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB27_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s40
; GFX11-NEXT:    s_cbranch_vccnz .LBB27_4
; GFX11-NEXT:  .LBB27_2: ; %cmp.true
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s0 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s4 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s5 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s6 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s7 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s8 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s9 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s10 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s11 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v12, 0x200, s12 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v13, 0x200, s13 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v14, 0x200, s14 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v15, 0x200, s15 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v16, 0x200, s16 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v17, 0x200, s17 op_sel_hi:[0,1]
; GFX11-NEXT:    s_setpc_b64 s[30:31]
; GFX11-NEXT:  .LBB27_3:
; GFX11-NEXT:    s_branch .LBB27_2
; GFX11-NEXT:  .LBB27_4:
; GFX11-NEXT:    v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v1, s1
; GFX11-NEXT:    v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3
; GFX11-NEXT:    v_dual_mov_b32 v4, s4 :: v_dual_mov_b32 v5, s5
; GFX11-NEXT:    v_dual_mov_b32 v6, s6 :: v_dual_mov_b32 v7, s7
; GFX11-NEXT:    v_dual_mov_b32 v8, s8 :: v_dual_mov_b32 v9, s9
; GFX11-NEXT:    v_dual_mov_b32 v10, s10 :: v_dual_mov_b32 v11, s11
; GFX11-NEXT:    v_dual_mov_b32 v12, s12 :: v_dual_mov_b32 v13, s13
; GFX11-NEXT:    v_dual_mov_b32 v14, s14 :: v_dual_mov_b32 v15, s15
; GFX11-NEXT:    v_dual_mov_b32 v16, s16 :: v_dual_mov_b32 v17, s17
; GFX11-NEXT:    v_dual_mov_b32 v18, s18 :: v_dual_mov_b32 v19, s19
; GFX11-NEXT:    v_dual_mov_b32 v20, s20 :: v_dual_mov_b32 v21, s21
; GFX11-NEXT:    v_dual_mov_b32 v22, s22 :: v_dual_mov_b32 v23, s23
; GFX11-NEXT:    v_dual_mov_b32 v24, s24 :: v_dual_mov_b32 v25, s25
; GFX11-NEXT:    v_dual_mov_b32 v26, s26 :: v_dual_mov_b32 v27, s27
; GFX11-NEXT:    v_dual_mov_b32 v28, s28 :: v_dual_mov_b32 v29, s29
; GFX11-NEXT:    v_dual_mov_b32 v30, s30 :: v_dual_mov_b32 v31, s31
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <36 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <36 x half> %a1 to <9 x double>
  br label %end

cmp.false:
  %a3 = bitcast <36 x half> %a to <9 x double>
  br label %end

end:
  %phi = phi <9 x double> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <9 x double> %phi
}

define inreg <36 x half> @s_bitcast_v36i16_to_v36f16_inreg(<36 x i16> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36i16_to_v36f16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v23
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    buffer_store_dword v40, off, s[0:3], s32 offset:40 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v41, off, s[0:3], s32 offset:36 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v42, off, s[0:3], s32 offset:32 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v43, off, s[0:3], s32 offset:28 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v44, off, s[0:3], s32 offset:24 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v45, off, s[0:3], s32 offset:20 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v46, off, s[0:3], s32 offset:16 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v47, off, s[0:3], s32 offset:12 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v56, off, s[0:3], s32 offset:8 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v57, off, s[0:3], s32 offset:4 ; 4-byte Folded Spill
; SI-NEXT:    buffer_store_dword v58, off, s[0:3], s32 ; 4-byte Folded Spill
; SI-NEXT:    s_cbranch_scc0 .LBB28_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_waitcnt expcnt(4)
; SI-NEXT:    v_cvt_f32_f16_e32 v46, s16
; SI-NEXT:    s_waitcnt expcnt(1)
; SI-NEXT:    v_cvt_f32_f16_e32 v57, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v47, s18
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f32_f16_e32 v58, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v43, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v56, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v41, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v45, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v55, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v44, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v53, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v42, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v51, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v40, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v49, v1
; SI-NEXT:    v_cvt_f32_f16_e32 v54, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v39, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v52, v4
; SI-NEXT:    v_cvt_f32_f16_e32 v37, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v50, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v35, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v48, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v33, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v38, v10
; SI-NEXT:    v_cvt_f32_f16_e32 v31, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v36, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v29, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v34, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v27, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v32, v16
; SI-NEXT:    v_cvt_f32_f16_e32 v25, v17
; SI-NEXT:    v_cvt_f32_f16_e32 v30, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v24, v19
; SI-NEXT:    v_cvt_f32_f16_e32 v28, v20
; SI-NEXT:    v_cvt_f32_f16_e32 v23, v21
; SI-NEXT:    v_cvt_f32_f16_e32 v26, v22
; SI-NEXT:    s_cbranch_execnz .LBB28_3
; SI-NEXT:  .LBB28_2: ; %cmp.true
; SI-NEXT:    v_add_i32_e32 v22, vcc, 3, v22
; SI-NEXT:    v_add_i32_e32 v21, vcc, 3, v21
; SI-NEXT:    v_add_i32_e32 v20, vcc, 3, v20
; SI-NEXT:    v_add_i32_e32 v19, vcc, 3, v19
; SI-NEXT:    v_add_i32_e32 v18, vcc, 3, v18
; SI-NEXT:    v_add_i32_e32 v17, vcc, 3, v17
; SI-NEXT:    v_add_i32_e32 v16, vcc, 3, v16
; SI-NEXT:    v_add_i32_e32 v15, vcc, 3, v15
; SI-NEXT:    v_add_i32_e32 v14, vcc, 3, v14
; SI-NEXT:    v_add_i32_e32 v13, vcc, 3, v13
; SI-NEXT:    v_add_i32_e32 v12, vcc, 3, v12
; SI-NEXT:    v_add_i32_e32 v11, vcc, 3, v11
; SI-NEXT:    v_add_i32_e32 v10, vcc, 3, v10
; SI-NEXT:    v_add_i32_e32 v9, vcc, 3, v9
; SI-NEXT:    v_add_i32_e32 v8, vcc, 3, v8
; SI-NEXT:    v_add_i32_e32 v7, vcc, 3, v7
; SI-NEXT:    v_add_i32_e32 v6, vcc, 3, v6
; SI-NEXT:    v_add_i32_e32 v5, vcc, 3, v5
; SI-NEXT:    v_add_i32_e32 v4, vcc, 3, v4
; SI-NEXT:    v_add_i32_e32 v3, vcc, 3, v3
; SI-NEXT:    v_add_i32_e32 v2, vcc, 3, v2
; SI-NEXT:    v_add_i32_e32 v1, vcc, 3, v1
; SI-NEXT:    s_add_i32 s29, s29, 3
; SI-NEXT:    s_add_i32 s28, s28, 3
; SI-NEXT:    s_add_i32 s27, s27, 3
; SI-NEXT:    s_add_i32 s26, s26, 3
; SI-NEXT:    s_add_i32 s25, s25, 3
; SI-NEXT:    s_add_i32 s24, s24, 3
; SI-NEXT:    s_add_i32 s23, s23, 3
; SI-NEXT:    s_add_i32 s22, s22, 3
; SI-NEXT:    s_add_i32 s21, s21, 3
; SI-NEXT:    s_add_i32 s20, s20, 3
; SI-NEXT:    s_add_i32 s19, s19, 3
; SI-NEXT:    s_add_i32 s18, s18, 3
; SI-NEXT:    s_add_i32 s17, s17, 3
; SI-NEXT:    s_add_i32 s16, s16, 3
; SI-NEXT:    s_waitcnt expcnt(4)
; SI-NEXT:    v_cvt_f32_f16_e32 v46, s16
; SI-NEXT:    s_waitcnt expcnt(1)
; SI-NEXT:    v_cvt_f32_f16_e32 v57, s17
; SI-NEXT:    v_cvt_f32_f16_e32 v47, s18
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f32_f16_e32 v58, s19
; SI-NEXT:    v_cvt_f32_f16_e32 v43, s20
; SI-NEXT:    v_cvt_f32_f16_e32 v56, s21
; SI-NEXT:    v_cvt_f32_f16_e32 v41, s22
; SI-NEXT:    v_cvt_f32_f16_e32 v45, s23
; SI-NEXT:    v_cvt_f32_f16_e32 v55, s24
; SI-NEXT:    v_cvt_f32_f16_e32 v44, s25
; SI-NEXT:    v_cvt_f32_f16_e32 v53, s26
; SI-NEXT:    v_cvt_f32_f16_e32 v42, s27
; SI-NEXT:    v_cvt_f32_f16_e32 v51, s28
; SI-NEXT:    v_cvt_f32_f16_e32 v40, s29
; SI-NEXT:    v_cvt_f32_f16_e32 v49, v1
; SI-NEXT:    v_cvt_f32_f16_e32 v54, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v39, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v52, v4
; SI-NEXT:    v_cvt_f32_f16_e32 v37, v5
; SI-NEXT:    v_cvt_f32_f16_e32 v50, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v35, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v48, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v33, v9
; SI-NEXT:    v_cvt_f32_f16_e32 v38, v10
; SI-NEXT:    v_cvt_f32_f16_e32 v31, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v36, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v29, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v34, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v27, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v32, v16
; SI-NEXT:    v_cvt_f32_f16_e32 v25, v17
; SI-NEXT:    v_cvt_f32_f16_e32 v30, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v24, v19
; SI-NEXT:    v_cvt_f32_f16_e32 v28, v20
; SI-NEXT:    v_cvt_f32_f16_e32 v23, v21
; SI-NEXT:    v_cvt_f32_f16_e32 v26, v22
; SI-NEXT:  .LBB28_3: ; %end
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v57
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v46
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v58
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v47
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v3
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_add_i32_e32 v1, vcc, 4, v0
; SI-NEXT:    v_or_b32_e32 v2, v4, v2
; SI-NEXT:    buffer_store_dword v2, v1, s[0:3], 0 offen
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v56
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v43
; SI-NEXT:    v_add_i32_e32 v3, vcc, 8, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v45
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v41
; SI-NEXT:    v_add_i32_e32 v3, vcc, 12, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v44
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v55
; SI-NEXT:    v_add_i32_e32 v3, vcc, 16, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v42
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v53
; SI-NEXT:    v_add_i32_e32 v3, vcc, 20, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v40
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v51
; SI-NEXT:    v_add_i32_e32 v3, vcc, 24, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v54
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v49
; SI-NEXT:    v_add_i32_e32 v3, vcc, 28, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v52
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v39
; SI-NEXT:    v_add_i32_e32 v3, vcc, 32, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v50
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v37
; SI-NEXT:    v_add_i32_e32 v3, vcc, 36, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v48
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v35
; SI-NEXT:    v_add_i32_e32 v3, vcc, 40, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v38
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v33
; SI-NEXT:    v_add_i32_e32 v3, vcc, 44, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v36
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v31
; SI-NEXT:    v_add_i32_e32 v3, vcc, 48, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v34
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v29
; SI-NEXT:    v_add_i32_e32 v3, vcc, 52, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v32
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v27
; SI-NEXT:    v_add_i32_e32 v3, vcc, 56, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v30
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v25
; SI-NEXT:    v_add_i32_e32 v3, vcc, 60, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v24
; SI-NEXT:    v_add_i32_e32 v3, vcc, 64, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v3, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v23
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    v_lshlrev_b32_e32 v1, 16, v1
; SI-NEXT:    v_or_b32_e32 v1, v2, v1
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    buffer_load_dword v58, off, s[0:3], s32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v57, off, s[0:3], s32 offset:4 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v56, off, s[0:3], s32 offset:8 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v47, off, s[0:3], s32 offset:12 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v46, off, s[0:3], s32 offset:16 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v45, off, s[0:3], s32 offset:20 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v44, off, s[0:3], s32 offset:24 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v43, off, s[0:3], s32 offset:28 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v42, off, s[0:3], s32 offset:32 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v41, off, s[0:3], s32 offset:36 ; 4-byte Folded Reload
; SI-NEXT:    buffer_load_dword v40, off, s[0:3], s32 offset:40 ; 4-byte Folded Reload
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB28_4:
; SI-NEXT:    ; implicit-def: $vgpr46
; SI-NEXT:    ; implicit-def: $vgpr57
; SI-NEXT:    ; implicit-def: $vgpr47
; SI-NEXT:    ; implicit-def: $vgpr58
; SI-NEXT:    ; implicit-def: $vgpr43
; SI-NEXT:    ; implicit-def: $vgpr56
; SI-NEXT:    ; implicit-def: $vgpr41
; SI-NEXT:    ; implicit-def: $vgpr45
; SI-NEXT:    ; implicit-def: $vgpr55
; SI-NEXT:    ; implicit-def: $vgpr44
; SI-NEXT:    ; implicit-def: $vgpr53
; SI-NEXT:    ; implicit-def: $vgpr42
; SI-NEXT:    ; implicit-def: $vgpr51
; SI-NEXT:    ; implicit-def: $vgpr40
; SI-NEXT:    ; implicit-def: $vgpr49
; SI-NEXT:    ; implicit-def: $vgpr54
; SI-NEXT:    ; implicit-def: $vgpr39
; SI-NEXT:    ; implicit-def: $vgpr52
; SI-NEXT:    ; implicit-def: $vgpr37
; SI-NEXT:    ; implicit-def: $vgpr50
; SI-NEXT:    ; implicit-def: $vgpr35
; SI-NEXT:    ; implicit-def: $vgpr48
; SI-NEXT:    ; implicit-def: $vgpr33
; SI-NEXT:    ; implicit-def: $vgpr38
; SI-NEXT:    ; implicit-def: $vgpr31
; SI-NEXT:    ; implicit-def: $vgpr36
; SI-NEXT:    ; implicit-def: $vgpr29
; SI-NEXT:    ; implicit-def: $vgpr34
; SI-NEXT:    ; implicit-def: $vgpr27
; SI-NEXT:    ; implicit-def: $vgpr32
; SI-NEXT:    ; implicit-def: $vgpr25
; SI-NEXT:    ; implicit-def: $vgpr30
; SI-NEXT:    ; implicit-def: $vgpr24
; SI-NEXT:    ; implicit-def: $vgpr28
; SI-NEXT:    ; implicit-def: $vgpr23
; SI-NEXT:    ; implicit-def: $vgpr26
; SI-NEXT:    s_branch .LBB28_2
;
; VI-LABEL: s_bitcast_v36i16_to_v36f16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s6, s29, 16
; VI-NEXT:    s_lshr_b32 s7, s28, 16
; VI-NEXT:    s_lshr_b32 s8, s27, 16
; VI-NEXT:    s_lshr_b32 s9, s26, 16
; VI-NEXT:    s_lshr_b32 s10, s25, 16
; VI-NEXT:    s_lshr_b32 s11, s24, 16
; VI-NEXT:    s_lshr_b32 s12, s23, 16
; VI-NEXT:    s_lshr_b32 s13, s22, 16
; VI-NEXT:    s_lshr_b32 s14, s21, 16
; VI-NEXT:    s_lshr_b32 s15, s20, 16
; VI-NEXT:    s_lshr_b32 s40, s19, 16
; VI-NEXT:    s_lshr_b32 s41, s18, 16
; VI-NEXT:    s_lshr_b32 s42, s17, 16
; VI-NEXT:    s_lshr_b32 s43, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_lshrrev_b32_e32 v5, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v6, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v7, 16, v1
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_lshrrev_b32_e32 v4, 16, v0
; VI-NEXT:    s_cbranch_scc0 .LBB28_4
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB28_3
; VI-NEXT:  .LBB28_2: ; %cmp.true
; VI-NEXT:    v_add_u32_e32 v5, vcc, 3, v5
; VI-NEXT:    v_add_u32_e32 v3, vcc, 3, v3
; VI-NEXT:    v_add_u32_e32 v6, vcc, 3, v6
; VI-NEXT:    v_add_u32_e32 v2, vcc, 3, v2
; VI-NEXT:    v_add_u32_e32 v7, vcc, 3, v7
; VI-NEXT:    v_add_u32_e32 v1, vcc, 3, v1
; VI-NEXT:    v_add_u32_e32 v4, vcc, 3, v4
; VI-NEXT:    v_add_u32_e32 v0, vcc, 3, v0
; VI-NEXT:    s_add_i32 s6, s6, 3
; VI-NEXT:    s_add_i32 s29, s29, 3
; VI-NEXT:    s_add_i32 s7, s7, 3
; VI-NEXT:    s_add_i32 s28, s28, 3
; VI-NEXT:    s_add_i32 s8, s8, 3
; VI-NEXT:    s_add_i32 s27, s27, 3
; VI-NEXT:    s_add_i32 s9, s9, 3
; VI-NEXT:    s_add_i32 s26, s26, 3
; VI-NEXT:    s_add_i32 s10, s10, 3
; VI-NEXT:    s_add_i32 s25, s25, 3
; VI-NEXT:    s_add_i32 s11, s11, 3
; VI-NEXT:    s_add_i32 s24, s24, 3
; VI-NEXT:    s_add_i32 s12, s12, 3
; VI-NEXT:    s_add_i32 s23, s23, 3
; VI-NEXT:    s_add_i32 s13, s13, 3
; VI-NEXT:    s_add_i32 s22, s22, 3
; VI-NEXT:    s_add_i32 s14, s14, 3
; VI-NEXT:    s_add_i32 s21, s21, 3
; VI-NEXT:    s_add_i32 s15, s15, 3
; VI-NEXT:    s_add_i32 s20, s20, 3
; VI-NEXT:    s_add_i32 s40, s40, 3
; VI-NEXT:    s_add_i32 s19, s19, 3
; VI-NEXT:    s_add_i32 s41, s41, 3
; VI-NEXT:    s_add_i32 s18, s18, 3
; VI-NEXT:    s_add_i32 s42, s42, 3
; VI-NEXT:    s_add_i32 s17, s17, 3
; VI-NEXT:    s_add_i32 s43, s43, 3
; VI-NEXT:    s_add_i32 s16, s16, 3
; VI-NEXT:  .LBB28_3: ; %end
; VI-NEXT:    s_and_b32 s4, 0xffff, s16
; VI-NEXT:    s_lshl_b32 s5, s43, 16
; VI-NEXT:    s_or_b32 s4, s4, s5
; VI-NEXT:    s_and_b32 s5, 0xffff, s17
; VI-NEXT:    s_lshl_b32 s16, s42, 16
; VI-NEXT:    s_or_b32 s5, s5, s16
; VI-NEXT:    s_and_b32 s16, 0xffff, s18
; VI-NEXT:    s_lshl_b32 s17, s41, 16
; VI-NEXT:    s_or_b32 s16, s16, s17
; VI-NEXT:    s_and_b32 s17, 0xffff, s19
; VI-NEXT:    s_lshl_b32 s18, s40, 16
; VI-NEXT:    s_or_b32 s17, s17, s18
; VI-NEXT:    s_and_b32 s18, 0xffff, s20
; VI-NEXT:    s_lshl_b32 s15, s15, 16
; VI-NEXT:    s_or_b32 s15, s18, s15
; VI-NEXT:    s_and_b32 s18, 0xffff, s21
; VI-NEXT:    s_lshl_b32 s14, s14, 16
; VI-NEXT:    s_or_b32 s14, s18, s14
; VI-NEXT:    s_and_b32 s18, 0xffff, s22
; VI-NEXT:    s_lshl_b32 s13, s13, 16
; VI-NEXT:    s_or_b32 s13, s18, s13
; VI-NEXT:    s_and_b32 s18, 0xffff, s23
; VI-NEXT:    s_lshl_b32 s12, s12, 16
; VI-NEXT:    s_or_b32 s12, s18, s12
; VI-NEXT:    s_and_b32 s18, 0xffff, s24
; VI-NEXT:    s_lshl_b32 s11, s11, 16
; VI-NEXT:    s_or_b32 s11, s18, s11
; VI-NEXT:    s_and_b32 s18, 0xffff, s25
; VI-NEXT:    s_lshl_b32 s10, s10, 16
; VI-NEXT:    s_or_b32 s10, s18, s10
; VI-NEXT:    s_and_b32 s18, 0xffff, s26
; VI-NEXT:    s_lshl_b32 s9, s9, 16
; VI-NEXT:    s_or_b32 s9, s18, s9
; VI-NEXT:    s_and_b32 s18, 0xffff, s27
; VI-NEXT:    s_lshl_b32 s8, s8, 16
; VI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; VI-NEXT:    s_or_b32 s8, s18, s8
; VI-NEXT:    s_and_b32 s18, 0xffff, s28
; VI-NEXT:    s_lshl_b32 s7, s7, 16
; VI-NEXT:    v_or_b32_sdwa v14, v0, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v7
; VI-NEXT:    s_or_b32 s7, s18, s7
; VI-NEXT:    s_and_b32 s18, 0xffff, s29
; VI-NEXT:    s_lshl_b32 s6, s6, 16
; VI-NEXT:    v_or_b32_sdwa v15, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v6
; VI-NEXT:    s_or_b32 s6, s18, s6
; VI-NEXT:    v_or_b32_sdwa v16, v2, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v5
; VI-NEXT:    v_or_b32_sdwa v17, v3, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, s4
; VI-NEXT:    v_mov_b32_e32 v1, s5
; VI-NEXT:    v_mov_b32_e32 v2, s16
; VI-NEXT:    v_mov_b32_e32 v3, s17
; VI-NEXT:    v_mov_b32_e32 v4, s15
; VI-NEXT:    v_mov_b32_e32 v5, s14
; VI-NEXT:    v_mov_b32_e32 v6, s13
; VI-NEXT:    v_mov_b32_e32 v7, s12
; VI-NEXT:    v_mov_b32_e32 v8, s11
; VI-NEXT:    v_mov_b32_e32 v9, s10
; VI-NEXT:    v_mov_b32_e32 v10, s9
; VI-NEXT:    v_mov_b32_e32 v11, s8
; VI-NEXT:    v_mov_b32_e32 v12, s7
; VI-NEXT:    v_mov_b32_e32 v13, s6
; VI-NEXT:    s_setpc_b64 s[30:31]
; VI-NEXT:  .LBB28_4:
; VI-NEXT:    s_branch .LBB28_2
;
; GFX9-LABEL: s_bitcast_v36i16_to_v36f16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_lshr_b32 s43, s29, 16
; GFX9-NEXT:    s_lshr_b32 s42, s28, 16
; GFX9-NEXT:    s_lshr_b32 s41, s27, 16
; GFX9-NEXT:    s_lshr_b32 s40, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v17, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v16, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 16, v1
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v0
; GFX9-NEXT:    s_cbranch_scc0 .LBB28_3
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB28_4
; GFX9-NEXT:  .LBB28_2: ; %cmp.true
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s29, s43
; GFX9-NEXT:    v_pk_add_u16 v13, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s28, s42
; GFX9-NEXT:    v_pk_add_u16 v12, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s27, s41
; GFX9-NEXT:    v_pk_add_u16 v11, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s26, s40
; GFX9-NEXT:    v_pk_add_u16 v10, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s25, s15
; GFX9-NEXT:    v_pk_add_u16 v9, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s24, s14
; GFX9-NEXT:    v_pk_add_u16 v8, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s23, s13
; GFX9-NEXT:    v_pk_add_u16 v7, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s22, s12
; GFX9-NEXT:    v_pk_add_u16 v6, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s21, s11
; GFX9-NEXT:    v_pk_add_u16 v5, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s20, s10
; GFX9-NEXT:    v_pk_add_u16 v4, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s19, s9
; GFX9-NEXT:    v_pk_add_u16 v19, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s18, s8
; GFX9-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GFX9-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_pk_add_u16 v18, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s17, s7
; GFX9-NEXT:    v_lshl_or_b32 v3, v17, 16, v3
; GFX9-NEXT:    v_lshl_or_b32 v2, v16, 16, v2
; GFX9-NEXT:    v_lshl_or_b32 v1, v15, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v0, v14, 16, v0
; GFX9-NEXT:    v_pk_add_u16 v21, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s16, s6
; GFX9-NEXT:    v_pk_add_u16 v3, v3, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v2, v2, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v1, v1, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v0, v0, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_u16 v20, s4, 3 op_sel_hi:[1,0]
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v20
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v21
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v16, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v17, 16, v3
; GFX9-NEXT:    s_branch .LBB28_5
; GFX9-NEXT:  .LBB28_3:
; GFX9-NEXT:    s_branch .LBB28_2
; GFX9-NEXT:  .LBB28_4:
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v19, s19
; GFX9-NEXT:    v_mov_b32_e32 v18, s18
; GFX9-NEXT:    v_mov_b32_e32 v21, s17
; GFX9-NEXT:    v_mov_b32_e32 v20, s16
; GFX9-NEXT:    v_mov_b32_e32 v22, s43
; GFX9-NEXT:    v_mov_b32_e32 v23, s42
; GFX9-NEXT:    v_mov_b32_e32 v24, s41
; GFX9-NEXT:    v_mov_b32_e32 v25, s40
; GFX9-NEXT:    v_mov_b32_e32 v26, s15
; GFX9-NEXT:    v_mov_b32_e32 v27, s14
; GFX9-NEXT:    v_mov_b32_e32 v28, s13
; GFX9-NEXT:    v_mov_b32_e32 v29, s12
; GFX9-NEXT:    v_mov_b32_e32 v30, s11
; GFX9-NEXT:    v_mov_b32_e32 v31, s10
; GFX9-NEXT:    v_mov_b32_e32 v32, s9
; GFX9-NEXT:    v_mov_b32_e32 v33, s8
; GFX9-NEXT:    v_mov_b32_e32 v34, s7
; GFX9-NEXT:    v_mov_b32_e32 v35, s6
; GFX9-NEXT:  .LBB28_5: ; %end
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_lshl_or_b32 v14, v14, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v1
; GFX9-NEXT:    v_and_b32_e32 v20, 0xffff, v20
; GFX9-NEXT:    v_and_b32_e32 v21, 0xffff, v21
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; GFX9-NEXT:    v_and_b32_e32 v19, 0xffff, v19
; GFX9-NEXT:    v_lshl_or_b32 v15, v15, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v2
; GFX9-NEXT:    v_lshl_or_b32 v20, v35, 16, v20
; GFX9-NEXT:    v_lshl_or_b32 v21, v34, 16, v21
; GFX9-NEXT:    v_lshl_or_b32 v18, v33, 16, v18
; GFX9-NEXT:    v_lshl_or_b32 v19, v32, 16, v19
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX9-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; GFX9-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; GFX9-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX9-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX9-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX9-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; GFX9-NEXT:    v_lshl_or_b32 v16, v16, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v3
; GFX9-NEXT:    v_lshl_or_b32 v4, v31, 16, v4
; GFX9-NEXT:    v_lshl_or_b32 v5, v30, 16, v5
; GFX9-NEXT:    v_lshl_or_b32 v6, v29, 16, v6
; GFX9-NEXT:    v_lshl_or_b32 v7, v28, 16, v7
; GFX9-NEXT:    v_lshl_or_b32 v8, v27, 16, v8
; GFX9-NEXT:    v_lshl_or_b32 v9, v26, 16, v9
; GFX9-NEXT:    v_lshl_or_b32 v10, v25, 16, v10
; GFX9-NEXT:    v_lshl_or_b32 v11, v24, 16, v11
; GFX9-NEXT:    v_lshl_or_b32 v12, v23, 16, v12
; GFX9-NEXT:    v_lshl_or_b32 v13, v22, 16, v13
; GFX9-NEXT:    v_lshl_or_b32 v17, v17, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, v20
; GFX9-NEXT:    v_mov_b32_e32 v1, v21
; GFX9-NEXT:    v_mov_b32_e32 v2, v18
; GFX9-NEXT:    v_mov_b32_e32 v3, v19
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: s_bitcast_v36i16_to_v36f16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s45, s29, 16
; GFX11-NEXT:    s_lshr_b32 s44, s28, 16
; GFX11-NEXT:    s_lshr_b32 s43, s27, 16
; GFX11-NEXT:    s_lshr_b32 s42, s26, 16
; GFX11-NEXT:    s_lshr_b32 s41, s25, 16
; GFX11-NEXT:    s_lshr_b32 s40, s24, 16
; GFX11-NEXT:    s_lshr_b32 s15, s23, 16
; GFX11-NEXT:    s_lshr_b32 s14, s22, 16
; GFX11-NEXT:    s_lshr_b32 s13, s21, 16
; GFX11-NEXT:    s_lshr_b32 s12, s20, 16
; GFX11-NEXT:    s_lshr_b32 s11, s19, 16
; GFX11-NEXT:    s_lshr_b32 s10, s18, 16
; GFX11-NEXT:    s_lshr_b32 s9, s17, 16
; GFX11-NEXT:    s_lshr_b32 s7, s16, 16
; GFX11-NEXT:    s_lshr_b32 s6, s3, 16
; GFX11-NEXT:    s_lshr_b32 s8, s2, 16
; GFX11-NEXT:    s_lshr_b32 s4, s1, 16
; GFX11-NEXT:    s_lshr_b32 s5, s0, 16
; GFX11-NEXT:    s_mov_b32 s46, 0
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB28_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s46
; GFX11-NEXT:    s_cbranch_vccnz .LBB28_4
; GFX11-NEXT:  .LBB28_2: ; %cmp.true
; GFX11-NEXT:    s_pack_ll_b32_b16 s29, s29, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s28, s28, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s27, s27, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s26, s26, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s25, s25, s41
; GFX11-NEXT:    s_pack_ll_b32_b16 s24, s24, s40
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s23, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s22, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s21, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s20, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s19, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s18, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s17, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s16, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s4
; GFX11-NEXT:    v_pk_add_u16 v13, s29, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v14, s28, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v15, s27, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v16, s26, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v17, s25, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v8, s24, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v9, s15, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v10, s14, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v11, s13, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v12, s12, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v3, s11, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v4, s10, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v5, s9, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v2, s0, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v1, s1, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v0, s2, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v7, s3, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_pk_add_u16 v6, s7, 3 op_sel_hi:[1,0]
; GFX11-NEXT:    v_lshrrev_b32_e32 v35, 16, v2
; GFX11-NEXT:    v_lshrrev_b32_e32 v34, 16, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v33, 16, v0
; GFX11-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX11-NEXT:    v_lshrrev_b32_e32 v31, 16, v6
; GFX11-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX11-NEXT:    v_lshrrev_b32_e32 v29, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v28, 16, v3
; GFX11-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX11-NEXT:    v_lshrrev_b32_e32 v26, 16, v11
; GFX11-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; GFX11-NEXT:    v_lshrrev_b32_e32 v24, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v23, 16, v8
; GFX11-NEXT:    v_lshrrev_b32_e32 v22, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v21, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v20, 16, v15
; GFX11-NEXT:    v_lshrrev_b32_e32 v19, 16, v14
; GFX11-NEXT:    v_lshrrev_b32_e32 v18, 16, v13
; GFX11-NEXT:    s_branch .LBB28_5
; GFX11-NEXT:  .LBB28_3:
; GFX11-NEXT:    s_branch .LBB28_2
; GFX11-NEXT:  .LBB28_4:
; GFX11-NEXT:    v_dual_mov_b32 v13, s29 :: v_dual_mov_b32 v14, s28
; GFX11-NEXT:    v_dual_mov_b32 v15, s27 :: v_dual_mov_b32 v16, s26
; GFX11-NEXT:    v_dual_mov_b32 v17, s25 :: v_dual_mov_b32 v8, s24
; GFX11-NEXT:    v_dual_mov_b32 v9, s23 :: v_dual_mov_b32 v10, s22
; GFX11-NEXT:    v_dual_mov_b32 v11, s21 :: v_dual_mov_b32 v12, s20
; GFX11-NEXT:    v_dual_mov_b32 v3, s19 :: v_dual_mov_b32 v4, s18
; GFX11-NEXT:    v_dual_mov_b32 v5, s17 :: v_dual_mov_b32 v6, s16
; GFX11-NEXT:    v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v0, s2
; GFX11-NEXT:    v_dual_mov_b32 v1, s1 :: v_dual_mov_b32 v2, s0
; GFX11-NEXT:    v_dual_mov_b32 v18, s45 :: v_dual_mov_b32 v19, s44
; GFX11-NEXT:    v_dual_mov_b32 v20, s43 :: v_dual_mov_b32 v21, s42
; GFX11-NEXT:    v_dual_mov_b32 v22, s41 :: v_dual_mov_b32 v23, s40
; GFX11-NEXT:    v_dual_mov_b32 v24, s15 :: v_dual_mov_b32 v25, s14
; GFX11-NEXT:    v_dual_mov_b32 v26, s13 :: v_dual_mov_b32 v27, s12
; GFX11-NEXT:    v_dual_mov_b32 v28, s11 :: v_dual_mov_b32 v29, s10
; GFX11-NEXT:    v_dual_mov_b32 v30, s9 :: v_dual_mov_b32 v31, s7
; GFX11-NEXT:    v_dual_mov_b32 v32, s6 :: v_dual_mov_b32 v33, s8
; GFX11-NEXT:    v_dual_mov_b32 v34, s4 :: v_dual_mov_b32 v35, s5
; GFX11-NEXT:  .LBB28_5: ; %end
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX11-NEXT:    v_and_b32_e32 v36, 0xffff, v0
; GFX11-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshl_or_b32 v0, v35, 16, v2
; GFX11-NEXT:    v_lshl_or_b32 v1, v34, 16, v1
; GFX11-NEXT:    v_lshl_or_b32 v2, v33, 16, v36
; GFX11-NEXT:    v_and_b32_e32 v33, 0xffff, v4
; GFX11-NEXT:    v_and_b32_e32 v34, 0xffff, v3
; GFX11-NEXT:    v_lshl_or_b32 v3, v32, 16, v7
; GFX11-NEXT:    v_lshl_or_b32 v4, v31, 16, v6
; GFX11-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX11-NEXT:    v_lshl_or_b32 v6, v29, 16, v33
; GFX11-NEXT:    v_lshl_or_b32 v7, v28, 16, v34
; GFX11-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX11-NEXT:    v_and_b32_e32 v28, 0xffff, v9
; GFX11-NEXT:    v_and_b32_e32 v29, 0xffff, v8
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX11-NEXT:    v_lshl_or_b32 v8, v27, 16, v12
; GFX11-NEXT:    v_lshl_or_b32 v9, v26, 16, v11
; GFX11-NEXT:    v_lshl_or_b32 v11, v24, 16, v28
; GFX11-NEXT:    v_lshl_or_b32 v12, v23, 16, v29
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX11-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX11-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX11-NEXT:    v_and_b32_e32 v23, 0xffff, v14
; GFX11-NEXT:    v_and_b32_e32 v24, 0xffff, v13
; GFX11-NEXT:    v_lshl_or_b32 v5, v30, 16, v5
; GFX11-NEXT:    v_lshl_or_b32 v10, v25, 16, v10
; GFX11-NEXT:    v_lshl_or_b32 v13, v22, 16, v17
; GFX11-NEXT:    v_lshl_or_b32 v14, v21, 16, v16
; GFX11-NEXT:    v_lshl_or_b32 v15, v20, 16, v15
; GFX11-NEXT:    v_lshl_or_b32 v16, v19, 16, v23
; GFX11-NEXT:    v_lshl_or_b32 v17, v18, 16, v24
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = add <36 x i16> %a, splat (i16 3)
  %a2 = bitcast <36 x i16> %a1 to <36 x half>
  br label %end

cmp.false:
  %a3 = bitcast <36 x i16> %a to <36 x half>
  br label %end

end:
  %phi = phi <36 x half> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x half> %phi
}

define inreg <36 x i16> @s_bitcast_v36f16_to_v36i16_inreg(<36 x half> inreg %a, i32 inreg %b) {
; SI-LABEL: s_bitcast_v36f16_to_v36i16_inreg:
; SI:       ; %bb.0:
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; SI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v23
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v32, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v5
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v9
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v12
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v5, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v20
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v22, s16
; SI-NEXT:    v_cvt_f16_f32_e32 v36, s17
; SI-NEXT:    v_cvt_f16_f32_e32 v19, s18
; SI-NEXT:    v_cvt_f16_f32_e32 v20, s19
; SI-NEXT:    v_cvt_f16_f32_e32 v21, s20
; SI-NEXT:    v_cvt_f16_f32_e32 v35, s21
; SI-NEXT:    v_cvt_f16_f32_e32 v16, s22
; SI-NEXT:    v_cvt_f16_f32_e32 v17, s23
; SI-NEXT:    v_cvt_f16_f32_e32 v18, s24
; SI-NEXT:    v_cvt_f16_f32_e32 v34, s25
; SI-NEXT:    v_cvt_f16_f32_e32 v13, s26
; SI-NEXT:    v_cvt_f16_f32_e32 v14, s27
; SI-NEXT:    v_cvt_f16_f32_e32 v15, s28
; SI-NEXT:    v_cvt_f16_f32_e32 v33, s29
; SI-NEXT:    s_and_b64 s[4:5], vcc, exec
; SI-NEXT:    s_cbranch_scc0 .LBB29_4
; SI-NEXT:  ; %bb.1: ; %cmp.false
; SI-NEXT:    s_cbranch_execnz .LBB29_3
; SI-NEXT:  .LBB29_2: ; %cmp.true
; SI-NEXT:    v_cvt_f32_f16_e32 v2, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v1, v1
; SI-NEXT:    v_cvt_f32_f16_e32 v4, v4
; SI-NEXT:    v_cvt_f32_f16_e32 v3, v3
; SI-NEXT:    v_cvt_f32_f16_e32 v7, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v6, v6
; SI-NEXT:    v_cvt_f32_f16_e32 v10, v10
; SI-NEXT:    v_add_f32_e32 v2, 0x38000000, v2
; SI-NEXT:    v_cvt_f32_f16_e32 v23, v23
; SI-NEXT:    v_cvt_f32_f16_e32 v25, v25
; SI-NEXT:    v_add_f32_e32 v1, 0x38000000, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v2, v2
; SI-NEXT:    v_add_f32_e32 v4, 0x38000000, v4
; SI-NEXT:    v_cvt_f32_f16_e32 v24, v24
; SI-NEXT:    v_cvt_f32_f16_e32 v28, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v1, v1
; SI-NEXT:    v_cvt_f16_f32_e32 v4, v4
; SI-NEXT:    v_add_f32_e32 v3, 0x38000000, v3
; SI-NEXT:    v_add_f32_e32 v7, 0x38000000, v7
; SI-NEXT:    v_cvt_f32_f16_e32 v27, v27
; SI-NEXT:    v_cvt_f32_f16_e32 v14, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v3, v3
; SI-NEXT:    v_cvt_f16_f32_e32 v7, v7
; SI-NEXT:    v_add_f32_e32 v6, 0x38000000, v6
; SI-NEXT:    v_add_f32_e32 v10, 0x38000000, v10
; SI-NEXT:    v_cvt_f32_f16_e32 v13, v13
; SI-NEXT:    v_cvt_f32_f16_e32 v17, v17
; SI-NEXT:    v_cvt_f16_f32_e32 v6, v6
; SI-NEXT:    v_cvt_f16_f32_e32 v10, v10
; SI-NEXT:    v_add_f32_e32 v23, 0x38000000, v23
; SI-NEXT:    v_add_f32_e32 v25, 0x38000000, v25
; SI-NEXT:    v_cvt_f32_f16_e32 v16, v16
; SI-NEXT:    v_cvt_f32_f16_e32 v20, v20
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v2
; SI-NEXT:    v_cvt_f16_f32_e32 v23, v23
; SI-NEXT:    v_cvt_f16_f32_e32 v25, v25
; SI-NEXT:    v_add_f32_e32 v24, 0x38000000, v24
; SI-NEXT:    v_add_f32_e32 v28, 0x38000000, v28
; SI-NEXT:    v_cvt_f32_f16_e32 v19, v19
; SI-NEXT:    v_cvt_f32_f16_e32 v36, v36
; SI-NEXT:    v_cvt_f32_f16_e32 v35, v35
; SI-NEXT:    v_cvt_f32_f16_e32 v34, v34
; SI-NEXT:    v_cvt_f32_f16_e32 v33, v33
; SI-NEXT:    v_cvt_f32_f16_e32 v32, v32
; SI-NEXT:    v_cvt_f32_f16_e32 v31, v31
; SI-NEXT:    v_cvt_f32_f16_e32 v30, v30
; SI-NEXT:    v_cvt_f32_f16_e32 v12, v12
; SI-NEXT:    v_cvt_f32_f16_e32 v9, v9
; SI-NEXT:    v_or_b32_e32 v1, v1, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v4
; SI-NEXT:    v_cvt_f16_f32_e32 v24, v24
; SI-NEXT:    v_cvt_f16_f32_e32 v28, v28
; SI-NEXT:    v_add_f32_e32 v27, 0x38000000, v27
; SI-NEXT:    v_add_f32_e32 v14, 0x38000000, v14
; SI-NEXT:    v_cvt_f32_f16_e32 v22, v22
; SI-NEXT:    v_cvt_f32_f16_e32 v21, v21
; SI-NEXT:    v_cvt_f32_f16_e32 v18, v18
; SI-NEXT:    v_cvt_f32_f16_e32 v15, v15
; SI-NEXT:    v_cvt_f32_f16_e32 v29, v29
; SI-NEXT:    v_cvt_f32_f16_e32 v26, v26
; SI-NEXT:    v_cvt_f32_f16_e32 v11, v11
; SI-NEXT:    v_cvt_f32_f16_e32 v8, v8
; SI-NEXT:    v_cvt_f32_f16_e32 v5, v5
; SI-NEXT:    v_or_b32_e32 v3, v3, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v7
; SI-NEXT:    v_cvt_f16_f32_e32 v27, v27
; SI-NEXT:    v_cvt_f16_f32_e32 v14, v14
; SI-NEXT:    v_add_f32_e32 v13, 0x38000000, v13
; SI-NEXT:    v_add_f32_e32 v17, 0x38000000, v17
; SI-NEXT:    v_or_b32_e32 v6, v6, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v10
; SI-NEXT:    v_cvt_f16_f32_e32 v13, v13
; SI-NEXT:    v_cvt_f16_f32_e32 v17, v17
; SI-NEXT:    v_add_f32_e32 v16, 0x38000000, v16
; SI-NEXT:    v_add_f32_e32 v20, 0x38000000, v20
; SI-NEXT:    v_or_b32_e32 v23, v23, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v25
; SI-NEXT:    v_cvt_f16_f32_e32 v16, v16
; SI-NEXT:    v_cvt_f16_f32_e32 v20, v20
; SI-NEXT:    v_add_f32_e32 v19, 0x38000000, v19
; SI-NEXT:    v_add_f32_e32 v36, 0x38000000, v36
; SI-NEXT:    v_add_f32_e32 v35, 0x38000000, v35
; SI-NEXT:    v_add_f32_e32 v34, 0x38000000, v34
; SI-NEXT:    v_add_f32_e32 v33, 0x38000000, v33
; SI-NEXT:    v_add_f32_e32 v32, 0x38000000, v32
; SI-NEXT:    v_add_f32_e32 v31, 0x38000000, v31
; SI-NEXT:    v_add_f32_e32 v30, 0x38000000, v30
; SI-NEXT:    v_add_f32_e32 v12, 0x38000000, v12
; SI-NEXT:    v_add_f32_e32 v9, 0x38000000, v9
; SI-NEXT:    v_or_b32_e32 v24, v24, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v28
; SI-NEXT:    v_cvt_f16_f32_e32 v19, v19
; SI-NEXT:    v_cvt_f16_f32_e32 v36, v36
; SI-NEXT:    v_add_f32_e32 v22, 0x38000000, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v35, v35
; SI-NEXT:    v_add_f32_e32 v21, 0x38000000, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v34, v34
; SI-NEXT:    v_add_f32_e32 v18, 0x38000000, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v33, v33
; SI-NEXT:    v_add_f32_e32 v15, 0x38000000, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v32, v32
; SI-NEXT:    v_add_f32_e32 v29, 0x38000000, v29
; SI-NEXT:    v_cvt_f16_f32_e32 v31, v31
; SI-NEXT:    v_add_f32_e32 v26, 0x38000000, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v30, v30
; SI-NEXT:    v_add_f32_e32 v11, 0x38000000, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v12, v12
; SI-NEXT:    v_add_f32_e32 v8, 0x38000000, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v9, v9
; SI-NEXT:    v_add_f32_e32 v5, 0x38000000, v5
; SI-NEXT:    v_or_b32_e32 v27, v27, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v14
; SI-NEXT:    v_cvt_f16_f32_e32 v22, v22
; SI-NEXT:    v_cvt_f16_f32_e32 v21, v21
; SI-NEXT:    v_cvt_f16_f32_e32 v18, v18
; SI-NEXT:    v_cvt_f16_f32_e32 v15, v15
; SI-NEXT:    v_cvt_f16_f32_e32 v29, v29
; SI-NEXT:    v_cvt_f16_f32_e32 v26, v26
; SI-NEXT:    v_cvt_f16_f32_e32 v11, v11
; SI-NEXT:    v_cvt_f16_f32_e32 v8, v8
; SI-NEXT:    v_cvt_f16_f32_e32 v5, v5
; SI-NEXT:    v_or_b32_e32 v13, v13, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v17
; SI-NEXT:    v_or_b32_e32 v16, v16, v37
; SI-NEXT:    v_lshlrev_b32_e32 v37, 16, v20
; SI-NEXT:    v_or_b32_e32 v19, v19, v37
; SI-NEXT:    v_lshlrev_b32_e32 v36, 16, v36
; SI-NEXT:    v_lshlrev_b32_e32 v35, 16, v35
; SI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; SI-NEXT:    v_lshlrev_b32_e32 v33, 16, v33
; SI-NEXT:    v_lshlrev_b32_e32 v32, 16, v32
; SI-NEXT:    v_lshlrev_b32_e32 v31, 16, v31
; SI-NEXT:    v_lshlrev_b32_e32 v30, 16, v30
; SI-NEXT:    v_lshlrev_b32_e32 v12, 16, v12
; SI-NEXT:    v_lshlrev_b32_e32 v9, 16, v9
; SI-NEXT:    v_or_b32_e32 v22, v22, v36
; SI-NEXT:    v_or_b32_e32 v21, v21, v35
; SI-NEXT:    v_or_b32_e32 v18, v18, v34
; SI-NEXT:    v_or_b32_e32 v15, v15, v33
; SI-NEXT:    v_or_b32_e32 v29, v29, v32
; SI-NEXT:    v_or_b32_e32 v26, v26, v31
; SI-NEXT:    v_or_b32_e32 v11, v11, v30
; SI-NEXT:    v_or_b32_e32 v8, v8, v12
; SI-NEXT:    v_or_b32_e32 v5, v5, v9
; SI-NEXT:    v_alignbit_b32 v36, v19, v36, 16
; SI-NEXT:    v_alignbit_b32 v35, v16, v35, 16
; SI-NEXT:    v_alignbit_b32 v34, v13, v34, 16
; SI-NEXT:    v_alignbit_b32 v33, v27, v33, 16
; SI-NEXT:    v_alignbit_b32 v32, v24, v32, 16
; SI-NEXT:    v_alignbit_b32 v31, v23, v31, 16
; SI-NEXT:    v_alignbit_b32 v30, v6, v30, 16
; SI-NEXT:    v_alignbit_b32 v12, v3, v12, 16
; SI-NEXT:    v_alignbit_b32 v9, v1, v9, 16
; SI-NEXT:  .LBB29_3: ; %end
; SI-NEXT:    v_and_b32_e32 v22, 0xffff, v22
; SI-NEXT:    v_lshlrev_b32_e32 v36, 16, v36
; SI-NEXT:    v_and_b32_e32 v19, 0xffff, v19
; SI-NEXT:    v_lshlrev_b32_e32 v20, 16, v20
; SI-NEXT:    v_or_b32_e32 v22, v22, v36
; SI-NEXT:    v_or_b32_e32 v19, v19, v20
; SI-NEXT:    v_add_i32_e32 v20, vcc, 4, v0
; SI-NEXT:    buffer_store_dword v22, v0, s[0:3], 0 offen
; SI-NEXT:    buffer_store_dword v19, v20, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v19, 0xffff, v21
; SI-NEXT:    v_lshlrev_b32_e32 v20, 16, v35
; SI-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v17
; SI-NEXT:    v_or_b32_e32 v19, v19, v20
; SI-NEXT:    v_add_i32_e32 v20, vcc, 8, v0
; SI-NEXT:    v_or_b32_e32 v16, v16, v17
; SI-NEXT:    v_add_i32_e32 v17, vcc, 12, v0
; SI-NEXT:    buffer_store_dword v19, v20, s[0:3], 0 offen
; SI-NEXT:    buffer_store_dword v16, v17, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v16, 0xffff, v18
; SI-NEXT:    v_lshlrev_b32_e32 v17, 16, v34
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v14
; SI-NEXT:    v_or_b32_e32 v16, v16, v17
; SI-NEXT:    v_add_i32_e32 v17, vcc, 16, v0
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 20, v0
; SI-NEXT:    buffer_store_dword v16, v17, s[0:3], 0 offen
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v15
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v33
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 24, v0
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v27
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v28
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 28, v0
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v29
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v32
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 32, v0
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v24
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v25
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 36, v0
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v26
; SI-NEXT:    v_lshlrev_b32_e32 v14, 16, v31
; SI-NEXT:    v_or_b32_e32 v13, v13, v14
; SI-NEXT:    v_add_i32_e32 v14, vcc, 40, v0
; SI-NEXT:    buffer_store_dword v13, v14, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v13, 0xffff, v23
; SI-NEXT:    v_lshlrev_b32_e32 v10, 16, v10
; SI-NEXT:    v_or_b32_e32 v10, v13, v10
; SI-NEXT:    v_add_i32_e32 v13, vcc, 44, v0
; SI-NEXT:    buffer_store_dword v10, v13, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v10, 0xffff, v11
; SI-NEXT:    v_lshlrev_b32_e32 v11, 16, v30
; SI-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v7
; SI-NEXT:    v_or_b32_e32 v10, v10, v11
; SI-NEXT:    v_add_i32_e32 v11, vcc, 48, v0
; SI-NEXT:    v_or_b32_e32 v6, v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 52, v0
; SI-NEXT:    buffer_store_dword v10, v11, s[0:3], 0 offen
; SI-NEXT:    buffer_store_dword v6, v7, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v6, 0xffff, v8
; SI-NEXT:    v_lshlrev_b32_e32 v7, 16, v12
; SI-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v4
; SI-NEXT:    v_or_b32_e32 v6, v6, v7
; SI-NEXT:    v_add_i32_e32 v7, vcc, 56, v0
; SI-NEXT:    v_or_b32_e32 v3, v3, v4
; SI-NEXT:    v_add_i32_e32 v4, vcc, 60, v0
; SI-NEXT:    buffer_store_dword v6, v7, s[0:3], 0 offen
; SI-NEXT:    buffer_store_dword v3, v4, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt expcnt(0)
; SI-NEXT:    v_and_b32_e32 v3, 0xffff, v5
; SI-NEXT:    v_lshlrev_b32_e32 v4, 16, v9
; SI-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; SI-NEXT:    v_lshlrev_b32_e32 v2, 16, v2
; SI-NEXT:    v_or_b32_e32 v3, v3, v4
; SI-NEXT:    v_add_i32_e32 v4, vcc, 64, v0
; SI-NEXT:    v_or_b32_e32 v1, v1, v2
; SI-NEXT:    v_add_i32_e32 v0, vcc, 0x44, v0
; SI-NEXT:    buffer_store_dword v3, v4, s[0:3], 0 offen
; SI-NEXT:    buffer_store_dword v1, v0, s[0:3], 0 offen
; SI-NEXT:    s_waitcnt vmcnt(0) expcnt(0)
; SI-NEXT:    s_setpc_b64 s[30:31]
; SI-NEXT:  .LBB29_4:
; SI-NEXT:    s_branch .LBB29_2
;
; VI-LABEL: s_bitcast_v36f16_to_v36i16_inreg:
; VI:       ; %bb.0:
; VI-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; VI-NEXT:    s_lshr_b32 s6, s29, 16
; VI-NEXT:    s_lshr_b32 s7, s28, 16
; VI-NEXT:    s_lshr_b32 s8, s27, 16
; VI-NEXT:    s_lshr_b32 s9, s26, 16
; VI-NEXT:    s_lshr_b32 s10, s25, 16
; VI-NEXT:    s_lshr_b32 s11, s24, 16
; VI-NEXT:    s_lshr_b32 s12, s23, 16
; VI-NEXT:    s_lshr_b32 s13, s22, 16
; VI-NEXT:    s_lshr_b32 s14, s21, 16
; VI-NEXT:    s_lshr_b32 s15, s20, 16
; VI-NEXT:    s_lshr_b32 s40, s19, 16
; VI-NEXT:    s_lshr_b32 s41, s18, 16
; VI-NEXT:    s_lshr_b32 s42, s17, 16
; VI-NEXT:    s_lshr_b32 s43, s16, 16
; VI-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; VI-NEXT:    v_lshrrev_b32_e32 v17, 16, v3
; VI-NEXT:    v_lshrrev_b32_e32 v16, 16, v2
; VI-NEXT:    v_lshrrev_b32_e32 v15, 16, v1
; VI-NEXT:    s_and_b64 s[4:5], vcc, exec
; VI-NEXT:    v_lshrrev_b32_e32 v14, 16, v0
; VI-NEXT:    s_cbranch_scc0 .LBB29_3
; VI-NEXT:  ; %bb.1: ; %cmp.false
; VI-NEXT:    s_cbranch_execnz .LBB29_4
; VI-NEXT:  .LBB29_2: ; %cmp.true
; VI-NEXT:    v_mov_b32_e32 v22, 0x200
; VI-NEXT:    v_add_f16_e32 v20, s16, v22
; VI-NEXT:    v_add_f16_e32 v35, s43, v22
; VI-NEXT:    v_add_f16_e32 v21, s17, v22
; VI-NEXT:    v_add_f16_e32 v34, s42, v22
; VI-NEXT:    v_add_f16_e32 v18, s18, v22
; VI-NEXT:    v_add_f16_e32 v33, s41, v22
; VI-NEXT:    v_add_f16_e32 v19, s19, v22
; VI-NEXT:    v_add_f16_e32 v32, s40, v22
; VI-NEXT:    v_add_f16_e32 v4, s20, v22
; VI-NEXT:    v_add_f16_e32 v31, s15, v22
; VI-NEXT:    v_add_f16_e32 v5, s21, v22
; VI-NEXT:    v_add_f16_e32 v30, s14, v22
; VI-NEXT:    v_add_f16_e32 v6, s22, v22
; VI-NEXT:    v_add_f16_e32 v29, s13, v22
; VI-NEXT:    v_add_f16_e32 v7, s23, v22
; VI-NEXT:    v_add_f16_e32 v28, s12, v22
; VI-NEXT:    v_add_f16_e32 v8, s24, v22
; VI-NEXT:    v_add_f16_e32 v27, s11, v22
; VI-NEXT:    v_add_f16_e32 v9, s25, v22
; VI-NEXT:    v_add_f16_e32 v26, s10, v22
; VI-NEXT:    v_add_f16_e32 v10, s26, v22
; VI-NEXT:    v_add_f16_e32 v25, s9, v22
; VI-NEXT:    v_add_f16_e32 v11, s27, v22
; VI-NEXT:    v_add_f16_e32 v24, s8, v22
; VI-NEXT:    v_add_f16_e32 v12, s28, v22
; VI-NEXT:    v_add_f16_e32 v23, s7, v22
; VI-NEXT:    v_add_f16_e32 v13, s29, v22
; VI-NEXT:    v_add_f16_e32 v22, s6, v22
; VI-NEXT:    v_add_f16_e32 v0, 0x200, v0
; VI-NEXT:    v_add_f16_e32 v14, 0x200, v14
; VI-NEXT:    v_add_f16_e32 v1, 0x200, v1
; VI-NEXT:    v_add_f16_e32 v15, 0x200, v15
; VI-NEXT:    v_add_f16_e32 v2, 0x200, v2
; VI-NEXT:    v_add_f16_e32 v16, 0x200, v16
; VI-NEXT:    v_add_f16_e32 v3, 0x200, v3
; VI-NEXT:    v_add_f16_e32 v17, 0x200, v17
; VI-NEXT:    s_branch .LBB29_5
; VI-NEXT:  .LBB29_3:
; VI-NEXT:    s_branch .LBB29_2
; VI-NEXT:  .LBB29_4:
; VI-NEXT:    v_mov_b32_e32 v22, s6
; VI-NEXT:    v_mov_b32_e32 v13, s29
; VI-NEXT:    v_mov_b32_e32 v23, s7
; VI-NEXT:    v_mov_b32_e32 v12, s28
; VI-NEXT:    v_mov_b32_e32 v24, s8
; VI-NEXT:    v_mov_b32_e32 v11, s27
; VI-NEXT:    v_mov_b32_e32 v25, s9
; VI-NEXT:    v_mov_b32_e32 v10, s26
; VI-NEXT:    v_mov_b32_e32 v26, s10
; VI-NEXT:    v_mov_b32_e32 v9, s25
; VI-NEXT:    v_mov_b32_e32 v27, s11
; VI-NEXT:    v_mov_b32_e32 v8, s24
; VI-NEXT:    v_mov_b32_e32 v28, s12
; VI-NEXT:    v_mov_b32_e32 v7, s23
; VI-NEXT:    v_mov_b32_e32 v29, s13
; VI-NEXT:    v_mov_b32_e32 v6, s22
; VI-NEXT:    v_mov_b32_e32 v30, s14
; VI-NEXT:    v_mov_b32_e32 v5, s21
; VI-NEXT:    v_mov_b32_e32 v31, s15
; VI-NEXT:    v_mov_b32_e32 v4, s20
; VI-NEXT:    v_mov_b32_e32 v32, s40
; VI-NEXT:    v_mov_b32_e32 v19, s19
; VI-NEXT:    v_mov_b32_e32 v33, s41
; VI-NEXT:    v_mov_b32_e32 v18, s18
; VI-NEXT:    v_mov_b32_e32 v34, s42
; VI-NEXT:    v_mov_b32_e32 v21, s17
; VI-NEXT:    v_mov_b32_e32 v35, s43
; VI-NEXT:    v_mov_b32_e32 v20, s16
; VI-NEXT:  .LBB29_5: ; %end
; VI-NEXT:    v_lshlrev_b32_e32 v14, 16, v14
; VI-NEXT:    v_or_b32_sdwa v14, v0, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v15
; VI-NEXT:    v_lshlrev_b32_e32 v35, 16, v35
; VI-NEXT:    v_lshlrev_b32_e32 v34, 16, v34
; VI-NEXT:    v_lshlrev_b32_e32 v33, 16, v33
; VI-NEXT:    v_lshlrev_b32_e32 v32, 16, v32
; VI-NEXT:    v_or_b32_sdwa v15, v1, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v16
; VI-NEXT:    v_or_b32_sdwa v20, v20, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v21, v21, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v18, v18, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v19, v19, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v31, 16, v31
; VI-NEXT:    v_lshlrev_b32_e32 v30, 16, v30
; VI-NEXT:    v_lshlrev_b32_e32 v29, 16, v29
; VI-NEXT:    v_lshlrev_b32_e32 v28, 16, v28
; VI-NEXT:    v_lshlrev_b32_e32 v27, 16, v27
; VI-NEXT:    v_lshlrev_b32_e32 v26, 16, v26
; VI-NEXT:    v_lshlrev_b32_e32 v25, 16, v25
; VI-NEXT:    v_lshlrev_b32_e32 v24, 16, v24
; VI-NEXT:    v_lshlrev_b32_e32 v23, 16, v23
; VI-NEXT:    v_lshlrev_b32_e32 v22, 16, v22
; VI-NEXT:    v_or_b32_sdwa v16, v2, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_lshlrev_b32_e32 v0, 16, v17
; VI-NEXT:    v_or_b32_sdwa v4, v4, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v5, v5, v30 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v6, v6, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v7, v7, v28 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v8, v8, v27 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v9, v9, v26 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v10, v10, v25 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v11, v11, v24 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v12, v12, v23 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v13, v13, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_or_b32_sdwa v17, v3, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
; VI-NEXT:    v_mov_b32_e32 v0, v20
; VI-NEXT:    v_mov_b32_e32 v1, v21
; VI-NEXT:    v_mov_b32_e32 v2, v18
; VI-NEXT:    v_mov_b32_e32 v3, v19
; VI-NEXT:    s_setpc_b64 s[30:31]
;
; GFX9-LABEL: s_bitcast_v36f16_to_v36i16_inreg:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX9-NEXT:    s_lshr_b32 s43, s29, 16
; GFX9-NEXT:    s_lshr_b32 s42, s28, 16
; GFX9-NEXT:    s_lshr_b32 s41, s27, 16
; GFX9-NEXT:    s_lshr_b32 s40, s26, 16
; GFX9-NEXT:    s_lshr_b32 s15, s25, 16
; GFX9-NEXT:    s_lshr_b32 s14, s24, 16
; GFX9-NEXT:    s_lshr_b32 s13, s23, 16
; GFX9-NEXT:    s_lshr_b32 s12, s22, 16
; GFX9-NEXT:    s_lshr_b32 s11, s21, 16
; GFX9-NEXT:    s_lshr_b32 s10, s20, 16
; GFX9-NEXT:    s_lshr_b32 s9, s19, 16
; GFX9-NEXT:    s_lshr_b32 s8, s18, 16
; GFX9-NEXT:    s_lshr_b32 s7, s17, 16
; GFX9-NEXT:    s_lshr_b32 s6, s16, 16
; GFX9-NEXT:    v_cmp_ne_u32_e32 vcc, 0, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v17, 16, v3
; GFX9-NEXT:    v_lshrrev_b32_e32 v16, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 16, v1
; GFX9-NEXT:    s_and_b64 s[4:5], vcc, exec
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v0
; GFX9-NEXT:    s_cbranch_scc0 .LBB29_3
; GFX9-NEXT:  ; %bb.1: ; %cmp.false
; GFX9-NEXT:    s_cbranch_execnz .LBB29_4
; GFX9-NEXT:  .LBB29_2: ; %cmp.true
; GFX9-NEXT:    v_and_b32_e32 v3, 0xffff, v3
; GFX9-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX9-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_lshl_or_b32 v3, v17, 16, v3
; GFX9-NEXT:    s_movk_i32 s4, 0x200
; GFX9-NEXT:    v_lshl_or_b32 v2, v16, 16, v2
; GFX9-NEXT:    v_lshl_or_b32 v1, v15, 16, v1
; GFX9-NEXT:    v_lshl_or_b32 v0, v14, 16, v0
; GFX9-NEXT:    v_pk_add_f16 v3, v3, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v2, v2, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v1, v1, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    v_pk_add_f16 v0, v0, s4 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s29, s43
; GFX9-NEXT:    v_mov_b32_e32 v14, 0x200
; GFX9-NEXT:    v_pk_add_f16 v13, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s28, s42
; GFX9-NEXT:    v_pk_add_f16 v12, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s27, s41
; GFX9-NEXT:    v_pk_add_f16 v11, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s26, s40
; GFX9-NEXT:    v_pk_add_f16 v10, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s25, s15
; GFX9-NEXT:    v_pk_add_f16 v9, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s24, s14
; GFX9-NEXT:    v_pk_add_f16 v8, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s23, s13
; GFX9-NEXT:    v_pk_add_f16 v7, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s22, s12
; GFX9-NEXT:    v_pk_add_f16 v6, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s21, s11
; GFX9-NEXT:    v_pk_add_f16 v5, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s20, s10
; GFX9-NEXT:    v_pk_add_f16 v4, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s19, s9
; GFX9-NEXT:    v_pk_add_f16 v19, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s18, s8
; GFX9-NEXT:    v_pk_add_f16 v18, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s17, s7
; GFX9-NEXT:    v_pk_add_f16 v21, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    s_pack_ll_b32_b16 s4, s16, s6
; GFX9-NEXT:    v_pk_add_f16 v20, s4, v14 op_sel_hi:[1,0]
; GFX9-NEXT:    v_lshrrev_b32_e32 v35, 16, v20
; GFX9-NEXT:    v_lshrrev_b32_e32 v34, 16, v21
; GFX9-NEXT:    v_lshrrev_b32_e32 v33, 16, v18
; GFX9-NEXT:    v_lshrrev_b32_e32 v32, 16, v19
; GFX9-NEXT:    v_lshrrev_b32_e32 v31, 16, v4
; GFX9-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX9-NEXT:    v_lshrrev_b32_e32 v29, 16, v6
; GFX9-NEXT:    v_lshrrev_b32_e32 v28, 16, v7
; GFX9-NEXT:    v_lshrrev_b32_e32 v27, 16, v8
; GFX9-NEXT:    v_lshrrev_b32_e32 v26, 16, v9
; GFX9-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; GFX9-NEXT:    v_lshrrev_b32_e32 v24, 16, v11
; GFX9-NEXT:    v_lshrrev_b32_e32 v23, 16, v12
; GFX9-NEXT:    v_lshrrev_b32_e32 v22, 16, v13
; GFX9-NEXT:    v_lshrrev_b32_e32 v14, 16, v0
; GFX9-NEXT:    v_lshrrev_b32_e32 v15, 16, v1
; GFX9-NEXT:    v_lshrrev_b32_e32 v16, 16, v2
; GFX9-NEXT:    v_lshrrev_b32_e32 v17, 16, v3
; GFX9-NEXT:    s_branch .LBB29_5
; GFX9-NEXT:  .LBB29_3:
; GFX9-NEXT:    s_branch .LBB29_2
; GFX9-NEXT:  .LBB29_4:
; GFX9-NEXT:    v_mov_b32_e32 v13, s29
; GFX9-NEXT:    v_mov_b32_e32 v12, s28
; GFX9-NEXT:    v_mov_b32_e32 v11, s27
; GFX9-NEXT:    v_mov_b32_e32 v10, s26
; GFX9-NEXT:    v_mov_b32_e32 v9, s25
; GFX9-NEXT:    v_mov_b32_e32 v8, s24
; GFX9-NEXT:    v_mov_b32_e32 v7, s23
; GFX9-NEXT:    v_mov_b32_e32 v6, s22
; GFX9-NEXT:    v_mov_b32_e32 v5, s21
; GFX9-NEXT:    v_mov_b32_e32 v4, s20
; GFX9-NEXT:    v_mov_b32_e32 v19, s19
; GFX9-NEXT:    v_mov_b32_e32 v18, s18
; GFX9-NEXT:    v_mov_b32_e32 v21, s17
; GFX9-NEXT:    v_mov_b32_e32 v20, s16
; GFX9-NEXT:    v_mov_b32_e32 v22, s43
; GFX9-NEXT:    v_mov_b32_e32 v23, s42
; GFX9-NEXT:    v_mov_b32_e32 v24, s41
; GFX9-NEXT:    v_mov_b32_e32 v25, s40
; GFX9-NEXT:    v_mov_b32_e32 v26, s15
; GFX9-NEXT:    v_mov_b32_e32 v27, s14
; GFX9-NEXT:    v_mov_b32_e32 v28, s13
; GFX9-NEXT:    v_mov_b32_e32 v29, s12
; GFX9-NEXT:    v_mov_b32_e32 v30, s11
; GFX9-NEXT:    v_mov_b32_e32 v31, s10
; GFX9-NEXT:    v_mov_b32_e32 v32, s9
; GFX9-NEXT:    v_mov_b32_e32 v33, s8
; GFX9-NEXT:    v_mov_b32_e32 v34, s7
; GFX9-NEXT:    v_mov_b32_e32 v35, s6
; GFX9-NEXT:  .LBB29_5: ; %end
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v0
; GFX9-NEXT:    v_lshl_or_b32 v14, v14, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v1
; GFX9-NEXT:    v_and_b32_e32 v20, 0xffff, v20
; GFX9-NEXT:    v_and_b32_e32 v21, 0xffff, v21
; GFX9-NEXT:    v_and_b32_e32 v18, 0xffff, v18
; GFX9-NEXT:    v_and_b32_e32 v19, 0xffff, v19
; GFX9-NEXT:    v_lshl_or_b32 v15, v15, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v2
; GFX9-NEXT:    v_lshl_or_b32 v20, v35, 16, v20
; GFX9-NEXT:    v_lshl_or_b32 v21, v34, 16, v21
; GFX9-NEXT:    v_lshl_or_b32 v18, v33, 16, v18
; GFX9-NEXT:    v_lshl_or_b32 v19, v32, 16, v19
; GFX9-NEXT:    v_and_b32_e32 v4, 0xffff, v4
; GFX9-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX9-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX9-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX9-NEXT:    v_and_b32_e32 v8, 0xffff, v8
; GFX9-NEXT:    v_and_b32_e32 v9, 0xffff, v9
; GFX9-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX9-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX9-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX9-NEXT:    v_and_b32_e32 v13, 0xffff, v13
; GFX9-NEXT:    v_lshl_or_b32 v16, v16, 16, v0
; GFX9-NEXT:    v_and_b32_e32 v0, 0xffff, v3
; GFX9-NEXT:    v_lshl_or_b32 v4, v31, 16, v4
; GFX9-NEXT:    v_lshl_or_b32 v5, v30, 16, v5
; GFX9-NEXT:    v_lshl_or_b32 v6, v29, 16, v6
; GFX9-NEXT:    v_lshl_or_b32 v7, v28, 16, v7
; GFX9-NEXT:    v_lshl_or_b32 v8, v27, 16, v8
; GFX9-NEXT:    v_lshl_or_b32 v9, v26, 16, v9
; GFX9-NEXT:    v_lshl_or_b32 v10, v25, 16, v10
; GFX9-NEXT:    v_lshl_or_b32 v11, v24, 16, v11
; GFX9-NEXT:    v_lshl_or_b32 v12, v23, 16, v12
; GFX9-NEXT:    v_lshl_or_b32 v13, v22, 16, v13
; GFX9-NEXT:    v_lshl_or_b32 v17, v17, 16, v0
; GFX9-NEXT:    v_mov_b32_e32 v0, v20
; GFX9-NEXT:    v_mov_b32_e32 v1, v21
; GFX9-NEXT:    v_mov_b32_e32 v2, v18
; GFX9-NEXT:    v_mov_b32_e32 v3, v19
; GFX9-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: s_bitcast_v36f16_to_v36i16_inreg:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cmp_ne_u32_e32 vcc_lo, 0, v0
; GFX11-NEXT:    s_lshr_b32 s45, s29, 16
; GFX11-NEXT:    s_lshr_b32 s44, s28, 16
; GFX11-NEXT:    s_lshr_b32 s43, s27, 16
; GFX11-NEXT:    s_lshr_b32 s42, s26, 16
; GFX11-NEXT:    s_lshr_b32 s41, s25, 16
; GFX11-NEXT:    s_lshr_b32 s40, s24, 16
; GFX11-NEXT:    s_lshr_b32 s15, s23, 16
; GFX11-NEXT:    s_lshr_b32 s14, s22, 16
; GFX11-NEXT:    s_lshr_b32 s13, s21, 16
; GFX11-NEXT:    s_lshr_b32 s12, s20, 16
; GFX11-NEXT:    s_lshr_b32 s11, s19, 16
; GFX11-NEXT:    s_lshr_b32 s10, s18, 16
; GFX11-NEXT:    s_lshr_b32 s9, s17, 16
; GFX11-NEXT:    s_lshr_b32 s7, s16, 16
; GFX11-NEXT:    s_lshr_b32 s6, s3, 16
; GFX11-NEXT:    s_lshr_b32 s8, s2, 16
; GFX11-NEXT:    s_lshr_b32 s4, s1, 16
; GFX11-NEXT:    s_lshr_b32 s5, s0, 16
; GFX11-NEXT:    s_mov_b32 s46, 0
; GFX11-NEXT:    s_and_b32 s47, vcc_lo, exec_lo
; GFX11-NEXT:    s_cbranch_scc0 .LBB29_3
; GFX11-NEXT:  ; %bb.1: ; %Flow
; GFX11-NEXT:    s_and_not1_b32 vcc_lo, exec_lo, s46
; GFX11-NEXT:    s_cbranch_vccnz .LBB29_4
; GFX11-NEXT:  .LBB29_2: ; %cmp.true
; GFX11-NEXT:    s_pack_ll_b32_b16 s29, s29, s45
; GFX11-NEXT:    s_pack_ll_b32_b16 s28, s28, s44
; GFX11-NEXT:    s_pack_ll_b32_b16 s27, s27, s43
; GFX11-NEXT:    s_pack_ll_b32_b16 s26, s26, s42
; GFX11-NEXT:    s_pack_ll_b32_b16 s25, s25, s41
; GFX11-NEXT:    s_pack_ll_b32_b16 s24, s24, s40
; GFX11-NEXT:    s_pack_ll_b32_b16 s15, s23, s15
; GFX11-NEXT:    s_pack_ll_b32_b16 s14, s22, s14
; GFX11-NEXT:    s_pack_ll_b32_b16 s13, s21, s13
; GFX11-NEXT:    s_pack_ll_b32_b16 s12, s20, s12
; GFX11-NEXT:    s_pack_ll_b32_b16 s11, s19, s11
; GFX11-NEXT:    s_pack_ll_b32_b16 s10, s18, s10
; GFX11-NEXT:    s_pack_ll_b32_b16 s9, s17, s9
; GFX11-NEXT:    s_pack_ll_b32_b16 s7, s16, s7
; GFX11-NEXT:    s_pack_ll_b32_b16 s3, s3, s6
; GFX11-NEXT:    s_pack_ll_b32_b16 s2, s2, s8
; GFX11-NEXT:    s_pack_ll_b32_b16 s0, s0, s5
; GFX11-NEXT:    s_pack_ll_b32_b16 s1, s1, s4
; GFX11-NEXT:    v_pk_add_f16 v13, 0x200, s29 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v14, 0x200, s28 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v15, 0x200, s27 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v16, 0x200, s26 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v17, 0x200, s25 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v8, 0x200, s24 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v9, 0x200, s15 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v10, 0x200, s14 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v11, 0x200, s13 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v12, 0x200, s12 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v3, 0x200, s11 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v4, 0x200, s10 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v5, 0x200, s9 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v2, 0x200, s0 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v1, 0x200, s1 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v0, 0x200, s2 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v7, 0x200, s3 op_sel_hi:[0,1]
; GFX11-NEXT:    v_pk_add_f16 v6, 0x200, s7 op_sel_hi:[0,1]
; GFX11-NEXT:    v_lshrrev_b32_e32 v35, 16, v2
; GFX11-NEXT:    v_lshrrev_b32_e32 v34, 16, v1
; GFX11-NEXT:    v_lshrrev_b32_e32 v33, 16, v0
; GFX11-NEXT:    v_lshrrev_b32_e32 v32, 16, v7
; GFX11-NEXT:    v_lshrrev_b32_e32 v31, 16, v6
; GFX11-NEXT:    v_lshrrev_b32_e32 v30, 16, v5
; GFX11-NEXT:    v_lshrrev_b32_e32 v29, 16, v4
; GFX11-NEXT:    v_lshrrev_b32_e32 v28, 16, v3
; GFX11-NEXT:    v_lshrrev_b32_e32 v27, 16, v12
; GFX11-NEXT:    v_lshrrev_b32_e32 v26, 16, v11
; GFX11-NEXT:    v_lshrrev_b32_e32 v25, 16, v10
; GFX11-NEXT:    v_lshrrev_b32_e32 v24, 16, v9
; GFX11-NEXT:    v_lshrrev_b32_e32 v23, 16, v8
; GFX11-NEXT:    v_lshrrev_b32_e32 v22, 16, v17
; GFX11-NEXT:    v_lshrrev_b32_e32 v21, 16, v16
; GFX11-NEXT:    v_lshrrev_b32_e32 v20, 16, v15
; GFX11-NEXT:    v_lshrrev_b32_e32 v19, 16, v14
; GFX11-NEXT:    v_lshrrev_b32_e32 v18, 16, v13
; GFX11-NEXT:    s_branch .LBB29_5
; GFX11-NEXT:  .LBB29_3:
; GFX11-NEXT:    s_branch .LBB29_2
; GFX11-NEXT:  .LBB29_4:
; GFX11-NEXT:    v_dual_mov_b32 v13, s29 :: v_dual_mov_b32 v14, s28
; GFX11-NEXT:    v_dual_mov_b32 v15, s27 :: v_dual_mov_b32 v16, s26
; GFX11-NEXT:    v_dual_mov_b32 v17, s25 :: v_dual_mov_b32 v8, s24
; GFX11-NEXT:    v_dual_mov_b32 v9, s23 :: v_dual_mov_b32 v10, s22
; GFX11-NEXT:    v_dual_mov_b32 v11, s21 :: v_dual_mov_b32 v12, s20
; GFX11-NEXT:    v_dual_mov_b32 v3, s19 :: v_dual_mov_b32 v4, s18
; GFX11-NEXT:    v_dual_mov_b32 v5, s17 :: v_dual_mov_b32 v6, s16
; GFX11-NEXT:    v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v0, s2
; GFX11-NEXT:    v_dual_mov_b32 v1, s1 :: v_dual_mov_b32 v2, s0
; GFX11-NEXT:    v_dual_mov_b32 v18, s45 :: v_dual_mov_b32 v19, s44
; GFX11-NEXT:    v_dual_mov_b32 v20, s43 :: v_dual_mov_b32 v21, s42
; GFX11-NEXT:    v_dual_mov_b32 v22, s41 :: v_dual_mov_b32 v23, s40
; GFX11-NEXT:    v_dual_mov_b32 v24, s15 :: v_dual_mov_b32 v25, s14
; GFX11-NEXT:    v_dual_mov_b32 v26, s13 :: v_dual_mov_b32 v27, s12
; GFX11-NEXT:    v_dual_mov_b32 v28, s11 :: v_dual_mov_b32 v29, s10
; GFX11-NEXT:    v_dual_mov_b32 v30, s9 :: v_dual_mov_b32 v31, s7
; GFX11-NEXT:    v_dual_mov_b32 v32, s6 :: v_dual_mov_b32 v33, s8
; GFX11-NEXT:    v_dual_mov_b32 v34, s4 :: v_dual_mov_b32 v35, s5
; GFX11-NEXT:  .LBB29_5: ; %end
; GFX11-NEXT:    v_and_b32_e32 v2, 0xffff, v2
; GFX11-NEXT:    v_and_b32_e32 v1, 0xffff, v1
; GFX11-NEXT:    v_and_b32_e32 v36, 0xffff, v0
; GFX11-NEXT:    v_and_b32_e32 v7, 0xffff, v7
; GFX11-NEXT:    v_and_b32_e32 v6, 0xffff, v6
; GFX11-NEXT:    v_lshl_or_b32 v0, v35, 16, v2
; GFX11-NEXT:    v_lshl_or_b32 v1, v34, 16, v1
; GFX11-NEXT:    v_lshl_or_b32 v2, v33, 16, v36
; GFX11-NEXT:    v_and_b32_e32 v33, 0xffff, v4
; GFX11-NEXT:    v_and_b32_e32 v34, 0xffff, v3
; GFX11-NEXT:    v_lshl_or_b32 v3, v32, 16, v7
; GFX11-NEXT:    v_lshl_or_b32 v4, v31, 16, v6
; GFX11-NEXT:    v_and_b32_e32 v12, 0xffff, v12
; GFX11-NEXT:    v_lshl_or_b32 v6, v29, 16, v33
; GFX11-NEXT:    v_lshl_or_b32 v7, v28, 16, v34
; GFX11-NEXT:    v_and_b32_e32 v11, 0xffff, v11
; GFX11-NEXT:    v_and_b32_e32 v28, 0xffff, v9
; GFX11-NEXT:    v_and_b32_e32 v29, 0xffff, v8
; GFX11-NEXT:    v_and_b32_e32 v5, 0xffff, v5
; GFX11-NEXT:    v_and_b32_e32 v10, 0xffff, v10
; GFX11-NEXT:    v_lshl_or_b32 v8, v27, 16, v12
; GFX11-NEXT:    v_lshl_or_b32 v9, v26, 16, v11
; GFX11-NEXT:    v_lshl_or_b32 v11, v24, 16, v28
; GFX11-NEXT:    v_lshl_or_b32 v12, v23, 16, v29
; GFX11-NEXT:    v_and_b32_e32 v17, 0xffff, v17
; GFX11-NEXT:    v_and_b32_e32 v16, 0xffff, v16
; GFX11-NEXT:    v_and_b32_e32 v15, 0xffff, v15
; GFX11-NEXT:    v_and_b32_e32 v23, 0xffff, v14
; GFX11-NEXT:    v_and_b32_e32 v24, 0xffff, v13
; GFX11-NEXT:    v_lshl_or_b32 v5, v30, 16, v5
; GFX11-NEXT:    v_lshl_or_b32 v10, v25, 16, v10
; GFX11-NEXT:    v_lshl_or_b32 v13, v22, 16, v17
; GFX11-NEXT:    v_lshl_or_b32 v14, v21, 16, v16
; GFX11-NEXT:    v_lshl_or_b32 v15, v20, 16, v15
; GFX11-NEXT:    v_lshl_or_b32 v16, v19, 16, v23
; GFX11-NEXT:    v_lshl_or_b32 v17, v18, 16, v24
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  %cmp = icmp eq i32 %b, 0
  br i1 %cmp, label %cmp.true, label %cmp.false

cmp.true:
  %a1 = fadd <36 x half> %a, splat (half 0xH0200)
  %a2 = bitcast <36 x half> %a1 to <36 x i16>
  br label %end

cmp.false:
  %a3 = bitcast <36 x half> %a to <36 x i16>
  br label %end

end:
  %phi = phi <36 x i16> [ %a2, %cmp.true ], [ %a3, %cmp.false ]
  ret <36 x i16> %phi
}
